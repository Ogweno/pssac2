%!PS-Adobe-3.0
%%BoundingBox: 0 0 595 842
%%HiResBoundingBox: 0 0 595 842
%%Title: GMT v5.1.1 (r12968) [64-bit] Document from psxy
%%Creator: GMT5
%%For: savage13
%%DocumentNeededResources: font Helvetica
%%CreationDate: Thu Sep 25 13:58:07 2014
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%EndComments

%%BeginProlog
250 dict begin
/! {bind def} bind def
/# {load def}!
/A /setgray #
/B /setdash #
/C /setrgbcolor #
/D /rlineto #
/E {dup stringwidth pop}!
/F /fill #
/G /rmoveto #
/H /sethsbcolor #
/I /setpattern #
/K /setcmykcolor #
/L /lineto #
/M /moveto #
/N /newpath #
/P /closepath #
/R /rotate #
/S /stroke #
/T /translate #
/U /grestore #
/V /gsave #
/W /setlinewidth #
/Y {findfont exch scalefont setfont}!
/Z /show #
/FP {true charpath flattenpath}!
/MU {matrix setmatrix}!
/MS {/SMat matrix currentmatrix def}!
/MR {SMat setmatrix}!
/edef {exch def}!
/FS {/fc edef /fs {V fc F U} def}!
/FQ {/fs {} def}!
/O0 {/os {N} def}!
/O1 {/os {P S} def}!
/FO {fs os}!
/Sa {M MS dup 0 exch G 0.726542528 mul -72 R dup 0 D 4 {72 R dup 0 D -144 R dup 0 D} repeat pop MR FO}!
/Sb {M dup 0 D exch 0 exch D neg 0 D FO}!
/SB {MS T /BoxR edef /BoxW edef /BoxH edef BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Sc {N 3 -1 roll 0 360 arc FO}!
/Sd {M 4 {dup} repeat 0 G neg dup dup D exch D D FO}!
/Se {N MS T R scale 0 0 1 0 360 arc MR FO}!
/Sg {M MS 22.5 R dup 0 exch G -22.5 R 0.765366865 mul dup 0 D 6 {-45 R dup 0 D} repeat pop MR FO}!
/Sh {M MS dup 0 G -120 R dup 0 D 4 {-60 R dup 0 D} repeat pop MR FO}!
/Si {M MS dup neg 0 exch G 60 R 1.732050808 mul dup 0 D 120 R 0 D MR FO}!
/Sj {M MS R dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D MR FO}!
/Sn {M MS dup 0 exch G -36 R 1.175570505 mul dup 0 D 3 {-72 R dup 0 D} repeat pop MR FO}!
/Sp {N 3 -1 roll 0 360 arc fs N}!
/SP {M {D} repeat FO}!
/Sr {M dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D FO}!
/SR {MS T /BoxR edef /BoxW edef /BoxH edef BoxR BoxW -2 div BoxH -2 div T BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Ss {M 1.414213562 mul dup dup dup -2 div dup G 0 D 0 exch D neg 0 D FO}!
/St {M MS dup 0 exch G -60 R 1.732050808 mul dup 0 D -120 R 0 D MR FO}!
/SV {0 exch M 0 D D D D D 0 D FO}!
/Sv {0 0 M D D 0 D D D D D 0 D D FO}!
/Sw {2 copy M 5 2 roll arc FO}!
/Sx {M 1.414213562 mul 5 {dup} repeat -2 div dup G D neg 0 G neg D S}!
/Sy {M dup 0 exch G dup -2 mul dup 0 exch D S}!
/S+ {M dup 0 G dup -2 mul dup 0 D exch dup G 0 exch D S}!
/S- {M dup 0 G dup -2 mul dup 0 D S}!
/sw {stringwidth pop}!
/sh {V MU 0 0 M FP pathbbox N 4 1 roll pop pop pop U}!
/sd {V MU 0 0 M FP pathbbox N pop pop exch pop U}!
/sH {V MU 0 0 M FP pathbbox N exch pop exch sub exch pop U}!
/sb {E exch sh}!
/bl {}!
/bc {E -2 div 0 G}!
/br {E neg 0 G}!
/ml {dup 0 exch sh -2 div G}!
/mc {dup E -2 div exch sh -2 div G}!
/mr {dup E neg exch sh -2 div G}!
/tl {dup 0 exch sh neg G}!
/tc {dup E -2 div exch sh neg G}!
/tr {dup E neg exch sh neg G}!
/mx {2 copy lt {exch} if pop}!
/PSL_xorig 0 def /PSL_yorig 0 def
/TM {2 copy T PSL_yorig add /PSL_yorig edef PSL_xorig add /PSL_xorig edef}!
/PSL_reencode {findfont dup length dict begin
  {1 index /FID ne {def}{pop pop} ifelse} forall
  exch /Encoding edef currentdict end definefont pop
}!
/PSL_eps_begin {
  /PSL_eps_state save def
  /PSL_dict_count countdictstack def
  /PSL_op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth
  0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
}!
/PSL_eps_end {
  count PSL_op_count sub {pop} repeat
  countdictstack PSL_dict_count sub {end} repeat
  PSL_eps_state restore
}!
/PSL_transp {
  /.setopacityalpha where {pop .setblendmode .setopacityalpha}{
  /pdfmark where {pop [ /BM exch /CA exch dup /ca exch /SetTransparency pdfmark}
  {pop pop} ifelse} ifelse
}!
/ISOLatin1+_Encoding [
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/bullet		/ellipsis	/trademark	/emdash		/endash		/fi		/zcaron
/space		/exclam		/quotedbl	/numbersign	/dollar		/percent	/ampersand	/quoteright
/parenleft	/parenright	/asterisk	/plus		/comma		/minus		/period		/slash
/zero		/one		/two		/three		/four		/five		/six		/seven
/eight		/nine		/colon		/semicolon	/less		/equal		/greater	/question
/at		/A		/B		/C		/D		/E		/F		/G
/H		/I		/J		/K		/L		/M		/N		/O
/P		/Q		/R		/S		/T		/U		/V		/W
/X		/Y		/Z		/bracketleft	/backslash	/bracketright	/asciicircum	/underscore
/quoteleft	/a		/b		/c 		/d		/e		/f		/g
/h		/i		/j		/k		/l		/m		/n		/o
/p		/q		/r		/s		/t		/u		/v		/w
/x		/y		/z		/braceleft	/bar		/braceright	/asciitilde	/scaron
/OE		/dagger		/daggerdbl	/Lslash		/fraction	/guilsinglleft	/Scaron		/guilsinglright
/oe		/Ydieresis	/Zcaron		/lslash		/perthousand	/quotedblbase	/quotedblleft	/quotedblright
/dotlessi	/grave		/acute		/circumflex	/tilde		/macron		/breve		/dotaccent
/dieresis	/quotesinglbase	/ring		/cedilla	/quotesingle	/hungarumlaut	/ogonek		/caron
/space		/exclamdown	/cent		/sterling	/currency	/yen		/brokenbar	/section
/dieresis	/copyright	/ordfeminine	/guillemotleft	/logicalnot	/hyphen		/registered	/macron
/degree		/plusminus	/twosuperior	/threesuperior	/acute		/mu		/paragraph	/periodcentered
/cedilla	/onesuperior	/ordmasculine	/guillemotright	/onequarter	/onehalf	/threequarters	/questiondown
/Agrave		/Aacute		/Acircumflex	/Atilde		/Adieresis	/Aring		/AE		/Ccedilla
/Egrave		/Eacute		/Ecircumflex	/Edieresis	/Igrave		/Iacute		/Icircumflex	/Idieresis
/Eth		/Ntilde		/Ograve		/Oacute		/Ocircumflex	/Otilde		/Odieresis	/multiply
/Oslash		/Ugrave		/Uacute		/Ucircumflex	/Udieresis	/Yacute		/Thorn		/germandbls
/agrave		/aacute		/acircumflex	/atilde		/adieresis	/aring		/ae		/ccedilla
/egrave		/eacute		/ecircumflex	/edieresis	/igrave		/iacute		/icircumflex	/idieresis
/eth		/ntilde		/ograve		/oacute		/ocircumflex	/otilde		/odieresis	/divide
/oslash		/ugrave		/uacute		/ucircumflex	/udieresis	/yacute		/thorn		/ydieresis
] def
/PSL_font_encode 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 array astore def
/F0 {/Helvetica Y}!
/F1 {/Helvetica-Bold Y}!
/F2 {/Helvetica-Oblique Y}!
/F3 {/Helvetica-BoldOblique Y}!
/F4 {/Times-Roman Y}!
/F5 {/Times-Bold Y}!
/F6 {/Times-Italic Y}!
/F7 {/Times-BoldItalic Y}!
/F8 {/Courier Y}!
/F9 {/Courier-Bold Y}!
/F10 {/Courier-Oblique Y}!
/F11 {/Courier-BoldOblique Y}!
/F12 {/Symbol Y}!
/F13 {/AvantGarde-Book Y}!
/F14 {/AvantGarde-BookOblique Y}!
/F15 {/AvantGarde-Demi Y}!
/F16 {/AvantGarde-DemiOblique Y}!
/F17 {/Bookman-Demi Y}!
/F18 {/Bookman-DemiItalic Y}!
/F19 {/Bookman-Light Y}!
/F20 {/Bookman-LightItalic Y}!
/F21 {/Helvetica-Narrow Y}!
/F22 {/Helvetica-Narrow-Bold Y}!
/F23 {/Helvetica-Narrow-Oblique Y}!
/F24 {/Helvetica-Narrow-BoldOblique Y}!
/F25 {/NewCenturySchlbk-Roman Y}!
/F26 {/NewCenturySchlbk-Italic Y}!
/F27 {/NewCenturySchlbk-Bold Y}!
/F28 {/NewCenturySchlbk-BoldItalic Y}!
/F29 {/Palatino-Roman Y}!
/F30 {/Palatino-Italic Y}!
/F31 {/Palatino-Bold Y}!
/F32 {/Palatino-BoldItalic Y}!
/F33 {/ZapfChancery-MediumItalic Y}!
/F34 {/ZapfDingbats Y}!
/F35 {/Ryumin-Light-EUC-H Y}!
/F36 {/Ryumin-Light-EUC-V Y}!
/F37 {/GothicBBB-Medium-EUC-H Y}!
/F38 {/GothicBBB-Medium-EUC-V Y}!
/PSL_pathtextdict 26 dict def
/PSL_pathtext
  {PSL_pathtextdict begin
    /textheight exch def
    /just exch def
    /offset exch def
    /str exch def
    /pathdist 0 def
    /setdist offset def
    /charcount 0 def
    /justy just 4 idiv textheight mul 2 div neg def
    V flattenpath
	{movetoproc} {linetoproc}
	{curvetoproc} {closepathproc}
	pathforall
    U N
    end
  } def
PSL_pathtextdict begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
  } def
/linetoproc
  { /oldx newx def /oldy newy def
    /newy exch def /newx exch def
    /dx newx oldx sub def
    /dy newy oldy sub def
    /dist dx dup mul dy dup mul add sqrt def
    dist 0 ne
    { /dsx dx dist div ovr mul def
      /dsy dy dist div ovr mul def
      oldx dsx add oldy dsy add transform
      /cpy exch def /cpx exch def
      /pathdist pathdist dist add def
      {setdist pathdist le
	  {charcount str length lt
	      {setchar} {exit} ifelse}
	  { /ovr setdist pathdist sub def
	    exit}
	  ifelse
      } loop
    } if
  } def
/curvetoproc
  { (ERROR: No curveto's after flattenpath!)
    print
  } def
/closepathproc
  {firstx firsty linetoproc
    firstx firsty movetoproc
  } def
/setchar
  { /char str charcount 1 getinterval def
    /charcount charcount 1 add def
    /charwidth char stringwidth pop def
    V cpx cpy itransform T
      dy dx atan R
      0 justy M
      char show
      0 justy neg G
      currentpoint transform
      /cpy exch def /cpx exch def
    U /setdist setdist charwidth add def
  } def
end
/PSL_curved_text_labels
{ /bits exch def
  /PSL_clippath bits 1 and 1 eq def
  /PSL_placetext bits 2 and 0 eq def
  /PSL_strokeline bits 4 and 4 eq def
  /PSL_firstcall bits 32 and 32 eq def
  /PSL_lastcall bits 64 and 64 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_n1 PSL_n 1 sub def
  /PSL_m1 PSL_m 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_CT_calcstringwidth
  PSL_CT_calclinedist
  PSL_CT_addcutpoints
  PSL_clippath PSL_firstcall and
  {clipsave N clippath} if
  PSL_setlinepen
  /PSL_nn1 PSL_nn 1 sub def
  /n 0 def
  /k 0 def
  /j 0 def
  /PSL_seg 0 def
  /PSL_xp PSL_nn array def
  /PSL_yp PSL_nn array def
  PSL_xp 0 PSL_xx 0 get put
  PSL_yp 0 PSL_yy 0 get put
  1 1 PSL_nn1
  { /i exch def
    /node_type PSL_kind i get def
    /j j 1 add def
    PSL_xp j PSL_xx i get put
    PSL_yp j PSL_yy i get put
    node_type 1 eq
    {n 0 eq
      {PSL_CT_drawline}
      {	PSL_CT_reversepath
	PSL_CT_textline} ifelse
      /j 0 def
      PSL_xp j PSL_xx i get put
      PSL_yp j PSL_yy i get put
    } if
  } for
  n 0 eq {PSL_CT_drawline} if
  PSL_lastcall
  {PSL_clippath
    {PSL_clip} if N
  } if
} def
/PSL_CT_textline
{PSL_placetext
  {PSL_clippath
    {PSL_CT_clippath} {PSL_CT_placelabel} ifelse
  } if
  /n 0 def /k k 1 add def PSL_setlinepen
} def
/PSL_CT_calcstringwidth
{ /PSL_width PSL_m array def
  0 1 PSL_m1
  { /i exch def
    PSL_width i PSL_str i get stringwidth pop put
  } for
} def
/PSL_CT_calclinedist
{ /PSL_newx PSL_x 0 get def
  /PSL_newy PSL_y 0 get def
  /dist 0.0 def
  /PSL_dist PSL_n array def
  PSL_dist 0 0.0 put
  1 1 PSL_n1
  { /i exch def
    /PSL_oldx PSL_newx def
    /PSL_oldy PSL_newy def
    /PSL_newx PSL_x i get def
    /PSL_newy PSL_y i get def
    /dx PSL_newx PSL_oldx sub def
    /dy PSL_newy PSL_oldy sub def
    /dist dist dx dx mul dy dy mul add sqrt add def
    PSL_dist i dist put
  } for
} def
/PSL_CT_addcutpoints
{ /k 0 def
  /PSL_nc PSL_m 2 mul 1 add def
  /PSL_cuts PSL_nc array def
  /PSL_nc1 PSL_nc 1 sub def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node i get get def
    /halfwidth PSL_width i get 2 div PSL_gap_x add def
    PSL_cuts k dist halfwidth sub put
    /k k 1 add def
    PSL_cuts k dist halfwidth add put
    /k k 1 add def
  } for
  PSL_cuts k 100000.0 put
  /PSL_nn PSL_n PSL_m 2 mul add def
  /PSL_xx PSL_nn array def
  /PSL_yy PSL_nn array def
  /PSL_kind PSL_nn array def
  /j 0 def
  /k 0 def
  /dist 0.0 def
  0 1 PSL_n1
  { /i exch def
    /last_dist dist def
    /dist PSL_dist i get def
    k 1 PSL_nc1
    { /kk exch def
      /this_cut PSL_cuts kk get def
      dist this_cut gt
      { /ds dist last_dist sub def
	/f ds 0.0 eq {0.0} {dist this_cut sub ds div} ifelse def
	/i1 i 0 eq {0} {i 1 sub} ifelse def
	PSL_xx j PSL_x i get dup PSL_x i1 get sub f mul sub put
	PSL_yy j PSL_y i get dup PSL_y i1 get sub f mul sub put
	PSL_kind j 1 put
	/j j 1 add def
	/k k 1 add def
      } if
    } for
    dist PSL_cuts k get le
    {PSL_xx j PSL_x i get put PSL_yy j PSL_y i get put
      PSL_kind j 0 put
      /j j 1 add def
    } if
  } for
} def
/PSL_CT_reversepath
{PSL_xp j get PSL_xp 0 get lt
  {0 1 j 2 idiv
    { /left exch def
      /right j left sub def
      /tmp PSL_xp left get def
      PSL_xp left PSL_xp right get put
      PSL_xp right tmp put
      /tmp PSL_yp left get def
      PSL_yp left PSL_yp right get put
      PSL_yp right tmp put
    } for
  } if
} def
/PSL_CT_placelabel
{
  PSL_usebox
  {PSL_CT_clippath
    PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  } if
  PSL_settxtrgb PSL_CT_placeline PSL_str k get PSL_gap_x PSL_just PSL_height PSL_pathtext
} def
/PSL_CT_clippath
{
  /H PSL_height 2 div PSL_gap_y add def
  /xoff j 1 add array def
  /yoff j 1 add array def
  /angle 0 def
  0 1 j {
    /ii exch def
    /x PSL_xp ii get def
    /y PSL_yp ii get def
    ii 0 eq {
      /x1 PSL_xp 1 get def
      /y1 PSL_yp 1 get def
      /dx x1 x sub def
      /dy y1 y sub def
    }
    { /i1 ii 1 sub def
      /x1 PSL_xp i1 get def
      /y1 PSL_yp i1 get def
      /dx x x1 sub def
      /dy y y1 sub def
    } ifelse
    dx 0.0 ne dy 0.0 ne and
    { /angle dy dx atan 90 add def} if
    /sina angle sin def
    /cosa angle cos def
    xoff ii H cosa mul put
    yoff ii H sina mul put
  } for
  PSL_xp 0 get xoff 0 get add PSL_yp 0 get yoff 0 get add M
  1 1 j {
    /ii exch def
    PSL_xp ii get xoff ii get add PSL_yp ii get yoff ii get add L
  } for
  j -1 0 {
    /ii exch def
    PSL_xp ii get xoff ii get sub PSL_yp ii get yoff ii get sub L
  } for P
} def
/PSL_CT_drawline
{
  /str 20 string def
  PSL_strokeline
  {PSL_CT_placeline PSL_setlinepen S} if
  /PSL_seg PSL_seg 1 add def
  /n 1 def
} def
/PSL_CT_placeline
{PSL_xp 0 get PSL_yp 0 get M
  1 1 j { /ii exch def PSL_xp ii get PSL_yp ii get L} for
} def
/PSL_straight_text_labels
{
  /bits exch def
  /PSL_clippath bits 1 and 0 eq def
  /PSL_rounded bits 16 and 16 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_m1 PSL_m 1 sub def
  /PSL_justx PSL_just 4 mod 1 sub 2 div neg def
  /PSL_justy PSL_just 4 idiv PSL_height mul 2 div neg def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_clippath
  {PSL_ST_clippath}
  {PSL_usebox {PSL_ST_clippath} if
    PSL_ST_placelabel
  } ifelse
} def
/PSL_ST_placelabel
{PSL_settxtrgb
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    V PSL_txt_x k get PSL_txt_y k get T
    PSL_angle k get R
    /BoxW PSL_str k get stringwidth pop def
    BoxW PSL_justx mul PSL_justy M
    PSL_str k get show
    U
  } for
} def
/PSL_ST_clippath
{N
  PSL_usebox not {clipsave clippath} if
  PSL_rounded {PSL_ST_clippath_round} {PSL_ST_clippath_rect} ifelse
  PSL_usebox
  {PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  }
  {PSL_clip
  } ifelse
  N
} def
/PSL_ST_clippath_rect
{
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /DelY BoxH BoxH 0 3 array astore def
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /MAT PSL_angle k get matrix R def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 0 BoxW PSL_justx mul add def
    /y0 0 PSL_justy add PSL_gap_y sub def
    /DelX 0 BoxW BoxW 3 array astore def
    x0 y0 MAT transform
    /dy exch def /dx exch def
    xp dx add yp dy add M
    0 1 2
    {
      /ii exch def
      x0 DelX ii get add y0 DelY ii get add MAT transform
      /dy exch def /dx exch def
      xp dx add yp dy add L
    } for P
  } for
} def
/PSL_ST_clippath_round
{
  /PSL_justy2 PSL_just 4 idiv 2 div neg def
  /BoxR PSL_gap_x PSL_gap_y lt {PSL_gap_x} {PSL_gap_y} ifelse def
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /y0 PSL_height PSL_gap_y 2 mul add PSL_justy2 mul def
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 BoxW PSL_justx mul def
    xp yp T PSL_angle k get R x0 y0 T
    BoxR 0 M
    BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct P
    x0 neg y0 neg T PSL_angle k get neg R xp neg yp neg T
  } for
} def
/PSL_nclip 0 def
/PSL_clip {clip /PSL_nclip PSL_nclip 1 add def} def
/PSL_eoclip {eoclip /PSL_nclip PSL_nclip 1 add def} def
/PSL_cliprestore {cliprestore /PSL_nclip PSL_nclip 1 sub def} def
%%EndProlog

%%BeginSetup
/PSLevel /languagelevel where {pop languagelevel} {1} ifelse def
PSLevel 1 gt { << /PageSize [595 842] /ImagingBBox null >> setpagedevice } if
%%EndSetup

%%Page: 1 1

%%BeginPageSetup
V 0.06 0.06 scale
%%EndPageSetup

/PSL_page_xsize 9917 def
/PSL_page_ysize 14033 def
0 A
FQ
O0
1200 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1S -K
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
1779 524 M
6 0 D
5 -1 D
5 0 D
5 1 D
5 1 D
5 1 D
5 1 D
6 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 1 D
6 0 D
5 1 D
5 0 D
5 0 D
5 0 D
5 1 D
5 0 D
6 -1 D
5 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
6 0 D
5 1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
5 -2 D
5 0 D
6 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 0 D
5 0 D
6 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 -1 D
5 1 D
5 -2 D
5 0 D
5 -1 D
5 2 D
6 0 D
5 1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 -1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
5 -1 D
6 1 D
5 0 D
5 0 D
5 -1 D
5 -2 D
5 0 D
5 0 D
6 0 D
5 0 D
5 2 D
5 1 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 2 D
5 0 D
5 0 D
5 0 D
5 1 D
6 1 D
5 -3 D
5 -9 D
5 -32 D
5 -96 D
5 -214 D
3 -167 D
2327 0 M
3 189 D
5 681 D
3 330 D
2349 1200 M
1 -75 D
5 -581 D
6 -231 D
5 131 D
5 171 D
5 19 D
5 -64 D
5 -41 D
5 -48 D
6 -103 D
5 -51 D
5 146 D
5 219 D
5 -76 D
5 -488 D
2 -128 D
2436 0 M
2 221 D
5 620 D
5 213 D
5 -196 D
5 -250 D
5 -34 D
6 148 D
5 144 D
5 -4 D
5 -208 D
5 -313 D
5 -174 D
5 146 D
6 365 D
5 253 D
5 -94 D
5 -347 D
5 -306 D
5 -76 D
5 108 D
6 127 D
5 41 D
5 14 D
5 91 D
5 141 D
5 71 D
5 -62 D
6 -152 D
5 -101 D
5 63 D
5 192 D
5 146 D
5 -60 D
5 -225 D
6 -157 D
5 118 D
5 325 D
5 235 D
5 -83 D
5 -291 D
5 -184 D
6 40 D
5 44 D
5 -187 D
5 -318 D
2 -44 D
2671 0 M
3 126 D
5 356 D
6 182 D
5 -97 D
5 -207 D
5 -150 D
5 -68 D
5 21 D
5 190 D
6 369 D
5 345 D
5 52 D
5 -273 D
5 -348 D
5 -156 D
5 100 D
6 246 D
5 226 D
5 60 D
5 -172 D
5 -319 D
5 -261 D
5 -49 D
6 183 D
5 331 D
5 375 D
3 138 D
2813 1200 M
0 -7 D
5 -536 D
5 -657 D
2837 0 M
2 170 D
5 480 D
5 225 D
5 -126 D
5 -326 D
6 -265 D
5 -58 D
5 124 D
5 183 D
5 107 D
5 -38 D
5 -127 D
6 -68 D
5 139 D
5 398 D
4 382 D
2930 1200 M
1 -134 D
6 -603 D
5 -432 D
2 -31 D
2949 0 M
3 113 D
5 197 D
5 54 D
5 -87 D
6 -143 D
5 -108 D
5 12 D
5 178 D
5 262 D
5 198 D
5 100 D
6 97 D
5 154 D
5 158 D
1 15 D
3027 1200 M
2 -27 D
5 -255 D
5 -350 D
6 -318 D
5 -213 D
1 -37 D
3082 0 M
4 229 D
5 300 D
5 253 D
5 247 D
4 171 D
3118 1200 M
4 -158 D
5 -234 D
5 -136 D
5 -81 D
5 -114 D
5 -190 D
6 -240 D
1 -47 D
3169 0 M
4 323 D
5 401 D
5 287 D
6 157 D
1 32 D
3213 1200 M
1 -69 D
5 -665 D
4 -466 D
3239 0 M
1 53 D
5 479 D
5 355 D
5 162 D
6 -40 D
5 -181 D
5 -229 D
5 -208 D
5 -179 D
5 -166 D
2 -46 D
3313 0 M
4 191 D
5 296 D
5 206 D
6 18 D
5 -105 D
5 -41 D
5 147 D
5 298 D
3 190 D
3383 1200 M
1 -100 D
5 -423 D
5 -332 D
5 -208 D
6 -109 D
1 -28 D
3443 0 M
3 199 D
5 266 D
5 233 D
5 266 D
5 236 D
3479 1200 M
3 -136 D
5 -378 D
5 -282 D
5 -75 D
5 86 D
5 106 D
6 -8 D
5 -136 D
5 -146 D
5 -23 D
5 156 D
5 258 D
5 213 D
6 63 D
5 -68 D
5 -110 D
5 -75 D
5 -50 D
5 -80 D
5 -121 D
6 -105 D
5 -35 D
5 31 D
5 36 D
5 9 D
5 17 D
5 87 D
6 161 D
5 165 D
5 76 D
5 -45 D
5 -108 D
5 -84 D
5 -16 D
6 36 D
5 38 D
5 4 D
5 -17 D
5 17 D
5 53 D
5 23 D
6 -78 D
5 -164 D
5 -160 D
5 -57 D
5 62 D
5 101 D
5 35 D
6 -71 D
5 -107 D
5 -53 D
5 35 D
5 73 D
5 44 D
5 4 D
6 7 D
5 67 D
5 142 D
5 179 D
5 138 D
5 34 D
5 -73 D
6 -139 D
5 -167 D
5 -157 D
5 -109 D
5 -37 D
5 29 D
5 77 D
6 104 D
5 98 D
5 54 D
5 1 D
5 -19 D
5 -5 D
5 12 D
6 2 D
5 -35 D
5 -64 D
5 -50 D
5 -3 D
5 37 D
5 26 D
6 -31 D
5 -70 D
5 -70 D
5 -38 D
5 -22 D
5 -12 D
5 15 D
6 68 D
5 116 D
5 117 D
5 71 D
5 1 D
5 -49 D
5 -67 D
6 -58 D
5 -30 D
5 -9 D
5 2 D
5 5 D
5 6 D
5 14 D
6 16 D
5 0 D
5 -29 D
5 -46 D
5 -34 D
5 -3 D
5 18 D
6 31 D
5 41 D
5 51 D
5 56 D
5 43 D
5 11 D
5 -29 D
6 -60 D
5 -76 D
5 -73 D
5 -50 D
5 -11 D
5 13 D
5 16 D
6 10 D
5 25 D
5 64 D
5 102 D
5 102 D
5 65 D
5 17 D
6 -5 D
5 -10 D
5 -26 D
5 -67 D
5 -105 D
5 -95 D
5 -35 D
6 31 D
5 41 D
5 -10 D
5 -74 D
5 -82 D
5 -25 D
5 50 D
6 81 D
5 49 D
5 -12 D
5 -50 D
5 -31 D
5 30 D
5 78 D
6 78 D
5 39 D
5 5 D
5 12 D
5 54 D
5 84 D
5 68 D
6 5 D
5 -53 D
5 -81 D
5 -64 D
5 -44 D
5 -45 D
5 -66 D
6 -86 D
5 -75 D
5 -39 D
5 -11 D
5 -2 D
5 -6 D
5 -7 D
6 0 D
5 25 D
5 58 D
5 76 D
5 62 D
5 30 D
5 11 D
6 15 D
5 18 D
5 7 D
5 -16 D
5 -41 D
5 -45 D
5 -23 D
6 9 D
5 29 D
5 21 D
5 -2 D
5 -20 D
5 -17 D
5 0 D
6 17 D
5 27 D
5 33 D
5 31 D
5 27 D
5 20 D
5 10 D
6 -6 D
5 -20 D
5 -18 D
5 -4 D
5 10 D
5 10 D
5 -2 D
6 -9 D
5 -6 D
5 -7 D
5 -18 D
5 -39 D
5 -46 D
5 -28 D
6 15 D
5 46 D
5 52 D
5 25 D
5 -11 D
5 -33 D
5 -38 D
6 -38 D
5 -36 D
5 -25 D
5 -16 D
5 -5 D
5 3 D
5 16 D
6 28 D
5 37 D
5 35 D
5 21 D
5 12 D
5 20 D
5 35 D
6 39 D
5 12 D
5 -24 D
5 -43 D
5 -38 D
5 -26 D
5 -16 D
6 -14 D
5 -12 D
5 -8 D
5 -9 D
5 -9 D
5 -10 D
5 -7 D
6 -6 D
5 3 D
5 19 D
5 35 D
5 39 D
5 30 D
5 19 D
6 10 D
5 8 D
5 2 D
5 -6 D
5 -11 D
5 -8 D
5 2 D
6 7 D
5 -1 D
5 -19 D
5 -39 D
5 -42 D
5 -31 D
5 -9 D
6 17 D
5 28 D
5 32 D
5 23 D
5 15 D
5 4 D
5 -6 D
6 -10 D
5 -9 D
5 -3 D
5 0 D
5 -1 D
5 -5 D
5 -7 D
6 1 D
5 18 D
5 28 D
5 22 D
5 0 D
5 -20 D
5 -26 D
6 -16 D
5 -3 D
5 2 D
5 -7 D
5 -23 D
5 -32 D
5 -27 D
6 -16 D
5 -6 D
5 -4 D
5 1 D
5 15 D
5 35 D
5 45 D
6 35 D
5 19 D
5 6 D
5 5 D
5 4 D
5 0 D
5 -8 D
6 -13 D
5 -15 D
5 -12 D
5 -4 D
5 4 D
5 11 D
5 6 D
6 -2 D
5 -14 D
5 -19 D
5 -14 D
5 -4 D
5 2 D
5 4 D
6 -1 D
5 -6 D
5 -11 D
5 -16 D
5 -10 D
5 3 D
5 17 D
6 27 D
5 24 D
5 17 D
5 6 D
5 4 D
5 9 D
5 11 D
6 8 D
5 0 D
5 -8 D
5 -5 D
5 5 D
5 12 D
5 10 D
6 -3 D
5 -19 D
5 -29 D
5 -30 D
5 -28 D
5 -19 D
5 -3 D
6 12 D
5 23 D
5 22 D
5 13 D
5 -1 D
5 -9 D
5 -6 D
6 3 D
5 12 D
5 13 D
5 1 D
5 -10 D
5 -12 D
5 -2 D
6 7 D
5 1 D
5 -13 D
5 -27 D
5 -22 D
5 -5 D
5 14 D
6 17 D
5 8 D
5 -3 D
5 0 D
5 17 D
5 33 D
5 39 D
6 24 D
5 5 D
5 -9 D
5 -7 D
5 -2 D
5 0 D
5 -7 D
6 -17 D
5 -21 D
5 -16 D
5 -10 D
5 -8 D
5 -11 D
5 -12 D
6 -4 D
5 10 D
5 16 D
5 12 D
5 8 D
5 4 D
5 2 D
6 0 D
5 -3 D
5 -10 D
5 -11 D
5 -11 D
5 -7 D
5 0 D
6 4 D
5 4 D
5 2 D
5 6 D
5 8 D
5 8 D
5 1 D
6 -6 D
5 -7 D
5 1 D
5 6 D
5 6 D
5 -3 D
5 -5 D
6 -1 D
5 5 D
5 6 D
5 1 D
5 -5 D
5 -6 D
5 -2 D
6 5 D
5 10 D
5 9 D
5 5 D
5 -1 D
5 -3 D
5 -4 D
6 -4 D
5 -4 D
5 -5 D
5 0 D
5 6 D
5 8 D
5 8 D
6 -1 D
5 -11 D
5 -17 D
5 -15 D
5 -10 D
5 -6 D
5 -2 D
6 -1 D
5 -1 D
5 -3 D
5 -3 D
5 0 D
5 5 D
5 7 D
6 3 D
5 1 D
5 -1 D
5 1 D
5 3 D
5 4 D
5 2 D
6 2 D
5 1 D
5 2 D
5 4 D
5 9 D
5 17 D
5 20 D
6 16 D
5 2 D
5 -10 D
5 -18 D
5 -12 D
5 2 D
5 13 D
6 10 D
5 2 D
5 -8 D
5 -9 D
5 -6 D
5 -2 D
5 -1 D
6 0 D
5 4 D
5 6 D
5 2 D
5 -5 D
5 -9 D
5 -11 D
6 -8 D
5 -2 D
5 -2 D
5 -5 D
5 -7 D
5 -4 D
5 5 D
6 10 D
5 9 D
5 4 D
5 -3 D
5 -3 D
5 -1 D
5 2 D
6 1 D
5 -4 D
5 -5 D
5 -6 D
5 -3 D
5 3 D
5 5 D
6 4 D
5 3 D
5 2 D
5 1 D
5 4 D
5 7 D
5 6 D
6 3 D
5 4 D
5 3 D
5 3 D
5 -3 D
5 -9 D
5 -10 D
6 -9 D
5 -4 D
5 -2 D
5 -3 D
5 -6 D
5 -1 D
5 3 D
6 6 D
5 5 D
5 2 D
5 -1 D
5 -1 D
5 -2 D
5 -2 D
6 -6 D
5 -11 D
5 -10 D
5 -9 D
5 -3 D
5 -2 D
5 -2 D
6 -5 D
5 -7 D
5 -5 D
5 0 D
5 3 D
5 4 D
5 5 D
6 6 D
5 8 D
5 12 D
5 14 D
5 10 D
5 7 D
5 0 D
6 -4 D
5 -4 D
5 1 D
5 7 D
5 9 D
5 6 D
5 4 D
6 0 D
5 2 D
5 4 D
5 2 D
5 -4 D
5 -9 D
5 -8 D
6 -5 D
5 -1 D
5 3 D
5 6 D
5 6 D
5 4 D
5 1 D
6 -1 D
5 -3 D
5 -3 D
5 -9 D
5 -14 D
5 -15 D
5 -11 D
6 1 D
5 10 D
5 15 D
5 14 D
5 10 D
5 6 D
5 1 D
6 -1 D
5 -2 D
5 -1 D
5 -2 D
5 -2 D
5 -5 D
5 -4 D
6 -1 D
5 4 D
5 8 D
5 10 D
5 8 D
5 0 D
5 -4 D
6 -6 D
5 -5 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
6 5 D
5 5 D
5 2 D
5 -5 D
5 -8 D
5 -9 D
5 -7 D
6 -3 D
5 0 D
5 1 D
5 0 D
5 -2 D
5 -3 D
5 -3 D
6 3 D
5 6 D
5 8 D
5 5 D
5 1 D
5 -2 D
5 -4 D
6 -4 D
5 -3 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
6 1 D
5 0 D
5 -3 D
5 -5 D
5 -4 D
5 -1 D
5 3 D
6 8 D
5 10 D
5 13 D
5 10 D
5 7 D
5 3 D
5 -1 D
6 -4 D
5 -5 D
5 -4 D
5 -4 D
5 0 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 7200 0 D S
8 W
0 0 M 0 -83 D S
1029 0 M 0 -83 D S
2057 0 M 0 -83 D S
3086 0 M 0 -83 D S
4114 0 M 0 -83 D S
5143 0 M 0 -83 D S
6171 0 M 0 -83 D S
7200 0 M 0 -83 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(6) sh mx
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(6) bc Z
1029 PSL_A0_y MM
(8) bc Z
2057 PSL_A0_y MM
(10) bc Z
3086 PSL_A0_y MM
(12) bc Z
4114 PSL_A0_y MM
(14) bc Z
5143 PSL_A0_y MM
(16) bc Z
6171 PSL_A0_y MM
(18) bc Z
7200 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1877
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 9 def
/PSL_n1 8 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-K) (\>) ($\{PS\})
9 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0
9 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167
9 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 0
9 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0
9 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0
9 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 9 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 9 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -O -K -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1878
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
1779 601 M
6 0 D
5 -1 D
5 0 D
5 1 D
5 1 D
5 1 D
5 1 D
6 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 1 D
6 0 D
5 1 D
5 0 D
5 0 D
5 0 D
5 1 D
5 0 D
6 -1 D
5 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
6 0 D
5 1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
5 -2 D
5 0 D
6 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 0 D
5 0 D
6 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 -1 D
5 1 D
5 -2 D
5 0 D
5 -1 D
5 2 D
6 0 D
5 1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 -1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
5 -1 D
6 1 D
5 0 D
5 0 D
5 -1 D
5 -2 D
5 0 D
5 0 D
6 0 D
5 0 D
5 2 D
5 1 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 2 D
5 0 D
5 0 D
5 0 D
5 1 D
6 1 D
5 -3 D
5 -10 D
5 -32 D
5 -95 D
5 -215 D
5 -243 D
2326 0 M
4 266 D
5 681 D
2 253 D
2350 1200 M
5 -579 D
6 -232 D
5 131 D
5 171 D
5 19 D
5 -63 D
5 -41 D
5 -49 D
6 -102 D
5 -52 D
5 146 D
5 220 D
5 -77 D
5 -488 D
2 -204 D
2435 0 M
3 298 D
5 619 D
5 214 D
5 -196 D
5 -251 D
5 -33 D
6 148 D
5 144 D
5 -4 D
5 -209 D
5 -313 D
5 -174 D
5 146 D
6 365 D
5 254 D
5 -95 D
5 -347 D
5 -305 D
5 -77 D
5 109 D
6 126 D
5 42 D
5 14 D
5 90 D
5 141 D
5 72 D
5 -63 D
6 -152 D
5 -100 D
5 62 D
5 192 D
5 146 D
5 -59 D
5 -226 D
6 -156 D
5 117 D
5 325 D
5 235 D
5 -82 D
5 -292 D
5 -184 D
6 40 D
5 45 D
5 -187 D
5 -318 D
5 -121 D
2669 0 M
5 202 D
5 356 D
6 182 D
5 -96 D
5 -207 D
5 -150 D
5 -69 D
5 21 D
5 191 D
6 369 D
5 345 D
5 52 D
5 -274 D
5 -348 D
5 -156 D
5 100 D
6 247 D
5 226 D
5 59 D
5 -172 D
5 -319 D
5 -260 D
5 -49 D
6 183 D
5 331 D
5 375 D
1 61 D
2814 1200 M
4 -467 D
5 -662 D
1 -71 D
2836 0 M
3 246 D
5 480 D
5 226 D
5 -126 D
5 -326 D
6 -266 D
5 -58 D
5 125 D
5 183 D
5 107 D
5 -39 D
5 -126 D
6 -69 D
5 140 D
5 397 D
3 306 D
2931 1200 M
0 -57 D
6 -604 D
5 -431 D
5 -89 D
5 170 D
5 197 D
5 55 D
5 -88 D
6 -143 D
5 -107 D
5 12 D
5 178 D
5 261 D
5 198 D
5 101 D
6 97 D
5 153 D
3 97 D
3030 1200 M
4 -205 D
5 -350 D
6 -318 D
5 -213 D
4 -114 D
3081 0 M
5 306 D
5 300 D
5 252 D
5 248 D
2 94 D
3120 1200 M
2 -81 D
5 -235 D
5 -136 D
5 -80 D
5 -115 D
5 -190 D
6 -239 D
3 -124 D
3167 0 M
1 27 D
5 372 D
5 402 D
5 286 D
4 113 D
3214 1200 M
5 -658 D
5 -542 D
3238 0 M
2 130 D
5 479 D
5 355 D
5 162 D
6 -41 D
5 -181 D
5 -228 D
5 -208 D
5 -179 D
5 -166 D
5 -123 D
3311 0 M
1 19 D
5 249 D
5 295 D
5 207 D
6 18 D
5 -105 D
5 -41 D
5 147 D
5 297 D
2 114 D
3384 1200 M
0 -23 D
5 -424 D
5 -331 D
5 -209 D
6 -108 D
5 -79 D
1 -26 D
3441 0 M
5 276 D
5 265 D
5 234 D
5 265 D
3 160 D
3481 1200 M
1 -59 D
5 -379 D
5 -281 D
5 -76 D
5 87 D
5 106 D
6 -9 D
5 -135 D
5 -146 D
5 -23 D
5 156 D
5 257 D
5 213 D
6 64 D
5 -69 D
5 -109 D
5 -76 D
5 -49 D
5 -80 D
5 -121 D
6 -106 D
5 -34 D
5 30 D
5 36 D
5 9 D
5 18 D
5 87 D
6 161 D
5 165 D
5 75 D
5 -45 D
5 -108 D
5 -83 D
5 -16 D
6 35 D
5 38 D
5 4 D
5 -17 D
5 17 D
5 54 D
5 23 D
6 -79 D
5 -164 D
5 -160 D
5 -57 D
5 62 D
5 101 D
5 35 D
6 -70 D
5 -108 D
5 -52 D
5 34 D
5 74 D
5 44 D
5 4 D
6 7 D
5 66 D
5 142 D
5 179 D
5 139 D
5 33 D
5 -72 D
6 -139 D
5 -167 D
5 -157 D
5 -110 D
5 -37 D
5 29 D
5 78 D
6 103 D
5 99 D
5 53 D
5 1 D
5 -19 D
5 -5 D
5 12 D
6 2 D
5 -34 D
5 -64 D
5 -51 D
5 -3 D
5 38 D
5 26 D
6 -31 D
5 -71 D
5 -69 D
5 -39 D
5 -22 D
5 -12 D
5 15 D
6 69 D
5 115 D
5 117 D
5 72 D
5 1 D
5 -50 D
5 -66 D
6 -58 D
5 -31 D
5 -9 D
5 2 D
5 5 D
5 6 D
5 14 D
6 17 D
5 0 D
5 -30 D
5 -46 D
5 -33 D
5 -3 D
5 18 D
6 30 D
5 41 D
5 52 D
5 55 D
5 43 D
5 11 D
5 -29 D
6 -59 D
5 -77 D
5 -72 D
5 -50 D
5 -11 D
5 13 D
5 16 D
6 10 D
5 25 D
5 63 D
5 103 D
5 102 D
5 65 D
5 16 D
6 -4 D
5 -10 D
5 -26 D
5 -68 D
5 -104 D
5 -96 D
5 -34 D
6 30 D
5 41 D
5 -10 D
5 -73 D
5 -83 D
5 -25 D
5 51 D
6 80 D
5 49 D
5 -12 D
5 -49 D
5 -31 D
5 30 D
5 77 D
6 79 D
5 38 D
5 5 D
5 12 D
5 55 D
5 83 D
5 68 D
6 6 D
5 -54 D
5 -80 D
5 -65 D
5 -44 D
5 -44 D
5 -67 D
6 -85 D
5 -75 D
5 -40 D
5 -11 D
5 -2 D
5 -6 D
5 -7 D
6 0 D
5 25 D
5 59 D
5 75 D
5 62 D
5 31 D
5 11 D
6 15 D
5 18 D
5 7 D
5 -16 D
5 -41 D
5 -46 D
5 -23 D
6 9 D
5 29 D
5 22 D
5 -3 D
5 -20 D
5 -17 D
5 0 D
6 17 D
5 28 D
5 33 D
5 31 D
5 26 D
5 20 D
5 10 D
6 -6 D
5 -20 D
5 -17 D
5 -4 D
5 10 D
5 9 D
5 -2 D
6 -8 D
5 -6 D
5 -7 D
5 -18 D
5 -39 D
5 -47 D
5 -28 D
6 15 D
5 47 D
5 52 D
5 25 D
5 -11 D
5 -33 D
5 -39 D
6 -38 D
5 -36 D
5 -24 D
5 -16 D
5 -5 D
5 3 D
5 16 D
6 27 D
5 37 D
5 35 D
5 22 D
5 12 D
5 20 D
5 35 D
6 38 D
5 12 D
5 -24 D
5 -42 D
5 -38 D
5 -26 D
5 -17 D
6 -14 D
5 -12 D
5 -8 D
5 -9 D
5 -9 D
5 -10 D
5 -6 D
6 -6 D
5 3 D
5 18 D
5 35 D
5 40 D
5 30 D
5 19 D
6 10 D
5 8 D
5 2 D
5 -6 D
5 -11 D
5 -8 D
5 2 D
6 7 D
5 -1 D
5 -19 D
5 -39 D
5 -43 D
5 -31 D
5 -9 D
6 17 D
5 28 D
5 32 D
5 24 D
5 15 D
5 4 D
5 -6 D
6 -10 D
5 -9 D
5 -3 D
5 0 D
5 -1 D
5 -5 D
5 -7 D
6 1 D
5 18 D
5 28 D
5 22 D
5 0 D
5 -20 D
5 -26 D
6 -16 D
5 -3 D
5 2 D
5 -8 D
5 -23 D
5 -32 D
5 -26 D
6 -16 D
5 -6 D
5 -4 D
5 1 D
5 15 D
5 34 D
5 45 D
6 36 D
5 19 D
5 6 D
5 5 D
5 4 D
5 0 D
5 -8 D
6 -13 D
5 -15 D
5 -12 D
5 -4 D
5 4 D
5 11 D
5 6 D
6 -2 D
5 -14 D
5 -20 D
5 -14 D
5 -4 D
5 2 D
5 4 D
6 -1 D
5 -6 D
5 -11 D
5 -16 D
5 -10 D
5 3 D
5 17 D
6 27 D
5 25 D
5 17 D
5 6 D
5 4 D
5 9 D
5 11 D
6 8 D
5 0 D
5 -8 D
5 -5 D
5 5 D
5 12 D
5 10 D
6 -3 D
5 -19 D
5 -29 D
5 -31 D
5 -28 D
5 -19 D
5 -3 D
6 12 D
5 23 D
5 23 D
5 13 D
5 -1 D
5 -9 D
5 -7 D
6 4 D
5 12 D
5 13 D
5 1 D
5 -10 D
5 -12 D
5 -2 D
6 7 D
5 1 D
5 -14 D
5 -27 D
5 -22 D
5 -5 D
5 14 D
6 17 D
5 8 D
5 -3 D
5 0 D
5 17 D
5 34 D
5 39 D
6 24 D
5 4 D
5 -8 D
5 -7 D
5 -2 D
5 0 D
5 -7 D
6 -17 D
5 -21 D
5 -16 D
5 -10 D
5 -8 D
5 -12 D
5 -12 D
6 -4 D
5 10 D
5 16 D
5 13 D
5 8 D
5 4 D
5 2 D
6 0 D
5 -3 D
5 -10 D
5 -11 D
5 -12 D
5 -7 D
5 0 D
6 4 D
5 4 D
5 2 D
5 6 D
5 9 D
5 8 D
5 1 D
6 -6 D
5 -7 D
5 1 D
5 6 D
5 6 D
5 -3 D
5 -5 D
6 -1 D
5 5 D
5 6 D
5 1 D
5 -5 D
5 -6 D
5 -2 D
6 5 D
5 10 D
5 9 D
5 5 D
5 -1 D
5 -3 D
5 -4 D
6 -4 D
5 -4 D
5 -5 D
5 0 D
5 6 D
5 8 D
5 8 D
6 -1 D
5 -11 D
5 -17 D
5 -16 D
5 -10 D
5 -6 D
5 -2 D
6 -1 D
5 -1 D
5 -3 D
5 -3 D
5 0 D
5 5 D
5 7 D
6 3 D
5 1 D
5 -1 D
5 1 D
5 3 D
5 4 D
5 2 D
6 2 D
5 1 D
5 2 D
5 5 D
5 9 D
5 17 D
5 20 D
6 16 D
5 2 D
5 -10 D
5 -18 D
5 -12 D
5 2 D
5 13 D
6 10 D
5 2 D
5 -8 D
5 -9 D
5 -6 D
5 -2 D
5 -1 D
6 0 D
5 4 D
5 6 D
5 2 D
5 -5 D
5 -9 D
5 -11 D
6 -8 D
5 -2 D
5 -2 D
5 -6 D
5 -7 D
5 -4 D
5 5 D
6 11 D
5 9 D
5 4 D
5 -3 D
5 -3 D
5 -1 D
5 2 D
6 1 D
5 -4 D
5 -6 D
5 -6 D
5 -3 D
5 3 D
5 5 D
6 5 D
5 3 D
5 2 D
5 1 D
5 4 D
5 7 D
5 6 D
6 3 D
5 4 D
5 3 D
5 3 D
5 -3 D
5 -9 D
5 -10 D
6 -9 D
5 -4 D
5 -2 D
5 -4 D
5 -6 D
5 -1 D
5 3 D
6 7 D
5 5 D
5 2 D
5 -1 D
5 -1 D
5 -2 D
5 -2 D
6 -7 D
5 -11 D
5 -10 D
5 -9 D
5 -3 D
5 -2 D
5 -2 D
6 -5 D
5 -7 D
5 -5 D
5 0 D
5 3 D
5 4 D
5 5 D
6 6 D
5 8 D
5 12 D
5 14 D
5 11 D
5 7 D
5 0 D
6 -4 D
5 -4 D
5 1 D
5 7 D
5 9 D
5 6 D
5 4 D
6 0 D
5 2 D
5 4 D
5 2 D
5 -4 D
5 -9 D
5 -8 D
6 -5 D
5 -1 D
5 3 D
5 6 D
5 6 D
5 4 D
5 1 D
6 -1 D
5 -3 D
5 -3 D
5 -9 D
5 -14 D
5 -16 D
5 -11 D
6 1 D
5 10 D
5 16 D
5 14 D
5 10 D
5 6 D
5 1 D
6 -1 D
5 -2 D
5 -1 D
5 -2 D
5 -2 D
5 -5 D
5 -4 D
6 -1 D
5 4 D
5 8 D
5 10 D
5 8 D
5 0 D
5 -4 D
6 -6 D
5 -5 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
6 5 D
5 5 D
5 2 D
5 -5 D
5 -8 D
5 -9 D
5 -7 D
6 -3 D
5 0 D
5 1 D
5 0 D
5 -2 D
5 -4 D
5 -3 D
6 3 D
5 7 D
5 8 D
5 5 D
5 1 D
5 -2 D
5 -4 D
6 -4 D
5 -3 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
6 1 D
5 0 D
5 -3 D
5 -6 D
5 -4 D
5 -1 D
5 3 D
6 9 D
5 10 D
5 13 D
5 10 D
5 7 D
5 3 D
5 -1 D
6 -4 D
5 -5 D
5 -4 D
5 -4 D
5 0 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1878
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-r) (-O) (-K) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1879
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
237 524 M
5 0 D
5 -1 D
5 0 D
5 1 D
5 1 D
5 1 D
6 1 D
5 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
6 1 D
5 0 D
5 1 D
5 0 D
5 0 D
5 0 D
5 1 D
6 0 D
5 -1 D
5 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
6 0 D
5 0 D
5 1 D
5 0 D
5 1 D
5 1 D
5 0 D
6 -1 D
5 0 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
5 -2 D
6 0 D
5 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 0 D
6 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 0 D
6 -1 D
5 0 D
5 -1 D
5 1 D
5 -2 D
5 0 D
5 -1 D
6 2 D
5 0 D
5 1 D
5 -1 D
5 0 D
5 0 D
5 0 D
6 -1 D
5 -1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
6 -1 D
5 1 D
5 0 D
5 0 D
5 -1 D
5 -2 D
5 0 D
6 0 D
5 0 D
5 0 D
5 2 D
5 1 D
5 0 D
5 0 D
6 -1 D
5 0 D
5 0 D
5 2 D
5 0 D
5 0 D
5 0 D
6 1 D
5 1 D
5 -3 D
5 -9 D
5 -32 D
5 -96 D
5 -214 D
4 -167 D
784 0 M
3 189 D
5 681 D
3 330 D
807 1200 M
0 -75 D
6 -581 D
5 -231 D
5 131 D
5 171 D
5 19 D
5 -64 D
5 -41 D
6 -48 D
5 -103 D
5 -51 D
5 146 D
5 219 D
5 -76 D
5 -488 D
2 -128 D
893 0 M
2 221 D
5 620 D
5 213 D
5 -196 D
5 -250 D
6 -34 D
5 148 D
5 144 D
5 -4 D
5 -208 D
5 -313 D
5 -174 D
6 146 D
5 365 D
5 253 D
5 -94 D
5 -347 D
5 -306 D
5 -76 D
6 108 D
5 127 D
5 41 D
5 14 D
5 91 D
5 141 D
5 71 D
6 -62 D
5 -152 D
5 -101 D
5 63 D
5 192 D
5 146 D
5 -60 D
6 -225 D
5 -157 D
5 118 D
5 325 D
5 235 D
5 -83 D
5 -291 D
6 -184 D
5 40 D
5 44 D
5 -187 D
5 -318 D
2 -44 D
1128 0 M
3 126 D
6 356 D
5 182 D
5 -97 D
5 -207 D
5 -150 D
5 -68 D
5 21 D
6 190 D
5 369 D
5 345 D
5 52 D
5 -273 D
5 -348 D
5 -156 D
6 100 D
5 246 D
5 226 D
5 60 D
5 -172 D
5 -319 D
5 -261 D
6 -49 D
5 183 D
5 331 D
5 375 D
3 138 D
1270 1200 M
0 -7 D
5 -536 D
6 -657 D
1294 0 M
2 170 D
5 480 D
5 225 D
5 -126 D
6 -326 D
5 -265 D
5 -58 D
5 124 D
5 183 D
5 107 D
5 -38 D
6 -127 D
5 -68 D
5 139 D
5 398 D
4 382 D
1387 1200 M
2 -134 D
5 -603 D
5 -432 D
2 -31 D
1406 0 M
3 113 D
5 197 D
5 54 D
6 -87 D
5 -143 D
5 -108 D
5 12 D
5 178 D
5 262 D
5 198 D
6 100 D
5 97 D
5 154 D
5 158 D
1 15 D
1485 1200 M
1 -27 D
5 -255 D
6 -350 D
5 -318 D
5 -213 D
1 -37 D
1539 0 M
4 229 D
5 300 D
5 253 D
5 247 D
4 171 D
1576 1200 M
3 -158 D
5 -234 D
5 -136 D
5 -81 D
5 -114 D
6 -190 D
5 -240 D
1 -47 D
1626 0 M
4 323 D
5 401 D
6 287 D
5 157 D
1 32 D
1671 1200 M
0 -69 D
6 -665 D
3 -466 D
1696 0 M
1 53 D
5 479 D
5 355 D
6 162 D
5 -40 D
5 -181 D
5 -229 D
5 -208 D
5 -179 D
5 -166 D
2 -46 D
1770 0 M
4 191 D
5 296 D
6 206 D
5 18 D
5 -105 D
5 -41 D
5 147 D
5 298 D
3 190 D
1840 1200 M
1 -100 D
5 -423 D
5 -332 D
6 -208 D
5 -109 D
2 -28 D
1900 0 M
3 199 D
5 266 D
5 233 D
5 266 D
5 236 D
1936 1200 M
3 -136 D
5 -378 D
5 -282 D
5 -75 D
5 86 D
6 106 D
5 -8 D
5 -136 D
5 -146 D
5 -23 D
5 156 D
5 258 D
6 213 D
5 63 D
5 -68 D
5 -110 D
5 -75 D
5 -50 D
5 -80 D
6 -121 D
5 -105 D
5 -35 D
5 31 D
5 36 D
5 9 D
5 17 D
6 87 D
5 161 D
5 165 D
5 76 D
5 -45 D
5 -108 D
5 -84 D
6 -16 D
5 36 D
5 38 D
5 4 D
5 -17 D
5 17 D
5 53 D
6 23 D
5 -78 D
5 -164 D
5 -160 D
5 -57 D
5 62 D
5 101 D
6 35 D
5 -71 D
5 -107 D
5 -53 D
5 35 D
5 73 D
5 44 D
6 4 D
5 7 D
5 67 D
5 142 D
5 179 D
5 138 D
5 34 D
6 -73 D
5 -139 D
5 -167 D
5 -157 D
5 -109 D
5 -37 D
5 29 D
6 77 D
5 104 D
5 98 D
5 54 D
5 1 D
5 -19 D
5 -5 D
6 12 D
5 2 D
5 -35 D
5 -64 D
5 -50 D
5 -3 D
5 37 D
6 26 D
5 -31 D
5 -70 D
5 -70 D
5 -38 D
5 -22 D
5 -12 D
6 15 D
5 68 D
5 116 D
5 117 D
5 71 D
5 1 D
5 -49 D
6 -67 D
5 -58 D
5 -30 D
5 -9 D
5 2 D
5 5 D
5 6 D
6 14 D
5 16 D
5 0 D
5 -29 D
5 -46 D
5 -34 D
5 -3 D
6 18 D
5 31 D
5 41 D
5 51 D
5 56 D
5 43 D
5 11 D
6 -29 D
5 -60 D
5 -76 D
5 -73 D
5 -50 D
5 -11 D
5 13 D
6 16 D
5 10 D
5 25 D
5 64 D
5 102 D
5 102 D
5 65 D
6 17 D
5 -5 D
5 -10 D
5 -26 D
5 -67 D
5 -105 D
5 -95 D
6 -35 D
5 31 D
5 41 D
5 -10 D
5 -74 D
5 -82 D
5 -25 D
6 50 D
5 81 D
5 49 D
5 -12 D
5 -50 D
5 -31 D
5 30 D
6 78 D
5 78 D
5 39 D
5 5 D
5 12 D
5 54 D
5 84 D
6 68 D
5 5 D
5 -53 D
5 -81 D
5 -64 D
5 -44 D
5 -45 D
6 -66 D
5 -86 D
5 -75 D
5 -39 D
5 -11 D
5 -2 D
5 -6 D
6 -7 D
5 0 D
5 25 D
5 58 D
5 76 D
5 62 D
5 30 D
6 11 D
5 15 D
5 18 D
5 7 D
5 -16 D
5 -41 D
5 -45 D
6 -23 D
5 9 D
5 29 D
5 21 D
5 -2 D
5 -20 D
5 -17 D
6 0 D
5 17 D
5 27 D
5 33 D
5 31 D
5 27 D
5 20 D
6 10 D
5 -6 D
5 -20 D
5 -18 D
5 -4 D
5 10 D
5 10 D
6 -2 D
5 -9 D
5 -6 D
5 -7 D
5 -18 D
5 -39 D
5 -46 D
6 -28 D
5 15 D
5 46 D
5 52 D
5 25 D
5 -11 D
5 -33 D
6 -38 D
5 -38 D
5 -36 D
5 -25 D
5 -16 D
5 -5 D
5 3 D
6 16 D
5 28 D
5 37 D
5 35 D
5 21 D
5 12 D
5 20 D
6 35 D
5 39 D
5 12 D
5 -24 D
5 -43 D
5 -38 D
5 -26 D
6 -16 D
5 -14 D
5 -12 D
5 -8 D
5 -9 D
5 -9 D
5 -10 D
6 -7 D
5 -6 D
5 3 D
5 19 D
5 35 D
5 39 D
5 30 D
6 19 D
5 10 D
5 8 D
5 2 D
5 -6 D
5 -11 D
5 -8 D
6 2 D
5 7 D
5 -1 D
5 -19 D
5 -39 D
5 -42 D
5 -31 D
6 -9 D
5 17 D
5 28 D
5 32 D
5 23 D
5 15 D
5 4 D
6 -6 D
5 -10 D
5 -9 D
5 -3 D
5 0 D
5 -1 D
5 -5 D
6 -7 D
5 1 D
5 18 D
5 28 D
5 22 D
5 0 D
5 -20 D
6 -26 D
5 -16 D
5 -3 D
5 2 D
5 -7 D
5 -23 D
5 -32 D
6 -27 D
5 -16 D
5 -6 D
5 -4 D
5 1 D
5 15 D
5 35 D
6 45 D
5 35 D
5 19 D
5 6 D
5 5 D
5 4 D
5 0 D
6 -8 D
5 -13 D
5 -15 D
5 -12 D
5 -4 D
5 4 D
5 11 D
6 6 D
5 -2 D
5 -14 D
5 -19 D
5 -14 D
5 -4 D
5 2 D
6 4 D
5 -1 D
5 -6 D
5 -11 D
5 -16 D
5 -10 D
5 3 D
6 17 D
5 27 D
5 24 D
5 17 D
5 6 D
5 4 D
5 9 D
6 11 D
5 8 D
5 0 D
5 -8 D
5 -5 D
5 5 D
5 12 D
6 10 D
5 -3 D
5 -19 D
5 -29 D
5 -30 D
5 -28 D
5 -19 D
6 -3 D
5 12 D
5 23 D
5 22 D
5 13 D
5 -1 D
5 -9 D
6 -6 D
5 3 D
5 12 D
5 13 D
5 1 D
5 -10 D
5 -12 D
6 -2 D
5 7 D
5 1 D
5 -13 D
5 -27 D
5 -22 D
5 -5 D
6 14 D
5 17 D
5 8 D
5 -3 D
5 0 D
5 17 D
5 33 D
6 39 D
5 24 D
5 5 D
5 -9 D
5 -7 D
5 -2 D
5 0 D
6 -7 D
5 -17 D
5 -21 D
5 -16 D
5 -10 D
5 -8 D
5 -11 D
6 -12 D
5 -4 D
5 10 D
5 16 D
5 12 D
5 8 D
5 4 D
6 2 D
5 0 D
5 -3 D
5 -10 D
5 -11 D
5 -11 D
5 -7 D
6 0 D
5 4 D
5 4 D
5 2 D
5 6 D
5 8 D
5 8 D
6 1 D
5 -6 D
5 -7 D
5 1 D
5 6 D
5 6 D
5 -3 D
6 -5 D
5 -1 D
5 5 D
5 6 D
5 1 D
5 -5 D
5 -6 D
6 -2 D
5 5 D
5 10 D
5 9 D
5 5 D
5 -1 D
5 -3 D
6 -4 D
5 -4 D
5 -4 D
5 -5 D
5 0 D
5 6 D
5 8 D
6 8 D
5 -1 D
5 -11 D
5 -17 D
5 -15 D
5 -10 D
5 -6 D
6 -2 D
5 -1 D
5 -1 D
5 -3 D
5 -3 D
5 0 D
5 5 D
6 7 D
5 3 D
5 1 D
5 -1 D
5 1 D
5 3 D
5 4 D
6 2 D
5 2 D
5 1 D
5 2 D
5 4 D
5 9 D
5 17 D
6 20 D
5 16 D
5 2 D
5 -10 D
5 -18 D
5 -12 D
5 2 D
6 13 D
5 10 D
5 2 D
5 -8 D
5 -9 D
5 -6 D
5 -2 D
6 -1 D
5 0 D
5 4 D
5 6 D
5 2 D
5 -5 D
5 -9 D
6 -11 D
5 -8 D
5 -2 D
5 -2 D
5 -5 D
5 -7 D
5 -4 D
6 5 D
5 10 D
5 9 D
5 4 D
5 -3 D
5 -3 D
5 -1 D
6 2 D
5 1 D
5 -4 D
5 -5 D
5 -6 D
5 -3 D
5 3 D
6 5 D
5 4 D
5 3 D
5 2 D
5 1 D
5 4 D
5 7 D
6 6 D
5 3 D
5 4 D
5 3 D
5 3 D
5 -3 D
5 -9 D
6 -10 D
5 -9 D
5 -4 D
5 -2 D
5 -3 D
5 -6 D
5 -1 D
6 3 D
5 6 D
5 5 D
5 2 D
5 -1 D
5 -1 D
5 -2 D
6 -2 D
5 -6 D
5 -11 D
5 -10 D
5 -9 D
5 -3 D
5 -2 D
6 -2 D
5 -5 D
5 -7 D
5 -5 D
5 0 D
5 3 D
5 4 D
6 5 D
5 6 D
5 8 D
5 12 D
5 14 D
5 10 D
5 7 D
6 0 D
5 -4 D
5 -4 D
5 1 D
5 7 D
5 9 D
5 6 D
6 4 D
5 0 D
5 2 D
5 4 D
5 2 D
5 -4 D
5 -9 D
6 -8 D
5 -5 D
5 -1 D
5 3 D
5 6 D
5 6 D
5 4 D
6 1 D
5 -1 D
5 -3 D
5 -3 D
5 -9 D
5 -14 D
5 -15 D
6 -11 D
5 1 D
5 10 D
5 15 D
5 14 D
5 10 D
5 6 D
6 1 D
5 -1 D
5 -2 D
5 -1 D
5 -2 D
5 -2 D
5 -5 D
6 -4 D
5 -1 D
5 4 D
5 8 D
5 10 D
5 8 D
5 0 D
6 -4 D
5 -6 D
5 -5 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
6 2 D
5 5 D
5 5 D
5 2 D
5 -5 D
5 -8 D
5 -9 D
6 -7 D
5 -3 D
5 0 D
5 1 D
5 0 D
5 -2 D
5 -3 D
6 -3 D
5 3 D
5 6 D
5 8 D
5 5 D
5 1 D
5 -2 D
6 -4 D
5 -4 D
5 -3 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
6 2 D
5 1 D
5 0 D
5 -3 D
5 -5 D
5 -4 D
5 -1 D
6 3 D
5 8 D
5 10 D
5 13 D
5 10 D
5 7 D
5 3 D
6 -1 D
5 -4 D
5 -5 D
5 -4 D
5 -4 D
5 0 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1879
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S-3) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1880
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
751 524 M
5 0 D
5 -1 D
5 0 D
5 1 D
6 1 D
5 1 D
5 1 D
5 0 D
5 0 D
5 0 D
5 0 D
6 -1 D
5 0 D
5 1 D
5 0 D
5 1 D
5 0 D
5 0 D
6 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
5 0 D
6 0 D
5 0 D
5 0 D
5 0 D
5 1 D
5 0 D
5 1 D
6 1 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 -1 D
5 -1 D
6 -1 D
5 -2 D
5 0 D
5 0 D
5 1 D
5 0 D
5 -1 D
6 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
6 0 D
5 0 D
5 -1 D
5 0 D
5 -1 D
5 1 D
5 -2 D
6 0 D
5 -1 D
5 2 D
5 0 D
5 1 D
5 -1 D
5 0 D
6 0 D
5 0 D
5 -1 D
5 -1 D
5 0 D
5 1 D
5 1 D
6 0 D
5 -1 D
5 -1 D
5 1 D
5 0 D
5 0 D
5 -1 D
6 -2 D
5 0 D
5 0 D
5 0 D
5 0 D
5 2 D
5 1 D
6 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 2 D
5 0 D
6 0 D
5 0 D
5 1 D
5 1 D
5 -3 D
5 -9 D
5 -32 D
6 -96 D
5 -214 D
3 -167 D
1298 0 M
3 189 D
5 681 D
3 330 D
1321 1200 M
1 -75 D
5 -581 D
5 -231 D
5 131 D
5 171 D
5 19 D
6 -64 D
5 -41 D
5 -48 D
5 -103 D
5 -51 D
5 146 D
5 219 D
6 -76 D
5 -488 D
1 -128 D
1407 0 M
2 221 D
5 620 D
5 213 D
6 -196 D
5 -250 D
5 -34 D
5 148 D
5 144 D
5 -4 D
5 -208 D
6 -313 D
5 -174 D
5 146 D
5 365 D
5 253 D
5 -94 D
5 -347 D
6 -306 D
5 -76 D
5 108 D
5 127 D
5 41 D
5 14 D
5 91 D
6 141 D
5 71 D
5 -62 D
5 -152 D
5 -101 D
5 63 D
5 192 D
6 146 D
5 -60 D
5 -225 D
5 -157 D
5 118 D
5 325 D
5 235 D
6 -83 D
5 -291 D
5 -184 D
5 40 D
5 44 D
5 -187 D
5 -318 D
2 -44 D
1643 0 M
3 126 D
5 356 D
5 182 D
5 -97 D
5 -207 D
5 -150 D
6 -68 D
5 21 D
5 190 D
5 369 D
5 345 D
5 52 D
5 -273 D
6 -348 D
5 -156 D
5 100 D
5 246 D
5 226 D
5 60 D
5 -172 D
6 -319 D
5 -261 D
5 -49 D
5 183 D
5 331 D
5 375 D
3 138 D
1784 1200 M
1 -7 D
5 -536 D
5 -657 D
1808 0 M
2 170 D
5 480 D
6 225 D
5 -126 D
5 -326 D
5 -265 D
5 -58 D
5 124 D
5 183 D
6 107 D
5 -38 D
5 -127 D
5 -68 D
5 139 D
5 398 D
4 382 D
1901 1200 M
2 -134 D
5 -603 D
5 -432 D
2 -31 D
1920 0 M
3 113 D
6 197 D
5 54 D
5 -87 D
5 -143 D
5 -108 D
5 12 D
5 178 D
6 262 D
5 198 D
5 100 D
5 97 D
5 154 D
5 158 D
1 15 D
1999 1200 M
2 -27 D
5 -255 D
5 -350 D
5 -318 D
5 -213 D
1 -37 D
2053 0 M
4 229 D
5 300 D
5 253 D
6 247 D
3 171 D
2090 1200 M
3 -158 D
5 -234 D
5 -136 D
6 -81 D
5 -114 D
5 -190 D
5 -240 D
1 -47 D
2140 0 M
5 323 D
5 401 D
5 287 D
5 157 D
1 32 D
2185 1200 M
1 -69 D
5 -665 D
4 -466 D
2211 0 M
0 53 D
6 479 D
5 355 D
5 162 D
5 -40 D
5 -181 D
5 -229 D
5 -208 D
6 -179 D
5 -166 D
1 -46 D
2285 0 M
4 191 D
5 296 D
5 206 D
5 18 D
5 -105 D
5 -41 D
5 147 D
6 298 D
3 190 D
2354 1200 M
1 -100 D
6 -423 D
5 -332 D
5 -208 D
5 -109 D
2 -28 D
2414 0 M
3 199 D
5 266 D
5 233 D
6 266 D
4 236 D
2451 1200 M
2 -136 D
5 -378 D
5 -282 D
6 -75 D
5 86 D
5 106 D
5 -8 D
5 -136 D
5 -146 D
5 -23 D
6 156 D
5 258 D
5 213 D
5 63 D
5 -68 D
5 -110 D
5 -75 D
6 -50 D
5 -80 D
5 -121 D
5 -105 D
5 -35 D
5 31 D
5 36 D
6 9 D
5 17 D
5 87 D
5 161 D
5 165 D
5 76 D
5 -45 D
6 -108 D
5 -84 D
5 -16 D
5 36 D
5 38 D
5 4 D
5 -17 D
6 17 D
5 53 D
5 23 D
5 -78 D
5 -164 D
5 -160 D
5 -57 D
6 62 D
5 101 D
5 35 D
5 -71 D
5 -107 D
5 -53 D
5 35 D
6 73 D
5 44 D
5 4 D
5 7 D
5 67 D
5 142 D
5 179 D
6 138 D
5 34 D
5 -73 D
5 -139 D
5 -167 D
5 -157 D
5 -109 D
6 -37 D
5 29 D
5 77 D
5 104 D
5 98 D
5 54 D
5 1 D
6 -19 D
5 -5 D
5 12 D
5 2 D
5 -35 D
5 -64 D
5 -50 D
6 -3 D
5 37 D
5 26 D
5 -31 D
5 -70 D
5 -70 D
5 -38 D
6 -22 D
5 -12 D
5 15 D
5 68 D
5 116 D
5 117 D
5 71 D
6 1 D
5 -49 D
5 -67 D
5 -58 D
5 -30 D
5 -9 D
5 2 D
6 5 D
5 6 D
5 14 D
5 16 D
5 0 D
5 -29 D
5 -46 D
6 -34 D
5 -3 D
5 18 D
5 31 D
5 41 D
5 51 D
5 56 D
6 43 D
5 11 D
5 -29 D
5 -60 D
5 -76 D
5 -73 D
5 -50 D
6 -11 D
5 13 D
5 16 D
5 10 D
5 25 D
5 64 D
5 102 D
6 102 D
5 65 D
5 17 D
5 -5 D
5 -10 D
5 -26 D
5 -67 D
6 -105 D
5 -95 D
5 -35 D
5 31 D
5 41 D
5 -10 D
5 -74 D
6 -82 D
5 -25 D
5 50 D
5 81 D
5 49 D
5 -12 D
5 -50 D
6 -31 D
5 30 D
5 78 D
5 78 D
5 39 D
5 5 D
5 12 D
6 54 D
5 84 D
5 68 D
5 5 D
5 -53 D
5 -81 D
5 -64 D
6 -44 D
5 -45 D
5 -66 D
5 -86 D
5 -75 D
5 -39 D
5 -11 D
6 -2 D
5 -6 D
5 -7 D
5 0 D
5 25 D
5 58 D
5 76 D
6 62 D
5 30 D
5 11 D
5 15 D
5 18 D
5 7 D
5 -16 D
6 -41 D
5 -45 D
5 -23 D
5 9 D
5 29 D
5 21 D
5 -2 D
6 -20 D
5 -17 D
5 0 D
5 17 D
5 27 D
5 33 D
5 31 D
6 27 D
5 20 D
5 10 D
5 -6 D
5 -20 D
5 -18 D
5 -4 D
6 10 D
5 10 D
5 -2 D
5 -9 D
5 -6 D
5 -7 D
5 -18 D
6 -39 D
5 -46 D
5 -28 D
5 15 D
5 46 D
5 52 D
5 25 D
6 -11 D
5 -33 D
5 -38 D
5 -38 D
5 -36 D
5 -25 D
5 -16 D
6 -5 D
5 3 D
5 16 D
5 28 D
5 37 D
5 35 D
5 21 D
6 12 D
5 20 D
5 35 D
5 39 D
5 12 D
5 -24 D
5 -43 D
6 -38 D
5 -26 D
5 -16 D
5 -14 D
5 -12 D
5 -8 D
5 -9 D
6 -9 D
5 -10 D
5 -7 D
5 -6 D
5 3 D
5 19 D
5 35 D
6 39 D
5 30 D
5 19 D
5 10 D
5 8 D
5 2 D
5 -6 D
6 -11 D
5 -8 D
5 2 D
5 7 D
5 -1 D
5 -19 D
5 -39 D
6 -42 D
5 -31 D
5 -9 D
5 17 D
5 28 D
5 32 D
5 23 D
6 15 D
5 4 D
5 -6 D
5 -10 D
5 -9 D
5 -3 D
5 0 D
6 -1 D
5 -5 D
5 -7 D
5 1 D
5 18 D
5 28 D
5 22 D
6 0 D
5 -20 D
5 -26 D
5 -16 D
5 -3 D
5 2 D
5 -7 D
6 -23 D
5 -32 D
5 -27 D
5 -16 D
5 -6 D
5 -4 D
5 1 D
6 15 D
5 35 D
5 45 D
5 35 D
5 19 D
5 6 D
5 5 D
6 4 D
5 0 D
5 -8 D
5 -13 D
5 -15 D
5 -12 D
5 -4 D
6 4 D
5 11 D
5 6 D
5 -2 D
5 -14 D
5 -19 D
5 -14 D
6 -4 D
5 2 D
5 4 D
5 -1 D
5 -6 D
5 -11 D
5 -16 D
6 -10 D
5 3 D
5 17 D
5 27 D
5 24 D
5 17 D
5 6 D
6 4 D
5 9 D
5 11 D
5 8 D
5 0 D
5 -8 D
5 -5 D
6 5 D
5 12 D
5 10 D
5 -3 D
5 -19 D
5 -29 D
5 -30 D
6 -28 D
5 -19 D
5 -3 D
5 12 D
5 23 D
5 22 D
5 13 D
6 -1 D
5 -9 D
5 -6 D
5 3 D
5 12 D
5 13 D
5 1 D
6 -10 D
5 -12 D
5 -2 D
5 7 D
5 1 D
5 -13 D
5 -27 D
6 -22 D
5 -5 D
5 14 D
5 17 D
5 8 D
5 -3 D
5 0 D
6 17 D
5 33 D
5 39 D
5 24 D
5 5 D
5 -9 D
5 -7 D
6 -2 D
5 0 D
5 -7 D
5 -17 D
5 -21 D
5 -16 D
5 -10 D
6 -8 D
5 -11 D
5 -12 D
5 -4 D
5 10 D
5 16 D
5 12 D
6 8 D
5 4 D
5 2 D
5 0 D
5 -3 D
5 -10 D
5 -11 D
6 -11 D
5 -7 D
5 0 D
5 4 D
5 4 D
5 2 D
5 6 D
6 8 D
5 8 D
5 1 D
5 -6 D
5 -7 D
5 1 D
5 6 D
6 6 D
5 -3 D
5 -5 D
5 -1 D
5 5 D
5 6 D
5 1 D
6 -5 D
5 -6 D
5 -2 D
5 5 D
5 10 D
5 9 D
5 5 D
6 -1 D
5 -3 D
5 -4 D
5 -4 D
5 -4 D
5 -5 D
5 0 D
6 6 D
5 8 D
5 8 D
5 -1 D
5 -11 D
5 -17 D
5 -15 D
6 -10 D
5 -6 D
5 -2 D
5 -1 D
5 -1 D
5 -3 D
5 -3 D
6 0 D
5 5 D
5 7 D
5 3 D
5 1 D
5 -1 D
5 1 D
6 3 D
5 4 D
5 2 D
5 2 D
5 1 D
5 2 D
5 4 D
6 9 D
5 17 D
5 20 D
5 16 D
5 2 D
5 -10 D
5 -18 D
6 -12 D
5 2 D
5 13 D
5 10 D
5 2 D
5 -8 D
5 -9 D
6 -6 D
5 -2 D
5 -1 D
5 0 D
5 4 D
5 6 D
5 2 D
6 -5 D
5 -9 D
5 -11 D
5 -8 D
5 -2 D
5 -2 D
5 -5 D
6 -7 D
5 -4 D
5 5 D
5 10 D
5 9 D
5 4 D
5 -3 D
6 -3 D
5 -1 D
5 2 D
5 1 D
5 -4 D
5 -5 D
5 -6 D
6 -3 D
5 3 D
5 5 D
5 4 D
5 3 D
5 2 D
5 1 D
6 4 D
5 7 D
5 6 D
5 3 D
5 4 D
5 3 D
5 3 D
6 -3 D
5 -9 D
5 -10 D
5 -9 D
5 -4 D
5 -2 D
5 -3 D
6 -6 D
5 -1 D
5 3 D
5 6 D
5 5 D
5 2 D
5 -1 D
6 -1 D
5 -2 D
5 -2 D
5 -6 D
5 -11 D
5 -10 D
5 -9 D
6 -3 D
5 -2 D
5 -2 D
5 -5 D
5 -7 D
5 -5 D
5 0 D
6 3 D
5 4 D
5 5 D
5 6 D
5 8 D
5 12 D
5 14 D
6 10 D
5 7 D
5 0 D
5 -4 D
5 -4 D
5 1 D
5 7 D
6 9 D
5 6 D
5 4 D
5 0 D
5 2 D
5 4 D
5 2 D
6 -4 D
5 -9 D
5 -8 D
5 -5 D
5 -1 D
5 3 D
5 6 D
6 6 D
5 4 D
5 1 D
5 -1 D
5 -3 D
5 -3 D
5 -9 D
6 -14 D
5 -15 D
5 -11 D
5 1 D
5 10 D
5 15 D
5 14 D
6 10 D
5 6 D
5 1 D
5 -1 D
5 -2 D
5 -1 D
5 -2 D
6 -2 D
5 -5 D
5 -4 D
5 -1 D
5 4 D
5 8 D
5 10 D
6 8 D
5 0 D
5 -4 D
5 -6 D
5 -5 D
5 -3 D
5 -1 D
6 -2 D
5 -1 D
5 2 D
5 5 D
5 5 D
5 2 D
5 -5 D
6 -8 D
5 -9 D
5 -7 D
5 -3 D
5 0 D
5 1 D
5 0 D
6 -2 D
5 -3 D
5 -3 D
5 3 D
5 6 D
5 8 D
5 5 D
6 1 D
5 -2 D
5 -4 D
5 -4 D
5 -3 D
5 -3 D
5 -1 D
6 -2 D
5 -1 D
5 2 D
5 1 D
5 0 D
5 -3 D
5 -5 D
6 -4 D
5 -1 D
5 3 D
5 8 D
5 10 D
5 13 D
5 10 D
6 7 D
5 3 D
5 -1 D
5 -4 D
5 -5 D
5 -4 D
5 -4 D
6 0 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1880
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S-2) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1881
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
1265 524 M
5 0 D
5 -1 D
6 0 D
5 1 D
5 1 D
5 1 D
5 1 D
5 0 D
5 0 D
6 0 D
5 0 D
5 -1 D
5 0 D
5 1 D
5 0 D
5 1 D
6 0 D
5 0 D
5 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
6 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
5 0 D
5 1 D
6 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
5 0 D
5 0 D
6 -1 D
5 -1 D
5 -1 D
5 -2 D
5 0 D
5 0 D
5 1 D
6 0 D
5 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
6 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 -1 D
6 1 D
5 -2 D
5 0 D
5 -1 D
5 2 D
5 0 D
5 1 D
6 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 -1 D
5 0 D
6 1 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 1 D
5 0 D
6 0 D
5 -1 D
5 -2 D
5 0 D
5 0 D
5 0 D
5 0 D
6 2 D
5 1 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
6 2 D
5 0 D
5 0 D
5 0 D
5 1 D
5 1 D
5 -3 D
6 -9 D
5 -32 D
5 -96 D
5 -214 D
3 -167 D
1813 0 M
2 189 D
6 681 D
2 330 D
1835 1200 M
1 -75 D
5 -581 D
5 -231 D
5 131 D
6 171 D
5 19 D
5 -64 D
5 -41 D
5 -48 D
5 -103 D
5 -51 D
6 146 D
5 219 D
5 -76 D
5 -488 D
1 -128 D
1921 0 M
2 221 D
6 620 D
5 213 D
5 -196 D
5 -250 D
5 -34 D
5 148 D
5 144 D
6 -4 D
5 -208 D
5 -313 D
5 -174 D
5 146 D
5 365 D
5 253 D
6 -94 D
5 -347 D
5 -306 D
5 -76 D
5 108 D
5 127 D
5 41 D
6 14 D
5 91 D
5 141 D
5 71 D
5 -62 D
5 -152 D
5 -101 D
6 63 D
5 192 D
5 146 D
5 -60 D
5 -225 D
5 -157 D
5 118 D
6 325 D
5 235 D
5 -83 D
5 -291 D
5 -184 D
5 40 D
5 44 D
6 -187 D
5 -318 D
1 -44 D
2157 0 M
3 126 D
5 356 D
5 182 D
5 -97 D
6 -207 D
5 -150 D
5 -68 D
5 21 D
5 190 D
5 369 D
5 345 D
6 52 D
5 -273 D
5 -348 D
5 -156 D
5 100 D
5 246 D
5 226 D
6 60 D
5 -172 D
5 -319 D
5 -261 D
5 -49 D
5 183 D
5 331 D
6 375 D
2 138 D
2299 1200 M
0 -7 D
5 -536 D
5 -657 D
2323 0 M
2 170 D
5 480 D
5 225 D
5 -126 D
5 -326 D
5 -265 D
5 -58 D
6 124 D
5 183 D
5 107 D
5 -38 D
5 -127 D
5 -68 D
5 139 D
6 398 D
3 382 D
2416 1200 M
1 -134 D
5 -603 D
5 -432 D
2 -31 D
2434 0 M
4 113 D
5 197 D
5 54 D
5 -87 D
5 -143 D
5 -108 D
6 12 D
5 178 D
5 262 D
5 198 D
5 100 D
5 97 D
5 154 D
6 158 D
1 15 D
2513 1200 M
2 -27 D
5 -255 D
5 -350 D
5 -318 D
5 -213 D
2 -37 D
2568 0 M
3 229 D
6 300 D
5 253 D
5 247 D
4 171 D
2604 1200 M
3 -158 D
6 -234 D
5 -136 D
5 -81 D
5 -114 D
5 -190 D
5 -240 D
1 -47 D
2654 0 M
5 323 D
5 401 D
5 287 D
5 157 D
2 32 D
2699 1200 M
1 -69 D
5 -665 D
4 -466 D
2725 0 M
1 53 D
5 479 D
5 355 D
5 162 D
5 -40 D
5 -181 D
6 -229 D
5 -208 D
5 -179 D
5 -166 D
2 -46 D
2799 0 M
4 191 D
5 296 D
5 206 D
5 18 D
5 -105 D
6 -41 D
5 147 D
5 298 D
3 190 D
2868 1200 M
2 -100 D
5 -423 D
5 -332 D
5 -208 D
5 -109 D
2 -28 D
2928 0 M
3 199 D
6 266 D
5 233 D
5 266 D
4 236 D
2965 1200 M
2 -136 D
6 -378 D
5 -282 D
5 -75 D
5 86 D
5 106 D
5 -8 D
5 -136 D
6 -146 D
5 -23 D
5 156 D
5 258 D
5 213 D
5 63 D
5 -68 D
6 -110 D
5 -75 D
5 -50 D
5 -80 D
5 -121 D
5 -105 D
5 -35 D
6 31 D
5 36 D
5 9 D
5 17 D
5 87 D
5 161 D
5 165 D
6 76 D
5 -45 D
5 -108 D
5 -84 D
5 -16 D
5 36 D
5 38 D
6 4 D
5 -17 D
5 17 D
5 53 D
5 23 D
5 -78 D
5 -164 D
6 -160 D
5 -57 D
5 62 D
5 101 D
5 35 D
5 -71 D
5 -107 D
6 -53 D
5 35 D
5 73 D
5 44 D
5 4 D
5 7 D
5 67 D
6 142 D
5 179 D
5 138 D
5 34 D
5 -73 D
5 -139 D
5 -167 D
6 -157 D
5 -109 D
5 -37 D
5 29 D
5 77 D
5 104 D
5 98 D
6 54 D
5 1 D
5 -19 D
5 -5 D
5 12 D
5 2 D
5 -35 D
6 -64 D
5 -50 D
5 -3 D
5 37 D
5 26 D
5 -31 D
5 -70 D
6 -70 D
5 -38 D
5 -22 D
5 -12 D
5 15 D
5 68 D
5 116 D
6 117 D
5 71 D
5 1 D
5 -49 D
5 -67 D
5 -58 D
5 -30 D
6 -9 D
5 2 D
5 5 D
5 6 D
5 14 D
5 16 D
5 0 D
6 -29 D
5 -46 D
5 -34 D
5 -3 D
5 18 D
5 31 D
5 41 D
6 51 D
5 56 D
5 43 D
5 11 D
5 -29 D
5 -60 D
5 -76 D
6 -73 D
5 -50 D
5 -11 D
5 13 D
5 16 D
5 10 D
5 25 D
6 64 D
5 102 D
5 102 D
5 65 D
5 17 D
5 -5 D
5 -10 D
6 -26 D
5 -67 D
5 -105 D
5 -95 D
5 -35 D
5 31 D
5 41 D
6 -10 D
5 -74 D
5 -82 D
5 -25 D
5 50 D
5 81 D
5 49 D
6 -12 D
5 -50 D
5 -31 D
5 30 D
5 78 D
5 78 D
5 39 D
6 5 D
5 12 D
5 54 D
5 84 D
5 68 D
5 5 D
5 -53 D
6 -81 D
5 -64 D
5 -44 D
5 -45 D
5 -66 D
5 -86 D
5 -75 D
6 -39 D
5 -11 D
5 -2 D
5 -6 D
5 -7 D
5 0 D
5 25 D
6 58 D
5 76 D
5 62 D
5 30 D
5 11 D
5 15 D
5 18 D
6 7 D
5 -16 D
5 -41 D
5 -45 D
5 -23 D
5 9 D
5 29 D
6 21 D
5 -2 D
5 -20 D
5 -17 D
5 0 D
5 17 D
5 27 D
6 33 D
5 31 D
5 27 D
5 20 D
5 10 D
5 -6 D
5 -20 D
6 -18 D
5 -4 D
5 10 D
5 10 D
5 -2 D
5 -9 D
5 -6 D
6 -7 D
5 -18 D
5 -39 D
5 -46 D
5 -28 D
5 15 D
5 46 D
6 52 D
5 25 D
5 -11 D
5 -33 D
5 -38 D
5 -38 D
5 -36 D
6 -25 D
5 -16 D
5 -5 D
5 3 D
5 16 D
5 28 D
5 37 D
6 35 D
5 21 D
5 12 D
5 20 D
5 35 D
5 39 D
5 12 D
6 -24 D
5 -43 D
5 -38 D
5 -26 D
5 -16 D
5 -14 D
5 -12 D
6 -8 D
5 -9 D
5 -9 D
5 -10 D
5 -7 D
5 -6 D
5 3 D
6 19 D
5 35 D
5 39 D
5 30 D
5 19 D
5 10 D
5 8 D
6 2 D
5 -6 D
5 -11 D
5 -8 D
5 2 D
5 7 D
5 -1 D
6 -19 D
5 -39 D
5 -42 D
5 -31 D
5 -9 D
5 17 D
5 28 D
6 32 D
5 23 D
5 15 D
5 4 D
5 -6 D
5 -10 D
5 -9 D
6 -3 D
5 0 D
5 -1 D
5 -5 D
5 -7 D
5 1 D
5 18 D
6 28 D
5 22 D
5 0 D
5 -20 D
5 -26 D
5 -16 D
5 -3 D
6 2 D
5 -7 D
5 -23 D
5 -32 D
5 -27 D
5 -16 D
5 -6 D
6 -4 D
5 1 D
5 15 D
5 35 D
5 45 D
5 35 D
5 19 D
6 6 D
5 5 D
5 4 D
5 0 D
5 -8 D
5 -13 D
5 -15 D
6 -12 D
5 -4 D
5 4 D
5 11 D
5 6 D
5 -2 D
5 -14 D
6 -19 D
5 -14 D
5 -4 D
5 2 D
5 4 D
5 -1 D
5 -6 D
6 -11 D
5 -16 D
5 -10 D
5 3 D
5 17 D
5 27 D
5 24 D
6 17 D
5 6 D
5 4 D
5 9 D
5 11 D
5 8 D
5 0 D
6 -8 D
5 -5 D
5 5 D
5 12 D
5 10 D
5 -3 D
5 -19 D
6 -29 D
5 -30 D
5 -28 D
5 -19 D
5 -3 D
5 12 D
5 23 D
6 22 D
5 13 D
5 -1 D
5 -9 D
5 -6 D
5 3 D
5 12 D
6 13 D
5 1 D
5 -10 D
5 -12 D
5 -2 D
5 7 D
5 1 D
6 -13 D
5 -27 D
5 -22 D
5 -5 D
5 14 D
5 17 D
5 8 D
6 -3 D
5 0 D
5 17 D
5 33 D
5 39 D
5 24 D
5 5 D
6 -9 D
5 -7 D
5 -2 D
5 0 D
5 -7 D
5 -17 D
5 -21 D
6 -16 D
5 -10 D
5 -8 D
5 -11 D
5 -12 D
5 -4 D
5 10 D
6 16 D
5 12 D
5 8 D
5 4 D
5 2 D
5 0 D
5 -3 D
6 -10 D
5 -11 D
5 -11 D
5 -7 D
5 0 D
5 4 D
5 4 D
6 2 D
5 6 D
5 8 D
5 8 D
5 1 D
5 -6 D
5 -7 D
6 1 D
5 6 D
5 6 D
5 -3 D
5 -5 D
5 -1 D
5 5 D
6 6 D
5 1 D
5 -5 D
5 -6 D
5 -2 D
5 5 D
5 10 D
6 9 D
5 5 D
5 -1 D
5 -3 D
5 -4 D
5 -4 D
5 -4 D
6 -5 D
5 0 D
5 6 D
5 8 D
5 8 D
5 -1 D
5 -11 D
6 -17 D
5 -15 D
5 -10 D
5 -6 D
5 -2 D
5 -1 D
5 -1 D
6 -3 D
5 -3 D
5 0 D
5 5 D
5 7 D
5 3 D
5 1 D
6 -1 D
5 1 D
5 3 D
5 4 D
5 2 D
5 2 D
5 1 D
6 2 D
5 4 D
5 9 D
5 17 D
5 20 D
5 16 D
5 2 D
6 -10 D
5 -18 D
5 -12 D
5 2 D
5 13 D
5 10 D
5 2 D
6 -8 D
5 -9 D
5 -6 D
5 -2 D
5 -1 D
5 0 D
5 4 D
6 6 D
5 2 D
5 -5 D
5 -9 D
5 -11 D
5 -8 D
5 -2 D
6 -2 D
5 -5 D
5 -7 D
5 -4 D
5 5 D
5 10 D
5 9 D
6 4 D
5 -3 D
5 -3 D
5 -1 D
5 2 D
5 1 D
5 -4 D
6 -5 D
5 -6 D
5 -3 D
5 3 D
5 5 D
5 4 D
5 3 D
6 2 D
5 1 D
5 4 D
5 7 D
5 6 D
5 3 D
5 4 D
6 3 D
5 3 D
5 -3 D
5 -9 D
5 -10 D
5 -9 D
5 -4 D
6 -2 D
5 -3 D
5 -6 D
5 -1 D
5 3 D
5 6 D
5 5 D
6 2 D
5 -1 D
5 -1 D
5 -2 D
5 -2 D
5 -6 D
5 -11 D
6 -10 D
5 -9 D
5 -3 D
5 -2 D
5 -2 D
5 -5 D
5 -7 D
6 -5 D
5 0 D
5 3 D
5 4 D
5 5 D
5 6 D
5 8 D
6 12 D
5 14 D
5 10 D
5 7 D
5 0 D
5 -4 D
5 -4 D
6 1 D
5 7 D
5 9 D
5 6 D
5 4 D
5 0 D
5 2 D
6 4 D
5 2 D
5 -4 D
5 -9 D
5 -8 D
5 -5 D
5 -1 D
6 3 D
5 6 D
5 6 D
5 4 D
5 1 D
5 -1 D
5 -3 D
6 -3 D
5 -9 D
5 -14 D
5 -15 D
5 -11 D
5 1 D
5 10 D
6 15 D
5 14 D
5 10 D
5 6 D
5 1 D
5 -1 D
5 -2 D
6 -1 D
5 -2 D
5 -2 D
5 -5 D
5 -4 D
5 -1 D
5 4 D
6 8 D
5 10 D
5 8 D
5 0 D
5 -4 D
5 -6 D
5 -5 D
6 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
5 5 D
5 5 D
6 2 D
5 -5 D
5 -8 D
5 -9 D
5 -7 D
5 -3 D
5 0 D
6 1 D
5 0 D
5 -2 D
5 -3 D
5 -3 D
5 3 D
5 6 D
6 8 D
5 5 D
5 1 D
5 -2 D
5 -4 D
5 -4 D
5 -3 D
6 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
5 1 D
5 0 D
6 -3 D
5 -5 D
5 -4 D
5 -1 D
5 3 D
5 8 D
5 10 D
6 13 D
5 10 D
5 7 D
5 3 D
5 -1 D
5 -4 D
5 -5 D
6 -4 D
5 -4 D
5 0 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1881
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S-1) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1882
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
1779 524 M
6 0 D
5 -1 D
5 0 D
5 1 D
5 1 D
5 1 D
5 1 D
6 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 1 D
6 0 D
5 1 D
5 0 D
5 0 D
5 0 D
5 1 D
5 0 D
6 -1 D
5 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
6 0 D
5 1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
5 -2 D
5 0 D
6 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 0 D
5 0 D
6 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 -1 D
5 1 D
5 -2 D
5 0 D
5 -1 D
5 2 D
6 0 D
5 1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 -1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
5 -1 D
6 1 D
5 0 D
5 0 D
5 -1 D
5 -2 D
5 0 D
5 0 D
6 0 D
5 0 D
5 2 D
5 1 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 2 D
5 0 D
5 0 D
5 0 D
5 1 D
6 1 D
5 -3 D
5 -9 D
5 -32 D
5 -96 D
5 -214 D
3 -167 D
2327 0 M
3 189 D
5 681 D
3 330 D
2349 1200 M
1 -75 D
5 -581 D
6 -231 D
5 131 D
5 171 D
5 19 D
5 -64 D
5 -41 D
5 -48 D
6 -103 D
5 -51 D
5 146 D
5 219 D
5 -76 D
5 -488 D
2 -128 D
2436 0 M
2 221 D
5 620 D
5 213 D
5 -196 D
5 -250 D
5 -34 D
6 148 D
5 144 D
5 -4 D
5 -208 D
5 -313 D
5 -174 D
5 146 D
6 365 D
5 253 D
5 -94 D
5 -347 D
5 -306 D
5 -76 D
5 108 D
6 127 D
5 41 D
5 14 D
5 91 D
5 141 D
5 71 D
5 -62 D
6 -152 D
5 -101 D
5 63 D
5 192 D
5 146 D
5 -60 D
5 -225 D
6 -157 D
5 118 D
5 325 D
5 235 D
5 -83 D
5 -291 D
5 -184 D
6 40 D
5 44 D
5 -187 D
5 -318 D
2 -44 D
2671 0 M
3 126 D
5 356 D
6 182 D
5 -97 D
5 -207 D
5 -150 D
5 -68 D
5 21 D
5 190 D
6 369 D
5 345 D
5 52 D
5 -273 D
5 -348 D
5 -156 D
5 100 D
6 246 D
5 226 D
5 60 D
5 -172 D
5 -319 D
5 -261 D
5 -49 D
6 183 D
5 331 D
5 375 D
3 138 D
2813 1200 M
0 -7 D
5 -536 D
5 -657 D
2837 0 M
2 170 D
5 480 D
5 225 D
5 -126 D
5 -326 D
6 -265 D
5 -58 D
5 124 D
5 183 D
5 107 D
5 -38 D
5 -127 D
6 -68 D
5 139 D
5 398 D
4 382 D
2930 1200 M
1 -134 D
6 -603 D
5 -432 D
2 -31 D
2949 0 M
3 113 D
5 197 D
5 54 D
5 -87 D
6 -143 D
5 -108 D
5 12 D
5 178 D
5 262 D
5 198 D
5 100 D
6 97 D
5 154 D
5 158 D
1 15 D
3027 1200 M
2 -27 D
5 -255 D
5 -350 D
6 -318 D
5 -213 D
1 -37 D
3082 0 M
4 229 D
5 300 D
5 253 D
5 247 D
4 171 D
3118 1200 M
4 -158 D
5 -234 D
5 -136 D
5 -81 D
5 -114 D
5 -190 D
6 -240 D
1 -47 D
3169 0 M
4 323 D
5 401 D
5 287 D
6 157 D
1 32 D
3213 1200 M
1 -69 D
5 -665 D
4 -466 D
3239 0 M
1 53 D
5 479 D
5 355 D
5 162 D
6 -40 D
5 -181 D
5 -229 D
5 -208 D
5 -179 D
5 -166 D
2 -46 D
3313 0 M
4 191 D
5 296 D
5 206 D
6 18 D
5 -105 D
5 -41 D
5 147 D
5 298 D
3 190 D
3383 1200 M
1 -100 D
5 -423 D
5 -332 D
5 -208 D
6 -109 D
1 -28 D
3443 0 M
3 199 D
5 266 D
5 233 D
5 266 D
5 236 D
3479 1200 M
3 -136 D
5 -378 D
5 -282 D
5 -75 D
5 86 D
5 106 D
6 -8 D
5 -136 D
5 -146 D
5 -23 D
5 156 D
5 258 D
5 213 D
6 63 D
5 -68 D
5 -110 D
5 -75 D
5 -50 D
5 -80 D
5 -121 D
6 -105 D
5 -35 D
5 31 D
5 36 D
5 9 D
5 17 D
5 87 D
6 161 D
5 165 D
5 76 D
5 -45 D
5 -108 D
5 -84 D
5 -16 D
6 36 D
5 38 D
5 4 D
5 -17 D
5 17 D
5 53 D
5 23 D
6 -78 D
5 -164 D
5 -160 D
5 -57 D
5 62 D
5 101 D
5 35 D
6 -71 D
5 -107 D
5 -53 D
5 35 D
5 73 D
5 44 D
5 4 D
6 7 D
5 67 D
5 142 D
5 179 D
5 138 D
5 34 D
5 -73 D
6 -139 D
5 -167 D
5 -157 D
5 -109 D
5 -37 D
5 29 D
5 77 D
6 104 D
5 98 D
5 54 D
5 1 D
5 -19 D
5 -5 D
5 12 D
6 2 D
5 -35 D
5 -64 D
5 -50 D
5 -3 D
5 37 D
5 26 D
6 -31 D
5 -70 D
5 -70 D
5 -38 D
5 -22 D
5 -12 D
5 15 D
6 68 D
5 116 D
5 117 D
5 71 D
5 1 D
5 -49 D
5 -67 D
6 -58 D
5 -30 D
5 -9 D
5 2 D
5 5 D
5 6 D
5 14 D
6 16 D
5 0 D
5 -29 D
5 -46 D
5 -34 D
5 -3 D
5 18 D
6 31 D
5 41 D
5 51 D
5 56 D
5 43 D
5 11 D
5 -29 D
6 -60 D
5 -76 D
5 -73 D
5 -50 D
5 -11 D
5 13 D
5 16 D
6 10 D
5 25 D
5 64 D
5 102 D
5 102 D
5 65 D
5 17 D
6 -5 D
5 -10 D
5 -26 D
5 -67 D
5 -105 D
5 -95 D
5 -35 D
6 31 D
5 41 D
5 -10 D
5 -74 D
5 -82 D
5 -25 D
5 50 D
6 81 D
5 49 D
5 -12 D
5 -50 D
5 -31 D
5 30 D
5 78 D
6 78 D
5 39 D
5 5 D
5 12 D
5 54 D
5 84 D
5 68 D
6 5 D
5 -53 D
5 -81 D
5 -64 D
5 -44 D
5 -45 D
5 -66 D
6 -86 D
5 -75 D
5 -39 D
5 -11 D
5 -2 D
5 -6 D
5 -7 D
6 0 D
5 25 D
5 58 D
5 76 D
5 62 D
5 30 D
5 11 D
6 15 D
5 18 D
5 7 D
5 -16 D
5 -41 D
5 -45 D
5 -23 D
6 9 D
5 29 D
5 21 D
5 -2 D
5 -20 D
5 -17 D
5 0 D
6 17 D
5 27 D
5 33 D
5 31 D
5 27 D
5 20 D
5 10 D
6 -6 D
5 -20 D
5 -18 D
5 -4 D
5 10 D
5 10 D
5 -2 D
6 -9 D
5 -6 D
5 -7 D
5 -18 D
5 -39 D
5 -46 D
5 -28 D
6 15 D
5 46 D
5 52 D
5 25 D
5 -11 D
5 -33 D
5 -38 D
6 -38 D
5 -36 D
5 -25 D
5 -16 D
5 -5 D
5 3 D
5 16 D
6 28 D
5 37 D
5 35 D
5 21 D
5 12 D
5 20 D
5 35 D
6 39 D
5 12 D
5 -24 D
5 -43 D
5 -38 D
5 -26 D
5 -16 D
6 -14 D
5 -12 D
5 -8 D
5 -9 D
5 -9 D
5 -10 D
5 -7 D
6 -6 D
5 3 D
5 19 D
5 35 D
5 39 D
5 30 D
5 19 D
6 10 D
5 8 D
5 2 D
5 -6 D
5 -11 D
5 -8 D
5 2 D
6 7 D
5 -1 D
5 -19 D
5 -39 D
5 -42 D
5 -31 D
5 -9 D
6 17 D
5 28 D
5 32 D
5 23 D
5 15 D
5 4 D
5 -6 D
6 -10 D
5 -9 D
5 -3 D
5 0 D
5 -1 D
5 -5 D
5 -7 D
6 1 D
5 18 D
5 28 D
5 22 D
5 0 D
5 -20 D
5 -26 D
6 -16 D
5 -3 D
5 2 D
5 -7 D
5 -23 D
5 -32 D
5 -27 D
6 -16 D
5 -6 D
5 -4 D
5 1 D
5 15 D
5 35 D
5 45 D
6 35 D
5 19 D
5 6 D
5 5 D
5 4 D
5 0 D
5 -8 D
6 -13 D
5 -15 D
5 -12 D
5 -4 D
5 4 D
5 11 D
5 6 D
6 -2 D
5 -14 D
5 -19 D
5 -14 D
5 -4 D
5 2 D
5 4 D
6 -1 D
5 -6 D
5 -11 D
5 -16 D
5 -10 D
5 3 D
5 17 D
6 27 D
5 24 D
5 17 D
5 6 D
5 4 D
5 9 D
5 11 D
6 8 D
5 0 D
5 -8 D
5 -5 D
5 5 D
5 12 D
5 10 D
6 -3 D
5 -19 D
5 -29 D
5 -30 D
5 -28 D
5 -19 D
5 -3 D
6 12 D
5 23 D
5 22 D
5 13 D
5 -1 D
5 -9 D
5 -6 D
6 3 D
5 12 D
5 13 D
5 1 D
5 -10 D
5 -12 D
5 -2 D
6 7 D
5 1 D
5 -13 D
5 -27 D
5 -22 D
5 -5 D
5 14 D
6 17 D
5 8 D
5 -3 D
5 0 D
5 17 D
5 33 D
5 39 D
6 24 D
5 5 D
5 -9 D
5 -7 D
5 -2 D
5 0 D
5 -7 D
6 -17 D
5 -21 D
5 -16 D
5 -10 D
5 -8 D
5 -11 D
5 -12 D
6 -4 D
5 10 D
5 16 D
5 12 D
5 8 D
5 4 D
5 2 D
6 0 D
5 -3 D
5 -10 D
5 -11 D
5 -11 D
5 -7 D
5 0 D
6 4 D
5 4 D
5 2 D
5 6 D
5 8 D
5 8 D
5 1 D
6 -6 D
5 -7 D
5 1 D
5 6 D
5 6 D
5 -3 D
5 -5 D
6 -1 D
5 5 D
5 6 D
5 1 D
5 -5 D
5 -6 D
5 -2 D
6 5 D
5 10 D
5 9 D
5 5 D
5 -1 D
5 -3 D
5 -4 D
6 -4 D
5 -4 D
5 -5 D
5 0 D
5 6 D
5 8 D
5 8 D
6 -1 D
5 -11 D
5 -17 D
5 -15 D
5 -10 D
5 -6 D
5 -2 D
6 -1 D
5 -1 D
5 -3 D
5 -3 D
5 0 D
5 5 D
5 7 D
6 3 D
5 1 D
5 -1 D
5 1 D
5 3 D
5 4 D
5 2 D
6 2 D
5 1 D
5 2 D
5 4 D
5 9 D
5 17 D
5 20 D
6 16 D
5 2 D
5 -10 D
5 -18 D
5 -12 D
5 2 D
5 13 D
6 10 D
5 2 D
5 -8 D
5 -9 D
5 -6 D
5 -2 D
5 -1 D
6 0 D
5 4 D
5 6 D
5 2 D
5 -5 D
5 -9 D
5 -11 D
6 -8 D
5 -2 D
5 -2 D
5 -5 D
5 -7 D
5 -4 D
5 5 D
6 10 D
5 9 D
5 4 D
5 -3 D
5 -3 D
5 -1 D
5 2 D
6 1 D
5 -4 D
5 -5 D
5 -6 D
5 -3 D
5 3 D
5 5 D
6 4 D
5 3 D
5 2 D
5 1 D
5 4 D
5 7 D
5 6 D
6 3 D
5 4 D
5 3 D
5 3 D
5 -3 D
5 -9 D
5 -10 D
6 -9 D
5 -4 D
5 -2 D
5 -3 D
5 -6 D
5 -1 D
5 3 D
6 6 D
5 5 D
5 2 D
5 -1 D
5 -1 D
5 -2 D
5 -2 D
6 -6 D
5 -11 D
5 -10 D
5 -9 D
5 -3 D
5 -2 D
5 -2 D
6 -5 D
5 -7 D
5 -5 D
5 0 D
5 3 D
5 4 D
5 5 D
6 6 D
5 8 D
5 12 D
5 14 D
5 10 D
5 7 D
5 0 D
6 -4 D
5 -4 D
5 1 D
5 7 D
5 9 D
5 6 D
5 4 D
6 0 D
5 2 D
5 4 D
5 2 D
5 -4 D
5 -9 D
5 -8 D
6 -5 D
5 -1 D
5 3 D
5 6 D
5 6 D
5 4 D
5 1 D
6 -1 D
5 -3 D
5 -3 D
5 -9 D
5 -14 D
5 -15 D
5 -11 D
6 1 D
5 10 D
5 15 D
5 14 D
5 10 D
5 6 D
5 1 D
6 -1 D
5 -2 D
5 -1 D
5 -2 D
5 -2 D
5 -5 D
5 -4 D
6 -1 D
5 4 D
5 8 D
5 10 D
5 8 D
5 0 D
5 -4 D
6 -6 D
5 -5 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
6 5 D
5 5 D
5 2 D
5 -5 D
5 -8 D
5 -9 D
5 -7 D
6 -3 D
5 0 D
5 1 D
5 0 D
5 -2 D
5 -3 D
5 -3 D
6 3 D
5 6 D
5 8 D
5 5 D
5 1 D
5 -2 D
5 -4 D
6 -4 D
5 -3 D
5 -3 D
5 -1 D
5 -2 D
5 -1 D
5 2 D
6 1 D
5 0 D
5 -3 D
5 -5 D
5 -4 D
5 -1 D
5 3 D
6 8 D
5 10 D
5 13 D
5 10 D
5 7 D
5 3 D
5 -1 D
6 -4 D
5 -5 D
5 -4 D
5 -4 D
5 0 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1882
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S0) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1883
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
2294 524 M
5 0 D
5 -1 D
5 0 D
5 1 D
5 1 D
6 1 D
5 1 D
5 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 1 D
5 0 D
5 1 D
5 0 D
5 0 D
5 0 D
6 1 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
5 0 D
5 0 D
6 0 D
5 0 D
5 0 D
5 1 D
5 0 D
5 1 D
5 1 D
6 0 D
5 -1 D
5 0 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
6 -2 D
5 0 D
5 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
6 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
6 0 D
5 -1 D
5 0 D
5 -1 D
5 1 D
5 -2 D
5 0 D
6 -1 D
5 2 D
5 0 D
5 1 D
5 -1 D
5 0 D
5 0 D
6 0 D
5 -1 D
5 -1 D
5 0 D
5 1 D
5 1 D
5 0 D
6 -1 D
5 -1 D
5 1 D
5 0 D
5 0 D
5 -1 D
5 -2 D
6 0 D
5 0 D
5 0 D
5 0 D
5 2 D
5 1 D
5 0 D
6 0 D
5 -1 D
5 0 D
5 0 D
5 2 D
5 0 D
5 0 D
6 0 D
5 1 D
5 1 D
5 -3 D
5 -9 D
5 -32 D
5 -96 D
6 -214 D
3 -167 D
2841 0 M
3 189 D
5 681 D
3 330 D
2864 1200 M
1 -75 D
5 -581 D
5 -231 D
5 131 D
5 171 D
5 19 D
5 -64 D
6 -41 D
5 -48 D
5 -103 D
5 -51 D
5 146 D
5 219 D
5 -76 D
6 -488 D
1 -128 D
2950 0 M
2 221 D
5 620 D
5 213 D
5 -196 D
6 -250 D
5 -34 D
5 148 D
5 144 D
5 -4 D
5 -208 D
5 -313 D
6 -174 D
5 146 D
5 365 D
5 253 D
5 -94 D
5 -347 D
5 -306 D
6 -76 D
5 108 D
5 127 D
5 41 D
5 14 D
5 91 D
5 141 D
6 71 D
5 -62 D
5 -152 D
5 -101 D
5 63 D
5 192 D
5 146 D
6 -60 D
5 -225 D
5 -157 D
5 118 D
5 325 D
5 235 D
5 -83 D
6 -291 D
5 -184 D
5 40 D
5 44 D
5 -187 D
5 -318 D
2 -44 D
3185 0 M
4 126 D
5 356 D
5 182 D
5 -97 D
5 -207 D
5 -150 D
5 -68 D
6 21 D
5 190 D
5 369 D
5 345 D
5 52 D
5 -273 D
5 -348 D
6 -156 D
5 100 D
5 246 D
5 226 D
5 60 D
5 -172 D
5 -319 D
6 -261 D
5 -49 D
5 183 D
5 331 D
5 375 D
3 138 D
3327 1200 M
0 -7 D
6 -536 D
5 -657 D
3351 0 M
2 170 D
5 480 D
5 225 D
6 -126 D
5 -326 D
5 -265 D
5 -58 D
5 124 D
5 183 D
5 107 D
6 -38 D
5 -127 D
5 -68 D
5 139 D
5 398 D
4 382 D
3444 1200 M
2 -134 D
5 -603 D
5 -432 D
2 -31 D
3463 0 M
3 113 D
5 197 D
6 54 D
5 -87 D
5 -143 D
5 -108 D
5 12 D
5 178 D
5 262 D
6 198 D
5 100 D
5 97 D
5 154 D
5 158 D
1 15 D
3542 1200 M
1 -27 D
6 -255 D
5 -350 D
5 -318 D
5 -213 D
1 -37 D
3596 0 M
4 229 D
5 300 D
5 253 D
5 247 D
4 171 D
3633 1200 M
3 -158 D
5 -234 D
5 -136 D
5 -81 D
6 -114 D
5 -190 D
5 -240 D
1 -47 D
3683 0 M
4 323 D
6 401 D
5 287 D
5 157 D
1 32 D
3728 1200 M
1 -69 D
5 -665 D
3 -466 D
3754 0 M
0 53 D
5 479 D
6 355 D
5 162 D
5 -40 D
5 -181 D
5 -229 D
5 -208 D
5 -179 D
6 -166 D
1 -46 D
3827 0 M
4 191 D
6 296 D
5 206 D
5 18 D
5 -105 D
5 -41 D
5 147 D
5 298 D
3 190 D
3897 1200 M
1 -100 D
5 -423 D
6 -332 D
5 -208 D
5 -109 D
2 -28 D
3957 0 M
3 199 D
5 266 D
5 233 D
5 266 D
5 236 D
3994 1200 M
2 -136 D
5 -378 D
5 -282 D
5 -75 D
6 86 D
5 106 D
5 -8 D
5 -136 D
5 -146 D
5 -23 D
5 156 D
6 258 D
5 213 D
5 63 D
5 -68 D
5 -110 D
5 -75 D
5 -50 D
6 -80 D
5 -121 D
5 -105 D
5 -35 D
5 31 D
5 36 D
5 9 D
6 17 D
5 87 D
5 161 D
5 165 D
5 76 D
5 -45 D
5 -108 D
6 -84 D
5 -16 D
5 36 D
5 38 D
5 4 D
5 -17 D
5 17 D
6 53 D
5 23 D
5 -78 D
5 -164 D
5 -160 D
5 -57 D
5 62 D
6 101 D
5 35 D
5 -71 D
5 -107 D
5 -53 D
5 35 D
5 73 D
6 44 D
5 4 D
5 7 D
5 67 D
5 142 D
5 179 D
5 138 D
6 34 D
5 -73 D
5 -139 D
5 -167 D
5 -157 D
5 -109 D
5 -37 D
6 29 D
5 77 D
5 104 D
5 98 D
5 54 D
5 1 D
5 -19 D
6 -5 D
5 12 D
5 2 D
5 -35 D
5 -64 D
5 -50 D
5 -3 D
6 37 D
5 26 D
5 -31 D
5 -70 D
5 -70 D
5 -38 D
5 -22 D
6 -12 D
5 15 D
5 68 D
5 116 D
5 117 D
5 71 D
5 1 D
6 -49 D
5 -67 D
5 -58 D
5 -30 D
5 -9 D
5 2 D
5 5 D
6 6 D
5 14 D
5 16 D
5 0 D
5 -29 D
5 -46 D
5 -34 D
6 -3 D
5 18 D
5 31 D
5 41 D
5 51 D
5 56 D
5 43 D
6 11 D
5 -29 D
5 -60 D
5 -76 D
5 -73 D
5 -50 D
5 -11 D
6 13 D
5 16 D
5 10 D
5 25 D
5 64 D
5 102 D
5 102 D
6 65 D
5 17 D
5 -5 D
5 -10 D
5 -26 D
5 -67 D
5 -105 D
6 -95 D
5 -35 D
5 31 D
5 41 D
5 -10 D
5 -74 D
5 -82 D
6 -25 D
5 50 D
5 81 D
5 49 D
5 -12 D
5 -50 D
5 -31 D
6 30 D
5 78 D
5 78 D
5 39 D
5 5 D
5 12 D
5 54 D
6 84 D
5 68 D
5 5 D
5 -53 D
5 -81 D
5 -64 D
5 -44 D
6 -45 D
5 -66 D
5 -86 D
5 -75 D
5 -39 D
5 -11 D
5 -2 D
6 -6 D
5 -7 D
5 0 D
5 25 D
5 58 D
5 76 D
5 62 D
6 30 D
5 11 D
5 15 D
5 18 D
5 7 D
5 -16 D
5 -41 D
6 -45 D
5 -23 D
5 9 D
5 29 D
5 21 D
5 -2 D
5 -20 D
6 -17 D
5 0 D
5 17 D
5 27 D
5 33 D
5 31 D
5 27 D
6 20 D
5 10 D
5 -6 D
5 -20 D
5 -18 D
5 -4 D
5 10 D
6 10 D
5 -2 D
5 -9 D
5 -6 D
5 -7 D
5 -18 D
5 -39 D
6 -46 D
5 -28 D
5 15 D
5 46 D
5 52 D
5 25 D
5 -11 D
6 -33 D
5 -38 D
5 -38 D
5 -36 D
5 -25 D
5 -16 D
5 -5 D
6 3 D
5 16 D
5 28 D
5 37 D
5 35 D
5 21 D
5 12 D
6 20 D
5 35 D
5 39 D
5 12 D
5 -24 D
5 -43 D
5 -38 D
6 -26 D
5 -16 D
5 -14 D
5 -12 D
5 -8 D
5 -9 D
5 -9 D
6 -10 D
5 -7 D
5 -6 D
5 3 D
5 19 D
5 35 D
5 39 D
6 30 D
5 19 D
5 10 D
5 8 D
5 2 D
5 -6 D
5 -11 D
6 -8 D
5 2 D
5 7 D
5 -1 D
5 -19 D
5 -39 D
5 -42 D
6 -31 D
5 -9 D
5 17 D
5 28 D
5 32 D
5 23 D
5 15 D
6 4 D
5 -6 D
5 -10 D
5 -9 D
5 -3 D
5 0 D
5 -1 D
6 -5 D
5 -7 D
5 1 D
5 18 D
5 28 D
5 22 D
5 0 D
6 -20 D
5 -26 D
5 -16 D
5 -3 D
5 2 D
5 -7 D
5 -23 D
6 -32 D
5 -27 D
5 -16 D
5 -6 D
5 -4 D
5 1 D
5 15 D
6 35 D
5 45 D
5 35 D
5 19 D
5 6 D
5 5 D
5 4 D
6 0 D
5 -8 D
5 -13 D
5 -15 D
5 -12 D
5 -4 D
5 4 D
6 11 D
5 6 D
5 -2 D
5 -14 D
5 -19 D
5 -14 D
5 -4 D
6 2 D
5 4 D
5 -1 D
5 -6 D
5 -11 D
5 -16 D
5 -10 D
6 3 D
5 17 D
5 27 D
5 24 D
5 17 D
5 6 D
5 4 D
6 9 D
5 11 D
5 8 D
5 0 D
5 -8 D
5 -5 D
5 5 D
6 12 D
5 10 D
5 -3 D
5 -19 D
5 -29 D
5 -30 D
5 -28 D
6 -19 D
5 -3 D
5 12 D
5 23 D
5 22 D
5 13 D
5 -1 D
6 -9 D
5 -6 D
5 3 D
5 12 D
5 13 D
5 1 D
5 -10 D
6 -12 D
5 -2 D
5 7 D
5 1 D
5 -13 D
5 -27 D
5 -22 D
6 -5 D
5 14 D
5 17 D
5 8 D
5 -3 D
5 0 D
5 17 D
6 33 D
5 39 D
5 24 D
5 5 D
5 -9 D
5 -7 D
5 -2 D
6 0 D
5 -7 D
5 -17 D
5 -21 D
5 -16 D
5 -10 D
5 -8 D
6 -11 D
5 -12 D
5 -4 D
5 10 D
5 16 D
5 12 D
5 8 D
6 4 D
5 2 D
5 0 D
5 -3 D
5 -10 D
5 -11 D
5 -11 D
6 -7 D
5 0 D
5 4 D
5 4 D
5 2 D
5 6 D
5 8 D
6 8 D
5 1 D
5 -6 D
5 -7 D
5 1 D
5 6 D
5 6 D
6 -3 D
5 -5 D
5 -1 D
5 5 D
5 6 D
5 1 D
5 -5 D
6 -6 D
5 -2 D
5 5 D
5 10 D
5 9 D
5 5 D
5 -1 D
6 -3 D
5 -4 D
5 -4 D
5 -4 D
5 -5 D
5 0 D
5 6 D
6 8 D
5 8 D
5 -1 D
5 -11 D
5 -17 D
5 -15 D
5 -10 D
6 -6 D
5 -2 D
5 -1 D
5 -1 D
5 -3 D
5 -3 D
5 0 D
6 5 D
5 7 D
5 3 D
5 1 D
5 -1 D
5 1 D
5 3 D
6 4 D
5 2 D
5 2 D
5 1 D
5 2 D
5 4 D
5 9 D
6 17 D
5 20 D
5 16 D
5 2 D
5 -10 D
5 -18 D
5 -12 D
6 2 D
5 13 D
5 10 D
5 2 D
5 -8 D
5 -9 D
5 -6 D
6 -2 D
5 -1 D
5 0 D
5 4 D
5 6 D
5 2 D
5 -5 D
6 -9 D
5 -11 D
5 -8 D
5 -2 D
5 -2 D
5 -5 D
5 -7 D
6 -4 D
5 5 D
5 10 D
5 9 D
5 4 D
5 -3 D
5 -3 D
6 -1 D
5 2 D
5 1 D
5 -4 D
5 -5 D
5 -6 D
5 -3 D
6 3 D
5 5 D
5 4 D
5 3 D
5 2 D
5 1 D
5 4 D
6 7 D
5 6 D
5 3 D
5 4 D
5 3 D
5 3 D
5 -3 D
6 -9 D
5 -10 D
5 -9 D
5 -4 D
5 -2 D
5 -3 D
5 -6 D
6 -1 D
5 3 D
5 6 D
5 5 D
5 2 D
5 -1 D
5 -1 D
6 -2 D
5 -2 D
5 -6 D
5 -11 D
5 -10 D
5 -9 D
5 -3 D
6 -2 D
5 -2 D
5 -5 D
5 -7 D
5 -5 D
5 0 D
5 3 D
6 4 D
5 5 D
5 6 D
5 8 D
5 12 D
5 14 D
5 10 D
6 7 D
5 0 D
5 -4 D
5 -4 D
5 1 D
5 7 D
5 9 D
6 6 D
5 4 D
5 0 D
5 2 D
5 4 D
5 2 D
5 -4 D
6 -9 D
5 -8 D
5 -5 D
5 -1 D
5 3 D
5 6 D
5 6 D
6 4 D
5 1 D
5 -1 D
5 -3 D
5 -3 D
5 -9 D
5 -14 D
6 -15 D
5 -11 D
5 1 D
5 10 D
5 15 D
5 14 D
5 10 D
6 6 D
5 1 D
5 -1 D
5 -2 D
5 -1 D
5 -2 D
5 -2 D
6 -5 D
5 -4 D
5 -1 D
5 4 D
5 8 D
5 10 D
5 8 D
6 0 D
5 -4 D
5 -6 D
5 -5 D
5 -3 D
5 -1 D
5 -2 D
6 -1 D
5 2 D
5 5 D
5 5 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1883
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S1) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1884
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
2808 524 M
5 0 D
5 -1 D
5 0 D
6 1 D
5 1 D
5 1 D
5 1 D
5 0 D
5 0 D
5 0 D
6 0 D
5 -1 D
5 0 D
5 1 D
5 0 D
5 1 D
5 0 D
6 0 D
5 0 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 -1 D
6 0 D
5 0 D
5 0 D
5 0 D
5 0 D
5 1 D
5 0 D
6 1 D
5 1 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 -1 D
6 -1 D
5 -1 D
5 -2 D
5 0 D
5 0 D
5 1 D
5 0 D
6 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
5 -1 D
6 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 -1 D
5 1 D
6 -2 D
5 0 D
5 -1 D
5 2 D
5 0 D
5 1 D
5 -1 D
6 0 D
5 0 D
5 0 D
5 -1 D
5 -1 D
5 0 D
5 1 D
6 1 D
5 0 D
5 -1 D
5 -1 D
5 1 D
5 0 D
5 0 D
6 -1 D
5 -2 D
5 0 D
5 0 D
5 0 D
5 0 D
5 2 D
6 1 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 0 D
5 2 D
6 0 D
5 0 D
5 0 D
5 1 D
5 1 D
5 -3 D
5 -9 D
6 -32 D
5 -96 D
5 -214 D
3 -167 D
3356 0 M
2 189 D
5 681 D
3 330 D
3378 1200 M
1 -75 D
5 -581 D
5 -231 D
5 131 D
5 171 D
6 19 D
5 -64 D
5 -41 D
5 -48 D
5 -103 D
5 -51 D
5 146 D
6 219 D
5 -76 D
5 -488 D
1 -128 D
3464 0 M
2 221 D
5 620 D
6 213 D
5 -196 D
5 -250 D
5 -34 D
5 148 D
5 144 D
5 -4 D
6 -208 D
5 -313 D
5 -174 D
5 146 D
5 365 D
5 253 D
5 -94 D
6 -347 D
5 -306 D
5 -76 D
5 108 D
5 127 D
5 41 D
5 14 D
6 91 D
5 141 D
5 71 D
5 -62 D
5 -152 D
5 -101 D
5 63 D
6 192 D
5 146 D
5 -60 D
5 -225 D
5 -157 D
5 118 D
5 325 D
6 235 D
5 -83 D
5 -291 D
5 -184 D
5 40 D
5 44 D
5 -187 D
6 -318 D
1 -44 D
3700 0 M
3 126 D
5 356 D
5 182 D
5 -97 D
5 -207 D
6 -150 D
5 -68 D
5 21 D
5 190 D
5 369 D
5 345 D
5 52 D
6 -273 D
5 -348 D
5 -156 D
5 100 D
5 246 D
5 226 D
5 60 D
6 -172 D
5 -319 D
5 -261 D
5 -49 D
5 183 D
5 331 D
5 375 D
3 138 D
3841 1200 M
1 -7 D
5 -536 D
5 -657 D
3865 0 M
2 170 D
6 480 D
5 225 D
5 -126 D
5 -326 D
5 -265 D
5 -58 D
5 124 D
6 183 D
5 107 D
5 -38 D
5 -127 D
5 -68 D
5 139 D
5 398 D
4 382 D
3959 1200 M
1 -134 D
5 -603 D
5 -432 D
2 -31 D
3977 0 M
4 113 D
5 197 D
5 54 D
5 -87 D
5 -143 D
5 -108 D
5 12 D
6 178 D
5 262 D
5 198 D
5 100 D
5 97 D
5 154 D
5 158 D
2 15 D
4056 1200 M
2 -27 D
5 -255 D
5 -350 D
5 -318 D
5 -213 D
2 -37 D
4111 0 M
3 229 D
5 300 D
6 253 D
5 247 D
3 171 D
4147 1200 M
3 -158 D
5 -234 D
6 -136 D
5 -81 D
5 -114 D
5 -190 D
5 -240 D
1 -47 D
4197 0 M
5 323 D
5 401 D
5 287 D
5 157 D
1 32 D
4242 1200 M
1 -69 D
5 -665 D
4 -466 D
4268 0 M
1 53 D
5 479 D
5 355 D
5 162 D
5 -40 D
5 -181 D
5 -229 D
6 -208 D
5 -179 D
5 -166 D
1 -46 D
4342 0 M
4 191 D
5 296 D
5 206 D
5 18 D
5 -105 D
5 -41 D
6 147 D
5 298 D
3 190 D
4411 1200 M
2 -100 D
5 -423 D
5 -332 D
5 -208 D
5 -109 D
2 -28 D
4471 0 M
3 199 D
5 266 D
6 233 D
5 266 D
4 236 D
4508 1200 M
2 -136 D
5 -378 D
6 -282 D
5 -75 D
5 86 D
5 106 D
5 -8 D
5 -136 D
5 -146 D
6 -23 D
5 156 D
5 258 D
5 213 D
5 63 D
5 -68 D
5 -110 D
6 -75 D
5 -50 D
5 -80 D
5 -121 D
5 -105 D
5 -35 D
5 31 D
6 36 D
5 9 D
5 17 D
5 87 D
5 161 D
5 165 D
5 76 D
6 -45 D
5 -108 D
5 -84 D
5 -16 D
5 36 D
5 38 D
5 4 D
6 -17 D
5 17 D
5 53 D
5 23 D
5 -78 D
5 -164 D
5 -160 D
6 -57 D
5 62 D
5 101 D
5 35 D
5 -71 D
5 -107 D
5 -53 D
6 35 D
5 73 D
5 44 D
5 4 D
5 7 D
5 67 D
5 142 D
6 179 D
5 138 D
5 34 D
5 -73 D
5 -139 D
5 -167 D
5 -157 D
6 -109 D
5 -37 D
5 29 D
5 77 D
5 104 D
5 98 D
5 54 D
6 1 D
5 -19 D
5 -5 D
5 12 D
5 2 D
5 -35 D
5 -64 D
6 -50 D
5 -3 D
5 37 D
5 26 D
5 -31 D
5 -70 D
5 -70 D
6 -38 D
5 -22 D
5 -12 D
5 15 D
5 68 D
5 116 D
5 117 D
6 71 D
5 1 D
5 -49 D
5 -67 D
5 -58 D
5 -30 D
5 -9 D
6 2 D
5 5 D
5 6 D
5 14 D
5 16 D
5 0 D
5 -29 D
6 -46 D
5 -34 D
5 -3 D
5 18 D
5 31 D
5 41 D
5 51 D
6 56 D
5 43 D
5 11 D
5 -29 D
5 -60 D
5 -76 D
5 -73 D
6 -50 D
5 -11 D
5 13 D
5 16 D
5 10 D
5 25 D
5 64 D
6 102 D
5 102 D
5 65 D
5 17 D
5 -5 D
5 -10 D
5 -26 D
6 -67 D
5 -105 D
5 -95 D
5 -35 D
5 31 D
5 41 D
5 -10 D
6 -74 D
5 -82 D
5 -25 D
5 50 D
5 81 D
5 49 D
5 -12 D
6 -50 D
5 -31 D
5 30 D
5 78 D
5 78 D
5 39 D
5 5 D
6 12 D
5 54 D
5 84 D
5 68 D
5 5 D
5 -53 D
5 -81 D
6 -64 D
5 -44 D
5 -45 D
5 -66 D
5 -86 D
5 -75 D
5 -39 D
6 -11 D
5 -2 D
5 -6 D
5 -7 D
5 0 D
5 25 D
5 58 D
6 76 D
5 62 D
5 30 D
5 11 D
5 15 D
5 18 D
5 7 D
6 -16 D
5 -41 D
5 -45 D
5 -23 D
5 9 D
5 29 D
5 21 D
6 -2 D
5 -20 D
5 -17 D
5 0 D
5 17 D
5 27 D
5 33 D
6 31 D
5 27 D
5 20 D
5 10 D
5 -6 D
5 -20 D
5 -18 D
6 -4 D
5 10 D
5 10 D
5 -2 D
5 -9 D
5 -6 D
5 -7 D
6 -18 D
5 -39 D
5 -46 D
5 -28 D
5 15 D
5 46 D
5 52 D
6 25 D
5 -11 D
5 -33 D
5 -38 D
5 -38 D
5 -36 D
5 -25 D
6 -16 D
5 -5 D
5 3 D
5 16 D
5 28 D
5 37 D
5 35 D
6 21 D
5 12 D
5 20 D
5 35 D
5 39 D
5 12 D
5 -24 D
6 -43 D
5 -38 D
5 -26 D
5 -16 D
5 -14 D
5 -12 D
5 -8 D
6 -9 D
5 -9 D
5 -10 D
5 -7 D
5 -6 D
5 3 D
5 19 D
6 35 D
5 39 D
5 30 D
5 19 D
5 10 D
5 8 D
5 2 D
6 -6 D
5 -11 D
5 -8 D
5 2 D
5 7 D
5 -1 D
5 -19 D
6 -39 D
5 -42 D
5 -31 D
5 -9 D
5 17 D
5 28 D
5 32 D
6 23 D
5 15 D
5 4 D
5 -6 D
5 -10 D
5 -9 D
5 -3 D
6 0 D
5 -1 D
5 -5 D
5 -7 D
5 1 D
5 18 D
5 28 D
6 22 D
5 0 D
5 -20 D
5 -26 D
5 -16 D
5 -3 D
5 2 D
6 -7 D
5 -23 D
5 -32 D
5 -27 D
5 -16 D
5 -6 D
5 -4 D
6 1 D
5 15 D
5 35 D
5 45 D
5 35 D
5 19 D
5 6 D
6 5 D
5 4 D
5 0 D
5 -8 D
5 -13 D
5 -15 D
5 -12 D
6 -4 D
5 4 D
5 11 D
5 6 D
5 -2 D
5 -14 D
5 -19 D
6 -14 D
5 -4 D
5 2 D
5 4 D
5 -1 D
5 -6 D
5 -11 D
6 -16 D
5 -10 D
5 3 D
5 17 D
5 27 D
5 24 D
5 17 D
6 6 D
5 4 D
5 9 D
5 11 D
5 8 D
5 0 D
5 -8 D
6 -5 D
5 5 D
5 12 D
5 10 D
5 -3 D
5 -19 D
5 -29 D
6 -30 D
5 -28 D
5 -19 D
5 -3 D
5 12 D
5 23 D
5 22 D
6 13 D
5 -1 D
5 -9 D
5 -6 D
5 3 D
5 12 D
5 13 D
6 1 D
5 -10 D
5 -12 D
5 -2 D
5 7 D
5 1 D
5 -13 D
6 -27 D
5 -22 D
5 -5 D
5 14 D
5 17 D
5 8 D
5 -3 D
6 0 D
5 17 D
5 33 D
5 39 D
5 24 D
5 5 D
5 -9 D
6 -7 D
5 -2 D
5 0 D
5 -7 D
5 -17 D
5 -21 D
5 -16 D
6 -10 D
5 -8 D
5 -11 D
5 -12 D
5 -4 D
5 10 D
5 16 D
6 12 D
5 8 D
5 4 D
5 2 D
5 0 D
5 -3 D
5 -10 D
6 -11 D
5 -11 D
5 -7 D
5 0 D
5 4 D
5 4 D
5 2 D
6 6 D
5 8 D
5 8 D
5 1 D
5 -6 D
5 -7 D
5 1 D
6 6 D
5 6 D
5 -3 D
5 -5 D
5 -1 D
5 5 D
5 6 D
6 1 D
5 -5 D
5 -6 D
5 -2 D
5 5 D
5 10 D
5 9 D
6 5 D
5 -1 D
5 -3 D
5 -4 D
5 -4 D
5 -4 D
5 -5 D
6 0 D
5 6 D
5 8 D
5 8 D
5 -1 D
5 -11 D
5 -17 D
6 -15 D
5 -10 D
5 -6 D
5 -2 D
5 -1 D
5 -1 D
5 -3 D
6 -3 D
5 0 D
5 5 D
5 7 D
5 3 D
5 1 D
5 -1 D
6 1 D
5 3 D
5 4 D
5 2 D
5 2 D
5 1 D
5 2 D
6 4 D
5 9 D
5 17 D
5 20 D
5 16 D
5 2 D
5 -10 D
6 -18 D
5 -12 D
5 2 D
5 13 D
5 10 D
5 2 D
5 -8 D
6 -9 D
5 -6 D
5 -2 D
5 -1 D
5 0 D
5 4 D
5 6 D
6 2 D
5 -5 D
5 -9 D
5 -11 D
5 -8 D
5 -2 D
5 -2 D
6 -5 D
5 -7 D
5 -4 D
5 5 D
5 10 D
5 9 D
5 4 D
6 -3 D
5 -3 D
5 -1 D
5 2 D
5 1 D
5 -4 D
5 -5 D
6 -6 D
5 -3 D
5 3 D
5 5 D
5 4 D
5 3 D
5 2 D
6 1 D
5 4 D
5 7 D
5 6 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1884
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S2) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 1200 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -P -B2g1/1s -K -O -Y1i
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1885
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
3322 524 M
5 0 D
6 -1 D
5 0 D
5 1 D
5 1 D
5 1 D
5 1 D
5 0 D
6 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
5 1 D
5 0 D
6 1 D
5 0 D
5 0 D
5 0 D
5 1 D
5 0 D
5 -1 D
6 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 0 D
5 0 D
6 1 D
5 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
5 0 D
6 0 D
5 -1 D
5 -1 D
5 -1 D
5 -2 D
5 0 D
5 0 D
6 1 D
5 0 D
5 -1 D
5 -1 D
5 0 D
5 0 D
5 0 D
6 0 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 0 D
6 -1 D
5 1 D
5 -2 D
5 0 D
5 -1 D
5 2 D
5 0 D
6 1 D
5 -1 D
5 0 D
5 0 D
5 0 D
5 -1 D
5 -1 D
6 0 D
5 1 D
5 1 D
5 0 D
5 -1 D
5 -1 D
5 1 D
6 0 D
5 0 D
5 -1 D
5 -2 D
5 0 D
5 0 D
5 0 D
6 0 D
5 2 D
5 1 D
5 0 D
5 0 D
5 -1 D
5 0 D
6 0 D
5 2 D
5 0 D
5 0 D
5 0 D
5 1 D
5 1 D
6 -3 D
5 -9 D
5 -32 D
5 -96 D
5 -214 D
3 -167 D
3870 0 M
3 189 D
5 681 D
3 330 D
3892 1200 M
1 -75 D
5 -581 D
5 -231 D
6 131 D
5 171 D
5 19 D
5 -64 D
5 -41 D
5 -48 D
5 -103 D
6 -51 D
5 146 D
5 219 D
5 -76 D
5 -488 D
1 -128 D
3979 0 M
2 221 D
5 620 D
5 213 D
5 -196 D
5 -250 D
5 -34 D
5 148 D
6 144 D
5 -4 D
5 -208 D
5 -313 D
5 -174 D
5 146 D
5 365 D
6 253 D
5 -94 D
5 -347 D
5 -306 D
5 -76 D
5 108 D
5 127 D
6 41 D
5 14 D
5 91 D
5 141 D
5 71 D
5 -62 D
5 -152 D
6 -101 D
5 63 D
5 192 D
5 146 D
5 -60 D
5 -225 D
5 -157 D
6 118 D
5 325 D
5 235 D
5 -83 D
5 -291 D
5 -184 D
5 40 D
6 44 D
5 -187 D
5 -318 D
2 -44 D
4214 0 M
3 126 D
5 356 D
5 182 D
6 -97 D
5 -207 D
5 -150 D
5 -68 D
5 21 D
5 190 D
5 369 D
6 345 D
5 52 D
5 -273 D
5 -348 D
5 -156 D
5 100 D
5 246 D
6 226 D
5 60 D
5 -172 D
5 -319 D
5 -261 D
5 -49 D
5 183 D
6 331 D
5 375 D
3 138 D
4356 1200 M
0 -7 D
5 -536 D
5 -657 D
4380 0 M
2 170 D
5 480 D
5 225 D
5 -126 D
5 -326 D
5 -265 D
6 -58 D
5 124 D
5 183 D
5 107 D
5 -38 D
5 -127 D
5 -68 D
6 139 D
5 398 D
4 382 D
4473 1200 M
1 -134 D
5 -603 D
6 -432 D
1 -31 D
4491 0 M
4 113 D
5 197 D
5 54 D
5 -87 D
5 -143 D
6 -108 D
5 12 D
5 178 D
5 262 D
5 198 D
5 100 D
5 97 D
6 154 D
5 158 D
1 15 D
4570 1200 M
2 -27 D
5 -255 D
5 -350 D
5 -318 D
6 -213 D
1 -37 D
4625 0 M
4 229 D
5 300 D
5 253 D
5 247 D
4 171 D
4661 1200 M
4 -158 D
5 -234 D
5 -136 D
5 -81 D
5 -114 D
5 -190 D
5 -240 D
2 -47 D
4712 0 M
4 323 D
5 401 D
5 287 D
5 157 D
2 32 D
4756 1200 M
1 -69 D
5 -665 D
4 -466 D
4782 0 M
1 53 D
5 479 D
5 355 D
5 162 D
5 -40 D
6 -181 D
5 -229 D
5 -208 D
5 -179 D
5 -166 D
2 -46 D
4856 0 M
4 191 D
5 296 D
5 206 D
5 18 D
6 -105 D
5 -41 D
5 147 D
5 298 D
3 190 D
4926 1200 M
1 -100 D
5 -423 D
5 -332 D
5 -208 D
5 -109 D
2 -28 D
4985 0 M
4 199 D
5 266 D
5 233 D
5 266 D
4 236 D
5022 1200 M
3 -136 D
5 -378 D
5 -282 D
5 -75 D
5 86 D
5 106 D
5 -8 D
6 -136 D
5 -146 D
5 -23 D
5 156 D
5 258 D
5 213 D
5 63 D
6 -68 D
5 -110 D
5 -75 D
5 -50 D
5 -80 D
5 -121 D
5 -105 D
6 -35 D
5 31 D
5 36 D
5 9 D
5 17 D
5 87 D
5 161 D
6 165 D
5 76 D
5 -45 D
5 -108 D
5 -84 D
5 -16 D
5 36 D
6 38 D
5 4 D
5 -17 D
5 17 D
5 53 D
5 23 D
5 -78 D
6 -164 D
5 -160 D
5 -57 D
5 62 D
5 101 D
5 35 D
5 -71 D
6 -107 D
5 -53 D
5 35 D
5 73 D
5 44 D
5 4 D
5 7 D
6 67 D
5 142 D
5 179 D
5 138 D
5 34 D
5 -73 D
5 -139 D
6 -167 D
5 -157 D
5 -109 D
5 -37 D
5 29 D
5 77 D
5 104 D
6 98 D
5 54 D
5 1 D
5 -19 D
5 -5 D
5 12 D
5 2 D
6 -35 D
5 -64 D
5 -50 D
5 -3 D
5 37 D
5 26 D
5 -31 D
6 -70 D
5 -70 D
5 -38 D
5 -22 D
5 -12 D
5 15 D
5 68 D
6 116 D
5 117 D
5 71 D
5 1 D
5 -49 D
5 -67 D
5 -58 D
6 -30 D
5 -9 D
5 2 D
5 5 D
5 6 D
5 14 D
5 16 D
6 0 D
5 -29 D
5 -46 D
5 -34 D
5 -3 D
5 18 D
5 31 D
6 41 D
5 51 D
5 56 D
5 43 D
5 11 D
5 -29 D
5 -60 D
6 -76 D
5 -73 D
5 -50 D
5 -11 D
5 13 D
5 16 D
5 10 D
6 25 D
5 64 D
5 102 D
5 102 D
5 65 D
5 17 D
5 -5 D
6 -10 D
5 -26 D
5 -67 D
5 -105 D
5 -95 D
5 -35 D
5 31 D
6 41 D
5 -10 D
5 -74 D
5 -82 D
5 -25 D
5 50 D
5 81 D
6 49 D
5 -12 D
5 -50 D
5 -31 D
5 30 D
5 78 D
5 78 D
6 39 D
5 5 D
5 12 D
5 54 D
5 84 D
5 68 D
5 5 D
6 -53 D
5 -81 D
5 -64 D
5 -44 D
5 -45 D
5 -66 D
5 -86 D
6 -75 D
5 -39 D
5 -11 D
5 -2 D
5 -6 D
5 -7 D
5 0 D
6 25 D
5 58 D
5 76 D
5 62 D
5 30 D
5 11 D
5 15 D
6 18 D
5 7 D
5 -16 D
5 -41 D
5 -45 D
5 -23 D
5 9 D
6 29 D
5 21 D
5 -2 D
5 -20 D
5 -17 D
5 0 D
5 17 D
6 27 D
5 33 D
5 31 D
5 27 D
5 20 D
5 10 D
5 -6 D
6 -20 D
5 -18 D
5 -4 D
5 10 D
5 10 D
5 -2 D
5 -9 D
6 -6 D
5 -7 D
5 -18 D
5 -39 D
5 -46 D
5 -28 D
5 15 D
6 46 D
5 52 D
5 25 D
5 -11 D
5 -33 D
5 -38 D
5 -38 D
6 -36 D
5 -25 D
5 -16 D
5 -5 D
5 3 D
5 16 D
5 28 D
6 37 D
5 35 D
5 21 D
5 12 D
5 20 D
5 35 D
5 39 D
6 12 D
5 -24 D
5 -43 D
5 -38 D
5 -26 D
5 -16 D
5 -14 D
6 -12 D
5 -8 D
5 -9 D
5 -9 D
5 -10 D
5 -7 D
5 -6 D
6 3 D
5 19 D
5 35 D
5 39 D
5 30 D
5 19 D
5 10 D
6 8 D
5 2 D
5 -6 D
5 -11 D
5 -8 D
5 2 D
5 7 D
6 -1 D
5 -19 D
5 -39 D
5 -42 D
5 -31 D
5 -9 D
5 17 D
6 28 D
5 32 D
5 23 D
5 15 D
5 4 D
5 -6 D
5 -10 D
6 -9 D
5 -3 D
5 0 D
5 -1 D
5 -5 D
5 -7 D
5 1 D
6 18 D
5 28 D
5 22 D
5 0 D
5 -20 D
5 -26 D
5 -16 D
6 -3 D
5 2 D
5 -7 D
5 -23 D
5 -32 D
5 -27 D
5 -16 D
6 -6 D
5 -4 D
5 1 D
5 15 D
5 35 D
5 45 D
5 35 D
6 19 D
5 6 D
5 5 D
5 4 D
5 0 D
5 -8 D
5 -13 D
6 -15 D
5 -12 D
5 -4 D
5 4 D
5 11 D
5 6 D
5 -2 D
6 -14 D
5 -19 D
5 -14 D
5 -4 D
5 2 D
5 4 D
5 -1 D
6 -6 D
5 -11 D
5 -16 D
5 -10 D
5 3 D
5 17 D
5 27 D
6 24 D
5 17 D
5 6 D
5 4 D
5 9 D
5 11 D
5 8 D
6 0 D
5 -8 D
5 -5 D
5 5 D
5 12 D
5 10 D
5 -3 D
6 -19 D
5 -29 D
5 -30 D
5 -28 D
5 -19 D
5 -3 D
5 12 D
6 23 D
5 22 D
5 13 D
5 -1 D
5 -9 D
5 -6 D
5 3 D
6 12 D
5 13 D
5 1 D
5 -10 D
5 -12 D
5 -2 D
5 7 D
6 1 D
5 -13 D
5 -27 D
5 -22 D
5 -5 D
5 14 D
5 17 D
6 8 D
5 -3 D
5 0 D
5 17 D
5 33 D
5 39 D
5 24 D
6 5 D
5 -9 D
5 -7 D
5 -2 D
5 0 D
5 -7 D
5 -17 D
6 -21 D
5 -16 D
5 -10 D
5 -8 D
5 -11 D
5 -12 D
5 -4 D
6 10 D
5 16 D
5 12 D
5 8 D
5 4 D
5 2 D
5 0 D
6 -3 D
5 -10 D
5 -11 D
5 -11 D
5 -7 D
5 0 D
5 4 D
6 4 D
5 2 D
5 6 D
5 8 D
5 8 D
5 1 D
5 -6 D
6 -7 D
5 1 D
5 6 D
5 6 D
S
0 0 M
0 1200 D
S
514 0 M
0 1200 D
S
1029 0 M
0 1200 D
S
1543 0 M
0 1200 D
S
2057 0 M
0 1200 D
S
2571 0 M
0 1200 D
S
3086 0 M
0 1200 D
S
3600 0 M
0 1200 D
S
4114 0 M
0 1200 D
S
4629 0 M
0 1200 D
S
5143 0 M
0 1200 D
S
5657 0 M
0 1200 D
S
6171 0 M
0 1200 D
S
6686 0 M
0 1200 D
S
7200 0 M
0 1200 D
S
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX6i/1i -R6/20/0.5/1.5 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1885
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 1200 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entz) ($M) (-S3) (-K) (-O) (-Y$DY) (\>\>)
($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 6171 1200 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 6171 1200 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psxy -JX6i/1i -R6/20/0.5/1.5 -O
%%PROJ: xy 6.00000000 20.00000000 0.50000000 1.50000000 6.000 20.000 0.500 1.500 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1886
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
%%EndObject
%%PageTrailer
U
showpage

%%Trailer

end
%%EOF
