%!PS-Adobe-3.0
%%BoundingBox: 0 0 595 842
%%HiResBoundingBox: 0 0 595 842
%%Title: GMT v5.1.1 (r12968) [64-bit] Document from psxy
%%Creator: GMT5
%%For: savage13
%%DocumentNeededResources: font Helvetica
%%CreationDate: Thu Sep 25 13:58:05 2014
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%EndComments

%%BeginProlog
250 dict begin
/! {bind def} bind def
/# {load def}!
/A /setgray #
/B /setdash #
/C /setrgbcolor #
/D /rlineto #
/E {dup stringwidth pop}!
/F /fill #
/G /rmoveto #
/H /sethsbcolor #
/I /setpattern #
/K /setcmykcolor #
/L /lineto #
/M /moveto #
/N /newpath #
/P /closepath #
/R /rotate #
/S /stroke #
/T /translate #
/U /grestore #
/V /gsave #
/W /setlinewidth #
/Y {findfont exch scalefont setfont}!
/Z /show #
/FP {true charpath flattenpath}!
/MU {matrix setmatrix}!
/MS {/SMat matrix currentmatrix def}!
/MR {SMat setmatrix}!
/edef {exch def}!
/FS {/fc edef /fs {V fc F U} def}!
/FQ {/fs {} def}!
/O0 {/os {N} def}!
/O1 {/os {P S} def}!
/FO {fs os}!
/Sa {M MS dup 0 exch G 0.726542528 mul -72 R dup 0 D 4 {72 R dup 0 D -144 R dup 0 D} repeat pop MR FO}!
/Sb {M dup 0 D exch 0 exch D neg 0 D FO}!
/SB {MS T /BoxR edef /BoxW edef /BoxH edef BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Sc {N 3 -1 roll 0 360 arc FO}!
/Sd {M 4 {dup} repeat 0 G neg dup dup D exch D D FO}!
/Se {N MS T R scale 0 0 1 0 360 arc MR FO}!
/Sg {M MS 22.5 R dup 0 exch G -22.5 R 0.765366865 mul dup 0 D 6 {-45 R dup 0 D} repeat pop MR FO}!
/Sh {M MS dup 0 G -120 R dup 0 D 4 {-60 R dup 0 D} repeat pop MR FO}!
/Si {M MS dup neg 0 exch G 60 R 1.732050808 mul dup 0 D 120 R 0 D MR FO}!
/Sj {M MS R dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D MR FO}!
/Sn {M MS dup 0 exch G -36 R 1.175570505 mul dup 0 D 3 {-72 R dup 0 D} repeat pop MR FO}!
/Sp {N 3 -1 roll 0 360 arc fs N}!
/SP {M {D} repeat FO}!
/Sr {M dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D FO}!
/SR {MS T /BoxR edef /BoxW edef /BoxH edef BoxR BoxW -2 div BoxH -2 div T BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Ss {M 1.414213562 mul dup dup dup -2 div dup G 0 D 0 exch D neg 0 D FO}!
/St {M MS dup 0 exch G -60 R 1.732050808 mul dup 0 D -120 R 0 D MR FO}!
/SV {0 exch M 0 D D D D D 0 D FO}!
/Sv {0 0 M D D 0 D D D D D 0 D D FO}!
/Sw {2 copy M 5 2 roll arc FO}!
/Sx {M 1.414213562 mul 5 {dup} repeat -2 div dup G D neg 0 G neg D S}!
/Sy {M dup 0 exch G dup -2 mul dup 0 exch D S}!
/S+ {M dup 0 G dup -2 mul dup 0 D exch dup G 0 exch D S}!
/S- {M dup 0 G dup -2 mul dup 0 D S}!
/sw {stringwidth pop}!
/sh {V MU 0 0 M FP pathbbox N 4 1 roll pop pop pop U}!
/sd {V MU 0 0 M FP pathbbox N pop pop exch pop U}!
/sH {V MU 0 0 M FP pathbbox N exch pop exch sub exch pop U}!
/sb {E exch sh}!
/bl {}!
/bc {E -2 div 0 G}!
/br {E neg 0 G}!
/ml {dup 0 exch sh -2 div G}!
/mc {dup E -2 div exch sh -2 div G}!
/mr {dup E neg exch sh -2 div G}!
/tl {dup 0 exch sh neg G}!
/tc {dup E -2 div exch sh neg G}!
/tr {dup E neg exch sh neg G}!
/mx {2 copy lt {exch} if pop}!
/PSL_xorig 0 def /PSL_yorig 0 def
/TM {2 copy T PSL_yorig add /PSL_yorig edef PSL_xorig add /PSL_xorig edef}!
/PSL_reencode {findfont dup length dict begin
  {1 index /FID ne {def}{pop pop} ifelse} forall
  exch /Encoding edef currentdict end definefont pop
}!
/PSL_eps_begin {
  /PSL_eps_state save def
  /PSL_dict_count countdictstack def
  /PSL_op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth
  0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
}!
/PSL_eps_end {
  count PSL_op_count sub {pop} repeat
  countdictstack PSL_dict_count sub {end} repeat
  PSL_eps_state restore
}!
/PSL_transp {
  /.setopacityalpha where {pop .setblendmode .setopacityalpha}{
  /pdfmark where {pop [ /BM exch /CA exch dup /ca exch /SetTransparency pdfmark}
  {pop pop} ifelse} ifelse
}!
/ISOLatin1+_Encoding [
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/bullet		/ellipsis	/trademark	/emdash		/endash		/fi		/zcaron
/space		/exclam		/quotedbl	/numbersign	/dollar		/percent	/ampersand	/quoteright
/parenleft	/parenright	/asterisk	/plus		/comma		/minus		/period		/slash
/zero		/one		/two		/three		/four		/five		/six		/seven
/eight		/nine		/colon		/semicolon	/less		/equal		/greater	/question
/at		/A		/B		/C		/D		/E		/F		/G
/H		/I		/J		/K		/L		/M		/N		/O
/P		/Q		/R		/S		/T		/U		/V		/W
/X		/Y		/Z		/bracketleft	/backslash	/bracketright	/asciicircum	/underscore
/quoteleft	/a		/b		/c 		/d		/e		/f		/g
/h		/i		/j		/k		/l		/m		/n		/o
/p		/q		/r		/s		/t		/u		/v		/w
/x		/y		/z		/braceleft	/bar		/braceright	/asciitilde	/scaron
/OE		/dagger		/daggerdbl	/Lslash		/fraction	/guilsinglleft	/Scaron		/guilsinglright
/oe		/Ydieresis	/Zcaron		/lslash		/perthousand	/quotedblbase	/quotedblleft	/quotedblright
/dotlessi	/grave		/acute		/circumflex	/tilde		/macron		/breve		/dotaccent
/dieresis	/quotesinglbase	/ring		/cedilla	/quotesingle	/hungarumlaut	/ogonek		/caron
/space		/exclamdown	/cent		/sterling	/currency	/yen		/brokenbar	/section
/dieresis	/copyright	/ordfeminine	/guillemotleft	/logicalnot	/hyphen		/registered	/macron
/degree		/plusminus	/twosuperior	/threesuperior	/acute		/mu		/paragraph	/periodcentered
/cedilla	/onesuperior	/ordmasculine	/guillemotright	/onequarter	/onehalf	/threequarters	/questiondown
/Agrave		/Aacute		/Acircumflex	/Atilde		/Adieresis	/Aring		/AE		/Ccedilla
/Egrave		/Eacute		/Ecircumflex	/Edieresis	/Igrave		/Iacute		/Icircumflex	/Idieresis
/Eth		/Ntilde		/Ograve		/Oacute		/Ocircumflex	/Otilde		/Odieresis	/multiply
/Oslash		/Ugrave		/Uacute		/Ucircumflex	/Udieresis	/Yacute		/Thorn		/germandbls
/agrave		/aacute		/acircumflex	/atilde		/adieresis	/aring		/ae		/ccedilla
/egrave		/eacute		/ecircumflex	/edieresis	/igrave		/iacute		/icircumflex	/idieresis
/eth		/ntilde		/ograve		/oacute		/ocircumflex	/otilde		/odieresis	/divide
/oslash		/ugrave		/uacute		/ucircumflex	/udieresis	/yacute		/thorn		/ydieresis
] def
/PSL_font_encode 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 array astore def
/F0 {/Helvetica Y}!
/F1 {/Helvetica-Bold Y}!
/F2 {/Helvetica-Oblique Y}!
/F3 {/Helvetica-BoldOblique Y}!
/F4 {/Times-Roman Y}!
/F5 {/Times-Bold Y}!
/F6 {/Times-Italic Y}!
/F7 {/Times-BoldItalic Y}!
/F8 {/Courier Y}!
/F9 {/Courier-Bold Y}!
/F10 {/Courier-Oblique Y}!
/F11 {/Courier-BoldOblique Y}!
/F12 {/Symbol Y}!
/F13 {/AvantGarde-Book Y}!
/F14 {/AvantGarde-BookOblique Y}!
/F15 {/AvantGarde-Demi Y}!
/F16 {/AvantGarde-DemiOblique Y}!
/F17 {/Bookman-Demi Y}!
/F18 {/Bookman-DemiItalic Y}!
/F19 {/Bookman-Light Y}!
/F20 {/Bookman-LightItalic Y}!
/F21 {/Helvetica-Narrow Y}!
/F22 {/Helvetica-Narrow-Bold Y}!
/F23 {/Helvetica-Narrow-Oblique Y}!
/F24 {/Helvetica-Narrow-BoldOblique Y}!
/F25 {/NewCenturySchlbk-Roman Y}!
/F26 {/NewCenturySchlbk-Italic Y}!
/F27 {/NewCenturySchlbk-Bold Y}!
/F28 {/NewCenturySchlbk-BoldItalic Y}!
/F29 {/Palatino-Roman Y}!
/F30 {/Palatino-Italic Y}!
/F31 {/Palatino-Bold Y}!
/F32 {/Palatino-BoldItalic Y}!
/F33 {/ZapfChancery-MediumItalic Y}!
/F34 {/ZapfDingbats Y}!
/F35 {/Ryumin-Light-EUC-H Y}!
/F36 {/Ryumin-Light-EUC-V Y}!
/F37 {/GothicBBB-Medium-EUC-H Y}!
/F38 {/GothicBBB-Medium-EUC-V Y}!
/PSL_pathtextdict 26 dict def
/PSL_pathtext
  {PSL_pathtextdict begin
    /textheight exch def
    /just exch def
    /offset exch def
    /str exch def
    /pathdist 0 def
    /setdist offset def
    /charcount 0 def
    /justy just 4 idiv textheight mul 2 div neg def
    V flattenpath
	{movetoproc} {linetoproc}
	{curvetoproc} {closepathproc}
	pathforall
    U N
    end
  } def
PSL_pathtextdict begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
  } def
/linetoproc
  { /oldx newx def /oldy newy def
    /newy exch def /newx exch def
    /dx newx oldx sub def
    /dy newy oldy sub def
    /dist dx dup mul dy dup mul add sqrt def
    dist 0 ne
    { /dsx dx dist div ovr mul def
      /dsy dy dist div ovr mul def
      oldx dsx add oldy dsy add transform
      /cpy exch def /cpx exch def
      /pathdist pathdist dist add def
      {setdist pathdist le
	  {charcount str length lt
	      {setchar} {exit} ifelse}
	  { /ovr setdist pathdist sub def
	    exit}
	  ifelse
      } loop
    } if
  } def
/curvetoproc
  { (ERROR: No curveto's after flattenpath!)
    print
  } def
/closepathproc
  {firstx firsty linetoproc
    firstx firsty movetoproc
  } def
/setchar
  { /char str charcount 1 getinterval def
    /charcount charcount 1 add def
    /charwidth char stringwidth pop def
    V cpx cpy itransform T
      dy dx atan R
      0 justy M
      char show
      0 justy neg G
      currentpoint transform
      /cpy exch def /cpx exch def
    U /setdist setdist charwidth add def
  } def
end
/PSL_curved_text_labels
{ /bits exch def
  /PSL_clippath bits 1 and 1 eq def
  /PSL_placetext bits 2 and 0 eq def
  /PSL_strokeline bits 4 and 4 eq def
  /PSL_firstcall bits 32 and 32 eq def
  /PSL_lastcall bits 64 and 64 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_n1 PSL_n 1 sub def
  /PSL_m1 PSL_m 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_CT_calcstringwidth
  PSL_CT_calclinedist
  PSL_CT_addcutpoints
  PSL_clippath PSL_firstcall and
  {clipsave N clippath} if
  PSL_setlinepen
  /PSL_nn1 PSL_nn 1 sub def
  /n 0 def
  /k 0 def
  /j 0 def
  /PSL_seg 0 def
  /PSL_xp PSL_nn array def
  /PSL_yp PSL_nn array def
  PSL_xp 0 PSL_xx 0 get put
  PSL_yp 0 PSL_yy 0 get put
  1 1 PSL_nn1
  { /i exch def
    /node_type PSL_kind i get def
    /j j 1 add def
    PSL_xp j PSL_xx i get put
    PSL_yp j PSL_yy i get put
    node_type 1 eq
    {n 0 eq
      {PSL_CT_drawline}
      {	PSL_CT_reversepath
	PSL_CT_textline} ifelse
      /j 0 def
      PSL_xp j PSL_xx i get put
      PSL_yp j PSL_yy i get put
    } if
  } for
  n 0 eq {PSL_CT_drawline} if
  PSL_lastcall
  {PSL_clippath
    {PSL_clip} if N
  } if
} def
/PSL_CT_textline
{PSL_placetext
  {PSL_clippath
    {PSL_CT_clippath} {PSL_CT_placelabel} ifelse
  } if
  /n 0 def /k k 1 add def PSL_setlinepen
} def
/PSL_CT_calcstringwidth
{ /PSL_width PSL_m array def
  0 1 PSL_m1
  { /i exch def
    PSL_width i PSL_str i get stringwidth pop put
  } for
} def
/PSL_CT_calclinedist
{ /PSL_newx PSL_x 0 get def
  /PSL_newy PSL_y 0 get def
  /dist 0.0 def
  /PSL_dist PSL_n array def
  PSL_dist 0 0.0 put
  1 1 PSL_n1
  { /i exch def
    /PSL_oldx PSL_newx def
    /PSL_oldy PSL_newy def
    /PSL_newx PSL_x i get def
    /PSL_newy PSL_y i get def
    /dx PSL_newx PSL_oldx sub def
    /dy PSL_newy PSL_oldy sub def
    /dist dist dx dx mul dy dy mul add sqrt add def
    PSL_dist i dist put
  } for
} def
/PSL_CT_addcutpoints
{ /k 0 def
  /PSL_nc PSL_m 2 mul 1 add def
  /PSL_cuts PSL_nc array def
  /PSL_nc1 PSL_nc 1 sub def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node i get get def
    /halfwidth PSL_width i get 2 div PSL_gap_x add def
    PSL_cuts k dist halfwidth sub put
    /k k 1 add def
    PSL_cuts k dist halfwidth add put
    /k k 1 add def
  } for
  PSL_cuts k 100000.0 put
  /PSL_nn PSL_n PSL_m 2 mul add def
  /PSL_xx PSL_nn array def
  /PSL_yy PSL_nn array def
  /PSL_kind PSL_nn array def
  /j 0 def
  /k 0 def
  /dist 0.0 def
  0 1 PSL_n1
  { /i exch def
    /last_dist dist def
    /dist PSL_dist i get def
    k 1 PSL_nc1
    { /kk exch def
      /this_cut PSL_cuts kk get def
      dist this_cut gt
      { /ds dist last_dist sub def
	/f ds 0.0 eq {0.0} {dist this_cut sub ds div} ifelse def
	/i1 i 0 eq {0} {i 1 sub} ifelse def
	PSL_xx j PSL_x i get dup PSL_x i1 get sub f mul sub put
	PSL_yy j PSL_y i get dup PSL_y i1 get sub f mul sub put
	PSL_kind j 1 put
	/j j 1 add def
	/k k 1 add def
      } if
    } for
    dist PSL_cuts k get le
    {PSL_xx j PSL_x i get put PSL_yy j PSL_y i get put
      PSL_kind j 0 put
      /j j 1 add def
    } if
  } for
} def
/PSL_CT_reversepath
{PSL_xp j get PSL_xp 0 get lt
  {0 1 j 2 idiv
    { /left exch def
      /right j left sub def
      /tmp PSL_xp left get def
      PSL_xp left PSL_xp right get put
      PSL_xp right tmp put
      /tmp PSL_yp left get def
      PSL_yp left PSL_yp right get put
      PSL_yp right tmp put
    } for
  } if
} def
/PSL_CT_placelabel
{
  PSL_usebox
  {PSL_CT_clippath
    PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  } if
  PSL_settxtrgb PSL_CT_placeline PSL_str k get PSL_gap_x PSL_just PSL_height PSL_pathtext
} def
/PSL_CT_clippath
{
  /H PSL_height 2 div PSL_gap_y add def
  /xoff j 1 add array def
  /yoff j 1 add array def
  /angle 0 def
  0 1 j {
    /ii exch def
    /x PSL_xp ii get def
    /y PSL_yp ii get def
    ii 0 eq {
      /x1 PSL_xp 1 get def
      /y1 PSL_yp 1 get def
      /dx x1 x sub def
      /dy y1 y sub def
    }
    { /i1 ii 1 sub def
      /x1 PSL_xp i1 get def
      /y1 PSL_yp i1 get def
      /dx x x1 sub def
      /dy y y1 sub def
    } ifelse
    dx 0.0 ne dy 0.0 ne and
    { /angle dy dx atan 90 add def} if
    /sina angle sin def
    /cosa angle cos def
    xoff ii H cosa mul put
    yoff ii H sina mul put
  } for
  PSL_xp 0 get xoff 0 get add PSL_yp 0 get yoff 0 get add M
  1 1 j {
    /ii exch def
    PSL_xp ii get xoff ii get add PSL_yp ii get yoff ii get add L
  } for
  j -1 0 {
    /ii exch def
    PSL_xp ii get xoff ii get sub PSL_yp ii get yoff ii get sub L
  } for P
} def
/PSL_CT_drawline
{
  /str 20 string def
  PSL_strokeline
  {PSL_CT_placeline PSL_setlinepen S} if
  /PSL_seg PSL_seg 1 add def
  /n 1 def
} def
/PSL_CT_placeline
{PSL_xp 0 get PSL_yp 0 get M
  1 1 j { /ii exch def PSL_xp ii get PSL_yp ii get L} for
} def
/PSL_straight_text_labels
{
  /bits exch def
  /PSL_clippath bits 1 and 0 eq def
  /PSL_rounded bits 16 and 16 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_m1 PSL_m 1 sub def
  /PSL_justx PSL_just 4 mod 1 sub 2 div neg def
  /PSL_justy PSL_just 4 idiv PSL_height mul 2 div neg def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_clippath
  {PSL_ST_clippath}
  {PSL_usebox {PSL_ST_clippath} if
    PSL_ST_placelabel
  } ifelse
} def
/PSL_ST_placelabel
{PSL_settxtrgb
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    V PSL_txt_x k get PSL_txt_y k get T
    PSL_angle k get R
    /BoxW PSL_str k get stringwidth pop def
    BoxW PSL_justx mul PSL_justy M
    PSL_str k get show
    U
  } for
} def
/PSL_ST_clippath
{N
  PSL_usebox not {clipsave clippath} if
  PSL_rounded {PSL_ST_clippath_round} {PSL_ST_clippath_rect} ifelse
  PSL_usebox
  {PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  }
  {PSL_clip
  } ifelse
  N
} def
/PSL_ST_clippath_rect
{
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /DelY BoxH BoxH 0 3 array astore def
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /MAT PSL_angle k get matrix R def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 0 BoxW PSL_justx mul add def
    /y0 0 PSL_justy add PSL_gap_y sub def
    /DelX 0 BoxW BoxW 3 array astore def
    x0 y0 MAT transform
    /dy exch def /dx exch def
    xp dx add yp dy add M
    0 1 2
    {
      /ii exch def
      x0 DelX ii get add y0 DelY ii get add MAT transform
      /dy exch def /dx exch def
      xp dx add yp dy add L
    } for P
  } for
} def
/PSL_ST_clippath_round
{
  /PSL_justy2 PSL_just 4 idiv 2 div neg def
  /BoxR PSL_gap_x PSL_gap_y lt {PSL_gap_x} {PSL_gap_y} ifelse def
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /y0 PSL_height PSL_gap_y 2 mul add PSL_justy2 mul def
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 BoxW PSL_justx mul def
    xp yp T PSL_angle k get R x0 y0 T
    BoxR 0 M
    BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct P
    x0 neg y0 neg T PSL_angle k get neg R xp neg yp neg T
  } for
} def
/PSL_nclip 0 def
/PSL_clip {clip /PSL_nclip PSL_nclip 1 add def} def
/PSL_eoclip {eoclip /PSL_nclip PSL_nclip 1 add def} def
/PSL_cliprestore {cliprestore /PSL_nclip PSL_nclip 1 sub def} def
%%EndProlog

%%BeginSetup
/PSLevel /languagelevel where {pop languagelevel} {1} ifelse def
PSLevel 1 gt { << /PageSize [595 842] /ImagingBBox null >> setpagedevice } if
%%EndSetup

%%Page: 1 1

%%BeginPageSetup
V 0.06 0.06 scale
%%EndPageSetup

/PSL_page_xsize 9917 def
/PSL_page_ysize 14033 def
0 A
FQ
O0
1200 1200 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 762 M
12 1 D
10 1 D
4 -1 D
16 2 D
10 -2 D
16 2 D
20 -3 D
30 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -7 D
4 -63 D
4 -245 D
2 -33 D
6 826 D
2 52 D
6 -635 D
4 151 D
2 10 D
6 -77 D
4 -77 D
4 183 D
2 -38 D
4 -488 D
2 11 D
4 589 D
2 107 D
4 -223 D
2 -17 D
4 146 D
2 -2 D
6 -348 D
6 383 D
2 -48 D
4 -326 D
2 -38 D
4 117 D
2 21 D
2 7 D
6 152 D
6 -158 D
2 31 D
4 169 D
2 -29 D
4 -191 D
6 338 D
2 -41 D
4 -238 D
4 43 D
6 -317 D
6 374 D
8 -261 D
2 10 D
6 453 D
2 25 D
6 -388 D
6 286 D
2 30 D
6 -376 D
2 -24 D
8 567 D
2 -58 D
6 -784 D
2 51 D
6 575 D
6 -359 D
2 -29 D
6 207 D
2 -19 D
4 -98 D
4 269 D
4 412 D
2 -51 D
6 -754 D
2 -45 D
4 184 D
2 27 D
6 -169 D
2 6 D
8 369 D
8 241 D
4 -170 D
6 -440 D
6 -203 D
2 -19 D
4 161 D
10 676 D
2 57 D
8 -355 D
6 -193 D
4 -225 D
2 -30 D
10 696 D
6 227 D
2 -40 D
8 -1016 D
2 61 D
6 628 D
2 81 D
2 -21 D
12 -553 D
4 -69 D
2 20 D
8 445 D
2 9 D
4 -73 D
10 608 D
2 -11 D
10 -812 D
6 -157 D
4 -198 D
2 -22 D
16 1012 D
2 -28 D
6 -473 D
2 -38 D
4 97 D
2 -5 D
4 -140 D
2 -12 D
6 313 D
2 32 D
12 -252 D
2 -53 D
2 -17 D
4 33 D
4 14 D
8 244 D
6 -118 D
2 -8 D
4 36 D
2 2 D
2 -8 D
2 8 D
4 39 D
6 -202 D
2 -28 D
6 99 D
6 -115 D
6 76 D
4 5 D
8 263 D
2 17 D
10 -323 D
2 -18 D
4 53 D
6 128 D
2 0 D
2 -9 D
2 -3 D
2 6 D
2 1 D
6 -74 D
2 -2 D
4 32 D
8 -105 D
4 -17 D
2 8 D
8 186 D
2 1 D
8 -103 D
2 -4 D
4 3 D
4 10 D
2 9 D
2 0 D
6 -55 D
2 -1 D
6 44 D
6 75 D
2 6 D
6 -83 D
4 -61 D
2 -5 D
6 19 D
4 44 D
6 135 D
2 8 D
4 -7 D
4 -47 D
4 -100 D
2 -17 D
4 36 D
2 -5 D
4 -78 D
2 -13 D
6 90 D
2 -6 D
4 -40 D
4 54 D
4 58 D
4 9 D
6 103 D
2 3 D
14 -220 D
4 -57 D
2 -6 D
2 -1 D
4 -6 D
2 0 D
4 42 D
6 84 D
6 22 D
2 3 D
4 -28 D
4 -35 D
4 19 D
2 11 D
2 -1 D
4 -19 D
2 0 D
12 78 D
2 5 D
2 -3 D
4 -19 D
2 -2 D
4 10 D
2 -1 D
6 -11 D
8 -66 D
4 31 D
4 39 D
4 -22 D
8 -69 D
2 -8 D
2 -2 D
2 1 D
10 69 D
4 16 D
4 36 D
2 6 D
8 -65 D
8 -25 D
10 -21 D
2 2 D
10 71 D
4 9 D
2 1 D
6 -12 D
2 1 D
2 3 D
2 0 D
8 -66 D
2 -5 D
10 58 D
2 2 D
8 -14 D
4 0 D
4 -6 D
2 0 D
6 34 D
2 0 D
6 -31 D
2 -1 D
2 1 D
2 -4 D
8 -49 D
4 -5 D
2 1 D
4 24 D
6 50 D
6 8 D
2 0 D
8 -24 D
2 -2 D
6 10 D
2 -1 D
6 -24 D
2 -2 D
4 3 D
2 0 D
8 -22 D
2 2 D
8 43 D
6 9 D
4 10 D
2 0 D
4 -7 D
6 14 D
2 -2 D
10 -63 D
2 -1 D
8 35 D
2 0 D
4 -8 D
2 2 D
4 12 D
2 1 D
4 -11 D
2 -1 D
2 3 D
2 1 D
6 -32 D
2 -2 D
6 19 D
4 -1 D
8 56 D
2 3 D
4 -8 D
4 -1 D
2 -3 D
8 -32 D
6 -16 D
2 -2 D
8 23 D
4 3 D
4 -1 D
8 -20 D
2 0 D
6 5 D
6 11 D
2 1 D
4 -7 D
2 1 D
4 6 D
6 -5 D
4 6 D
2 0 D
4 -5 D
2 -1 D
4 7 D
4 7 D
2 0 D
10 -10 D
2 0 D
6 11 D
2 -1 D
8 -27 D
2 -3 D
8 -3 D
2 -2 D
2 0 D
6 8 D
6 0 D
6 5 D
6 2 D
4 7 D
6 27 D
2 1 D
6 -20 D
2 1 D
4 11 D
2 1 D
6 -11 D
6 -2 D
4 5 D
2 1 D
4 -7 D
4 -9 D
4 -2 D
6 -9 D
8 15 D
6 -4 D
4 2 D
8 -10 D
6 7 D
8 5 D
8 10 D
4 3 D
6 -11 D
4 -7 D
4 -3 D
2 -3 D
4 1 D
4 6 D
4 1 D
6 -3 D
8 -18 D
8 -6 D
4 -6 D
4 1 D
8 12 D
8 22 D
2 0 D
4 -4 D
2 0 D
8 13 D
4 1 D
4 3 D
8 -13 D
4 1 D
6 8 D
2 1 D
6 -4 D
8 -25 D
2 1 D
8 25 D
2 3 D
6 -1 D
8 -5 D
4 -3 D
8 15 D
2 0 D
8 -9 D
6 -2 D
2 1 D
4 5 D
2 1 D
10 -16 D
6 1 D
6 -5 D
8 12 D
4 -1 D
8 -7 D
6 -2 D
6 2 D
6 -7 D
4 1 D
10 25 D
4 1 D
8 -9 D
2 0 D
S
292 1562 M
12 1 D
10 1 D
4 -1 D
16 2 D
10 -2 D
16 2 D
20 -3 D
30 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -7 D
4 -63 D
4 -245 D
2 -33 D
6 826 D
2 52 D
6 -635 D
4 151 D
2 10 D
6 -77 D
4 -77 D
4 183 D
2 -38 D
4 -488 D
2 11 D
4 589 D
2 107 D
4 -223 D
2 -17 D
4 146 D
2 -2 D
6 -348 D
6 383 D
2 -48 D
4 -326 D
2 -38 D
4 117 D
2 21 D
2 7 D
6 152 D
6 -158 D
2 31 D
4 169 D
2 -29 D
4 -191 D
6 338 D
2 -41 D
4 -238 D
4 43 D
6 -317 D
6 374 D
8 -261 D
2 10 D
6 453 D
2 25 D
6 -388 D
6 286 D
2 30 D
6 -376 D
2 -24 D
8 567 D
2 -58 D
6 -784 D
2 51 D
6 575 D
6 -359 D
2 -29 D
6 207 D
2 -19 D
4 -98 D
4 269 D
4 412 D
2 -51 D
6 -754 D
2 -45 D
4 184 D
2 27 D
6 -169 D
2 6 D
8 369 D
8 241 D
4 -170 D
6 -440 D
6 -203 D
2 -19 D
4 161 D
10 676 D
2 57 D
8 -355 D
6 -193 D
4 -225 D
2 -30 D
10 696 D
6 227 D
2 -40 D
8 -1016 D
2 61 D
6 628 D
2 81 D
2 -21 D
12 -553 D
4 -69 D
2 20 D
8 445 D
2 9 D
4 -73 D
10 608 D
2 -11 D
10 -812 D
6 -157 D
4 -198 D
2 -22 D
16 1012 D
2 -28 D
6 -473 D
2 -38 D
4 97 D
2 -5 D
4 -140 D
2 -12 D
6 313 D
2 32 D
12 -252 D
2 -53 D
2 -17 D
4 33 D
4 14 D
8 244 D
6 -118 D
2 -8 D
4 36 D
2 2 D
2 -8 D
2 8 D
4 39 D
6 -202 D
2 -28 D
6 99 D
6 -115 D
6 76 D
4 5 D
8 263 D
2 17 D
10 -323 D
2 -18 D
4 53 D
6 128 D
2 0 D
2 -9 D
2 -3 D
2 6 D
2 1 D
6 -74 D
2 -2 D
4 32 D
8 -105 D
4 -17 D
2 8 D
8 186 D
2 1 D
8 -103 D
2 -4 D
4 3 D
4 10 D
2 9 D
2 0 D
6 -55 D
2 -1 D
6 44 D
6 75 D
2 6 D
6 -83 D
4 -61 D
2 -5 D
6 19 D
4 44 D
6 135 D
2 8 D
4 -7 D
4 -47 D
4 -100 D
2 -17 D
4 36 D
2 -5 D
4 -78 D
2 -13 D
6 90 D
2 -6 D
4 -40 D
4 54 D
4 58 D
4 9 D
6 103 D
2 3 D
14 -220 D
4 -57 D
2 -6 D
2 -1 D
4 -6 D
2 0 D
4 42 D
6 84 D
6 22 D
2 3 D
4 -28 D
4 -35 D
4 19 D
2 11 D
2 -1 D
4 -19 D
2 0 D
12 78 D
2 5 D
2 -3 D
4 -19 D
2 -2 D
4 10 D
2 -1 D
6 -11 D
8 -66 D
4 31 D
4 39 D
4 -22 D
8 -69 D
2 -8 D
2 -2 D
2 1 D
10 69 D
4 16 D
4 36 D
2 6 D
8 -65 D
8 -25 D
10 -21 D
2 2 D
10 71 D
4 9 D
2 1 D
6 -12 D
2 1 D
2 3 D
2 0 D
8 -66 D
2 -5 D
10 58 D
2 2 D
8 -14 D
4 0 D
4 -6 D
2 0 D
6 34 D
2 0 D
6 -31 D
2 -1 D
2 1 D
2 -4 D
8 -49 D
4 -5 D
2 1 D
4 24 D
6 50 D
6 8 D
2 0 D
8 -24 D
2 -2 D
6 10 D
2 -1 D
6 -24 D
2 -2 D
4 3 D
2 0 D
8 -22 D
2 2 D
8 43 D
6 9 D
4 10 D
2 0 D
4 -7 D
6 14 D
2 -2 D
10 -63 D
2 -1 D
8 35 D
2 0 D
4 -8 D
2 2 D
4 12 D
2 1 D
4 -11 D
2 -1 D
2 3 D
2 1 D
6 -32 D
2 -2 D
6 19 D
4 -1 D
8 56 D
2 3 D
4 -8 D
4 -1 D
2 -3 D
8 -32 D
6 -16 D
2 -2 D
8 23 D
4 3 D
4 -1 D
8 -20 D
2 0 D
6 5 D
6 11 D
2 1 D
4 -7 D
2 1 D
4 6 D
6 -5 D
4 6 D
2 0 D
4 -5 D
2 -1 D
4 7 D
4 7 D
2 0 D
10 -10 D
2 0 D
6 11 D
2 -1 D
8 -27 D
2 -3 D
8 -3 D
2 -2 D
2 0 D
6 8 D
6 0 D
6 5 D
6 2 D
4 7 D
6 27 D
2 1 D
6 -20 D
2 1 D
4 11 D
2 1 D
6 -11 D
6 -2 D
4 5 D
2 1 D
4 -7 D
4 -9 D
4 -2 D
6 -9 D
8 15 D
6 -4 D
4 2 D
8 -10 D
6 7 D
8 5 D
8 10 D
4 3 D
6 -11 D
4 -7 D
4 -3 D
2 -3 D
4 1 D
4 6 D
4 1 D
6 -3 D
8 -18 D
8 -6 D
4 -6 D
4 1 D
8 12 D
8 22 D
2 0 D
4 -4 D
2 0 D
8 13 D
4 1 D
4 3 D
8 -13 D
4 1 D
6 8 D
2 1 D
6 -4 D
8 -25 D
2 1 D
8 25 D
2 3 D
6 -1 D
8 -5 D
4 -3 D
8 15 D
2 0 D
8 -9 D
6 -2 D
2 1 D
4 5 D
2 1 D
10 -16 D
6 1 D
6 -5 D
8 12 D
4 -1 D
8 -7 D
6 -2 D
6 2 D
6 -7 D
4 1 D
10 25 D
4 1 D
8 -9 D
2 0 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1829
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 10 def
/PSL_n1 9 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M1i) ($E) ($B) (-K) (\>) ($\{PS\})
10 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0
10 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167
10 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 0
10 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0
10 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0
10 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 10 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 10 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
3120 0 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X2.6i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1830
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 724 M
2 0 D
2 -1 D
2 0 D
2 1 D
2 1 D
2 1 D
2 1 D
2 0 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 1 D
2 0 D
2 1 D
2 0 D
2 0 D
2 0 D
2 1 D
2 0 D
2 -1 D
2 -1 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 0 D
2 0 D
2 1 D
2 0 D
2 1 D
2 1 D
2 0 D
2 -1 D
2 0 D
2 0 D
2 -1 D
2 -1 D
2 -1 D
2 -2 D
2 0 D
2 0 D
2 1 D
2 0 D
2 -1 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 -1 D
2 1 D
2 -2 D
2 0 D
2 -1 D
2 2 D
2 0 D
2 1 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 -1 D
2 0 D
2 1 D
2 1 D
2 0 D
2 -1 D
2 -1 D
2 1 D
2 0 D
2 0 D
2 -1 D
2 -2 D
2 0 D
2 0 D
2 0 D
2 0 D
2 2 D
2 1 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 0 D
2 2 D
2 0 D
2 0 D
2 0 D
2 1 D
2 1 D
2 -3 D
2 -9 D
2 -32 D
2 -96 D
2 -214 D
2 -275 D
2 -65 D
2 362 D
2 681 D
2 608 D
2 104 D
2 -457 D
2 -581 D
2 -231 D
2 131 D
2 171 D
2 19 D
2 -64 D
2 -41 D
2 -48 D
2 -103 D
2 -51 D
2 146 D
2 219 D
2 -76 D
2 -488 D
1 -328 D
546 0 M
2 421 D
2 620 D
2 213 D
2 -196 D
2 -250 D
2 -34 D
2 148 D
2 144 D
2 -4 D
2 -208 D
2 -313 D
2 -174 D
2 146 D
2 365 D
2 253 D
2 -94 D
2 -347 D
2 -306 D
2 -76 D
2 108 D
2 127 D
2 41 D
2 14 D
2 91 D
2 141 D
2 71 D
2 -62 D
2 -152 D
2 -101 D
2 63 D
2 192 D
2 146 D
2 -60 D
2 -225 D
2 -157 D
2 118 D
2 325 D
2 235 D
2 -83 D
2 -291 D
2 -184 D
2 40 D
2 44 D
2 -187 D
2 -318 D
2 -128 D
2 210 D
2 356 D
2 182 D
2 -97 D
2 -207 D
2 -150 D
2 -68 D
2 21 D
2 190 D
2 369 D
2 345 D
2 52 D
2 -273 D
2 -348 D
2 -156 D
2 100 D
2 246 D
2 226 D
2 60 D
2 -172 D
2 -319 D
2 -261 D
2 -49 D
2 183 D
2 331 D
2 375 D
2 246 D
2 -115 D
2 -536 D
2 -662 D
1 -195 D
702 0 M
2 370 D
2 480 D
2 225 D
2 -126 D
2 -326 D
2 -265 D
2 -58 D
2 124 D
2 183 D
2 107 D
2 -38 D
2 -127 D
2 -68 D
2 139 D
2 398 D
2 510 D
2 314 D
2 -101 D
2 -475 D
2 -603 D
2 -432 D
2 -88 D
2 170 D
2 197 D
2 54 D
2 -87 D
2 -143 D
2 -108 D
2 12 D
2 178 D
2 262 D
2 198 D
2 100 D
2 97 D
2 154 D
2 158 D
2 72 D
2 -84 D
2 -255 D
2 -350 D
2 -318 D
2 -213 D
2 -149 D
1 -88 D
797 0 M
1 116 D
2 313 D
2 300 D
2 253 D
2 247 D
2 238 D
2 115 D
2 -96 D
2 -244 D
2 -234 D
2 -136 D
2 -81 D
2 -114 D
2 -190 D
2 -240 D
2 -211 D
1 -36 D
830 0 M
2 151 D
2 372 D
2 401 D
2 287 D
2 157 D
2 130 D
2 181 D
2 142 D
2 -78 D
2 -412 D
2 -665 D
2 -641 D
0 -25 D
859 0 M
1 253 D
2 479 D
2 355 D
2 162 D
2 -40 D
2 -181 D
2 -229 D
2 -208 D
2 -179 D
2 -166 D
2 -145 D
2 -99 D
0 -2 D
886 0 M
0 4 D
2 139 D
2 248 D
2 296 D
2 206 D
2 18 D
2 -105 D
2 -41 D
2 147 D
2 298 D
2 331 D
2 277 D
2 163 D
2 -22 D
2 -247 D
2 -412 D
2 -423 D
2 -332 D
2 -208 D
2 -109 D
2 -78 D
2 -128 D
0 -22 D
938 0 M
0 68 D
2 331 D
2 266 D
2 233 D
2 266 D
2 273 D
2 168 D
2 -55 D
2 -286 D
2 -378 D
2 -282 D
2 -75 D
2 86 D
2 106 D
2 -8 D
2 -136 D
2 -146 D
2 -23 D
2 156 D
2 258 D
2 213 D
2 63 D
2 -68 D
2 -110 D
2 -75 D
2 -50 D
2 -80 D
2 -121 D
2 -105 D
2 -35 D
2 31 D
2 36 D
2 9 D
2 17 D
2 87 D
2 161 D
2 165 D
2 76 D
2 -45 D
2 -108 D
2 -84 D
2 -16 D
2 36 D
2 38 D
2 4 D
2 -17 D
2 17 D
2 53 D
2 23 D
2 -78 D
2 -164 D
2 -160 D
2 -57 D
2 62 D
2 101 D
2 35 D
2 -71 D
2 -107 D
2 -53 D
2 35 D
2 73 D
2 44 D
2 4 D
2 7 D
2 67 D
2 142 D
2 179 D
2 138 D
2 34 D
2 -73 D
2 -139 D
2 -167 D
2 -157 D
2 -109 D
2 -37 D
2 29 D
2 77 D
2 104 D
2 98 D
2 54 D
2 1 D
2 -19 D
2 -5 D
2 12 D
2 2 D
2 -35 D
2 -64 D
2 -50 D
2 -3 D
2 37 D
2 26 D
2 -31 D
2 -70 D
2 -70 D
2 -38 D
2 -22 D
2 -12 D
2 15 D
2 68 D
2 116 D
2 117 D
2 71 D
2 1 D
2 -49 D
2 -67 D
2 -58 D
2 -30 D
2 -9 D
2 2 D
2 5 D
2 6 D
2 14 D
2 16 D
2 0 D
2 -29 D
2 -46 D
2 -34 D
2 -3 D
2 18 D
2 31 D
2 41 D
2 51 D
2 56 D
2 43 D
2 11 D
2 -29 D
2 -60 D
2 -76 D
2 -73 D
2 -50 D
2 -11 D
2 13 D
2 16 D
2 10 D
2 25 D
2 64 D
2 102 D
2 102 D
2 65 D
2 17 D
2 -5 D
2 -10 D
2 -26 D
2 -67 D
2 -105 D
2 -95 D
2 -35 D
2 31 D
2 41 D
2 -10 D
2 -74 D
2 -82 D
2 -25 D
2 50 D
2 81 D
2 49 D
2 -12 D
2 -50 D
2 -31 D
2 30 D
2 78 D
2 78 D
2 39 D
2 5 D
2 12 D
2 54 D
2 84 D
2 68 D
2 5 D
2 -53 D
2 -81 D
2 -64 D
2 -44 D
2 -45 D
2 -66 D
2 -86 D
2 -75 D
2 -39 D
2 -11 D
2 -2 D
2 -6 D
2 -7 D
2 0 D
2 25 D
2 58 D
2 76 D
2 62 D
2 30 D
2 11 D
2 15 D
2 18 D
2 7 D
2 -16 D
2 -41 D
2 -45 D
2 -23 D
2 9 D
2 29 D
2 21 D
2 -2 D
2 -20 D
2 -17 D
2 0 D
2 17 D
2 27 D
2 33 D
2 31 D
2 27 D
2 20 D
2 10 D
2 -6 D
2 -20 D
2 -18 D
2 -4 D
2 10 D
2 10 D
2 -2 D
2 -9 D
2 -6 D
2 -7 D
2 -18 D
2 -39 D
2 -46 D
2 -28 D
2 15 D
2 46 D
2 52 D
2 25 D
2 -11 D
2 -33 D
2 -38 D
2 -38 D
2 -36 D
2 -25 D
2 -16 D
2 -5 D
2 3 D
2 16 D
2 28 D
2 37 D
2 35 D
2 21 D
2 12 D
2 20 D
2 35 D
2 39 D
2 12 D
2 -24 D
2 -43 D
2 -38 D
2 -26 D
2 -16 D
2 -14 D
2 -12 D
2 -8 D
2 -9 D
2 -9 D
2 -10 D
2 -7 D
2 -6 D
2 3 D
2 19 D
2 35 D
2 39 D
2 30 D
2 19 D
2 10 D
2 8 D
2 2 D
2 -6 D
2 -11 D
2 -8 D
2 2 D
2 7 D
2 -1 D
2 -19 D
2 -39 D
2 -42 D
2 -31 D
2 -9 D
2 17 D
2 28 D
2 32 D
2 23 D
2 15 D
2 4 D
2 -6 D
2 -10 D
2 -9 D
2 -3 D
2 0 D
2 -1 D
2 -5 D
2 -7 D
2 1 D
2 18 D
2 28 D
2 22 D
2 0 D
2 -20 D
2 -26 D
2 -16 D
2 -3 D
2 2 D
2 -7 D
2 -23 D
2 -32 D
2 -27 D
2 -16 D
2 -6 D
2 -4 D
2 1 D
2 15 D
2 35 D
2 45 D
2 35 D
2 19 D
2 6 D
2 5 D
2 4 D
2 0 D
2 -8 D
2 -13 D
2 -15 D
2 -12 D
2 -4 D
2 4 D
2 11 D
2 6 D
2 -2 D
2 -14 D
2 -19 D
2 -14 D
2 -4 D
2 2 D
2 4 D
2 -1 D
2 -6 D
2 -11 D
2 -16 D
2 -10 D
2 3 D
2 17 D
2 27 D
2 24 D
2 17 D
2 6 D
2 4 D
2 9 D
2 11 D
2 8 D
2 0 D
2 -8 D
2 -5 D
2 5 D
2 12 D
2 10 D
2 -3 D
2 -19 D
2 -29 D
2 -30 D
2 -28 D
2 -19 D
2 -3 D
2 12 D
2 23 D
2 22 D
2 13 D
2 -1 D
2 -9 D
2 -6 D
2 3 D
2 12 D
2 13 D
2 1 D
2 -10 D
2 -12 D
2 -2 D
2 7 D
2 1 D
2 -13 D
2 -27 D
2 -22 D
2 -5 D
2 14 D
2 17 D
2 8 D
2 -3 D
2 0 D
2 17 D
2 33 D
2 39 D
2 24 D
2 5 D
2 -9 D
2 -7 D
2 -2 D
2 0 D
2 -7 D
2 -17 D
2 -21 D
2 -16 D
2 -10 D
2 -8 D
2 -11 D
2 -12 D
2 -4 D
2 10 D
2 16 D
2 12 D
2 8 D
2 4 D
2 2 D
2 0 D
2 -3 D
2 -10 D
2 -11 D
2 -11 D
2 -7 D
2 0 D
2 4 D
2 4 D
2 2 D
2 6 D
2 8 D
2 8 D
2 1 D
2 -6 D
2 -7 D
2 1 D
2 6 D
2 6 D
2 -3 D
2 -5 D
2 -1 D
2 5 D
2 6 D
2 1 D
2 -5 D
2 -6 D
2 -2 D
2 5 D
2 10 D
2 9 D
2 5 D
2 -1 D
2 -3 D
2 -4 D
2 -4 D
2 -4 D
2 -5 D
2 0 D
2 6 D
2 8 D
2 8 D
2 -1 D
2 -11 D
2 -17 D
2 -15 D
2 -10 D
2 -6 D
2 -2 D
2 -1 D
2 -1 D
2 -3 D
2 -3 D
2 0 D
2 5 D
2 7 D
2 3 D
2 1 D
2 -1 D
2 1 D
2 3 D
2 4 D
2 2 D
2 2 D
2 1 D
2 2 D
2 4 D
2 9 D
2 17 D
2 20 D
2 16 D
2 2 D
2 -10 D
2 -18 D
2 -12 D
2 2 D
2 13 D
2 10 D
2 2 D
2 -8 D
2 -9 D
2 -6 D
2 -2 D
2 -1 D
2 0 D
2 4 D
2 6 D
2 2 D
2 -5 D
2 -9 D
2 -11 D
2 -8 D
2 -2 D
2 -2 D
2 -5 D
2 -7 D
2 -4 D
2 5 D
2 10 D
2 9 D
2 4 D
2 -3 D
2 -3 D
2 -1 D
2 2 D
2 1 D
2 -4 D
2 -5 D
2 -6 D
2 -3 D
2 3 D
2 5 D
2 4 D
2 3 D
2 2 D
2 1 D
2 4 D
2 7 D
2 6 D
2 3 D
2 4 D
2 3 D
2 3 D
2 -3 D
2 -9 D
2 -10 D
2 -9 D
2 -4 D
2 -2 D
2 -3 D
2 -6 D
2 -1 D
2 3 D
2 6 D
2 5 D
2 2 D
2 -1 D
2 -1 D
2 -2 D
2 -2 D
2 -6 D
2 -11 D
2 -10 D
2 -9 D
2 -3 D
2 -2 D
2 -2 D
2 -5 D
2 -7 D
2 -5 D
2 0 D
2 3 D
2 4 D
2 5 D
2 6 D
2 8 D
2 12 D
2 14 D
2 10 D
2 7 D
2 0 D
2 -4 D
2 -4 D
2 1 D
2 7 D
2 9 D
2 6 D
2 4 D
2 0 D
2 2 D
2 4 D
2 2 D
2 -4 D
2 -9 D
2 -8 D
2 -5 D
2 -1 D
2 3 D
2 6 D
2 6 D
2 4 D
2 1 D
2 -1 D
2 -3 D
2 -3 D
2 -9 D
2 -14 D
2 -15 D
2 -11 D
2 1 D
2 10 D
2 15 D
2 14 D
2 10 D
2 6 D
2 1 D
2 -1 D
2 -2 D
2 -1 D
2 -2 D
2 -2 D
2 -5 D
2 -4 D
2 -1 D
2 4 D
2 8 D
2 10 D
2 8 D
2 0 D
2 -4 D
2 -6 D
2 -5 D
2 -3 D
2 -1 D
2 -2 D
2 -1 D
2 2 D
2 5 D
2 5 D
2 2 D
2 -5 D
2 -8 D
2 -9 D
2 -7 D
2 -3 D
2 0 D
2 1 D
2 0 D
2 -2 D
2 -3 D
2 -3 D
2 3 D
2 6 D
2 8 D
2 5 D
2 1 D
2 -2 D
2 -4 D
2 -4 D
2 -3 D
2 -3 D
2 -1 D
2 -2 D
2 -1 D
2 2 D
2 1 D
2 0 D
2 -3 D
2 -5 D
2 -4 D
2 -1 D
2 3 D
2 8 D
2 10 D
2 13 D
2 10 D
2 7 D
2 3 D
2 -1 D
2 -4 D
2 -5 D
2 -4 D
2 -4 D
2 0 D
S
292 1524 M
2 0 D
2 -1 D
2 0 D
2 1 D
2 1 D
2 1 D
2 1 D
2 0 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 1 D
2 0 D
2 1 D
2 0 D
2 0 D
2 0 D
2 1 D
2 0 D
2 -1 D
2 -1 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 0 D
2 0 D
2 1 D
2 0 D
2 1 D
2 1 D
2 0 D
2 -1 D
2 0 D
2 0 D
2 -1 D
2 -1 D
2 -1 D
2 -2 D
2 0 D
2 0 D
2 1 D
2 0 D
2 -1 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 -1 D
2 1 D
2 -2 D
2 0 D
2 -1 D
2 2 D
2 0 D
2 1 D
2 -1 D
2 0 D
2 0 D
2 0 D
2 -1 D
2 -1 D
2 0 D
2 1 D
2 1 D
2 0 D
2 -1 D
2 -1 D
2 1 D
2 0 D
2 0 D
2 -1 D
2 -2 D
2 0 D
2 0 D
2 0 D
2 0 D
2 2 D
2 1 D
2 0 D
2 0 D
2 -1 D
2 0 D
2 0 D
2 2 D
2 0 D
2 0 D
2 0 D
2 1 D
2 1 D
2 -3 D
2 -9 D
2 -32 D
2 -96 D
2 -214 D
2 -275 D
2 -65 D
2 362 D
2 681 D
2 530 D
513 2400 M
1 -275 D
2 -581 D
2 -231 D
2 131 D
2 171 D
2 19 D
2 -64 D
2 -41 D
2 -48 D
2 -103 D
2 -51 D
2 146 D
2 219 D
2 -76 D
2 -488 D
2 -488 D
2 21 D
2 560 D
2 620 D
2 213 D
2 -196 D
2 -250 D
2 -34 D
2 148 D
2 144 D
2 -4 D
2 -208 D
2 -313 D
2 -174 D
2 146 D
2 365 D
2 253 D
2 -94 D
2 -347 D
2 -306 D
2 -76 D
2 108 D
2 127 D
2 41 D
2 14 D
2 91 D
2 141 D
2 71 D
2 -62 D
2 -152 D
2 -101 D
2 63 D
2 192 D
2 146 D
2 -60 D
2 -225 D
2 -157 D
2 118 D
2 325 D
2 235 D
2 -83 D
2 -291 D
2 -184 D
2 40 D
2 44 D
2 -187 D
2 -318 D
2 -128 D
2 210 D
2 356 D
2 182 D
2 -97 D
2 -207 D
2 -150 D
2 -68 D
2 21 D
2 190 D
2 369 D
2 345 D
2 52 D
2 -273 D
2 -348 D
2 -156 D
2 100 D
2 246 D
2 226 D
2 60 D
2 -172 D
2 -319 D
2 -261 D
2 -49 D
2 183 D
2 331 D
2 375 D
2 246 D
2 -115 D
2 -536 D
2 -662 D
2 -371 D
2 102 D
2 444 D
2 480 D
2 225 D
2 -126 D
2 -326 D
2 -265 D
2 -58 D
2 124 D
2 183 D
2 107 D
2 -38 D
2 -127 D
2 -68 D
2 139 D
2 398 D
2 510 D
0 72 D
739 2400 M
1 -334 D
2 -603 D
2 -432 D
2 -88 D
2 170 D
2 197 D
2 54 D
2 -87 D
2 -143 D
2 -108 D
2 12 D
2 178 D
2 262 D
2 198 D
2 100 D
2 97 D
2 154 D
2 158 D
2 72 D
2 -84 D
2 -255 D
2 -350 D
2 -318 D
2 -213 D
2 -149 D
2 -138 D
2 -117 D
2 -39 D
2 89 D
2 233 D
2 313 D
2 300 D
2 253 D
2 247 D
2 238 D
2 115 D
2 -96 D
2 -244 D
2 -234 D
2 -136 D
2 -81 D
2 -114 D
2 -190 D
2 -240 D
2 -211 D
2 -60 D
2 175 D
2 372 D
2 401 D
2 287 D
2 157 D
2 130 D
1 102 D
849 2400 M
1 -269 D
2 -665 D
2 -641 D
2 -315 D
2 123 D
2 420 D
2 479 D
2 355 D
2 162 D
2 -40 D
2 -181 D
2 -229 D
2 -208 D
2 -179 D
2 -166 D
2 -145 D
2 -99 D
2 -38 D
2 40 D
2 139 D
2 248 D
2 296 D
2 206 D
2 18 D
2 -105 D
2 -41 D
2 147 D
2 298 D
2 331 D
0 59 D
915 2400 M
1 -300 D
2 -423 D
2 -332 D
2 -208 D
2 -109 D
2 -78 D
2 -128 D
2 -203 D
2 -193 D
2 -45 D
2 170 D
2 317 D
2 331 D
2 266 D
2 233 D
2 266 D
2 273 D
2 163 D
950 2400 M
2 -50 D
2 -286 D
2 -378 D
2 -282 D
2 -75 D
2 86 D
2 106 D
2 -8 D
2 -136 D
2 -146 D
2 -23 D
2 156 D
2 258 D
2 213 D
2 63 D
2 -68 D
2 -110 D
2 -75 D
2 -50 D
2 -80 D
2 -121 D
2 -105 D
2 -35 D
2 31 D
2 36 D
2 9 D
2 17 D
2 87 D
2 161 D
2 165 D
2 76 D
2 -45 D
2 -108 D
2 -84 D
2 -16 D
2 36 D
2 38 D
2 4 D
2 -17 D
2 17 D
2 53 D
2 23 D
2 -78 D
2 -164 D
2 -160 D
2 -57 D
2 62 D
2 101 D
2 35 D
2 -71 D
2 -107 D
2 -53 D
2 35 D
2 73 D
2 44 D
2 4 D
2 7 D
2 67 D
2 142 D
2 179 D
2 138 D
2 34 D
2 -73 D
2 -139 D
2 -167 D
2 -157 D
2 -109 D
2 -37 D
2 29 D
2 77 D
2 104 D
2 98 D
2 54 D
2 1 D
2 -19 D
2 -5 D
2 12 D
2 2 D
2 -35 D
2 -64 D
2 -50 D
2 -3 D
2 37 D
2 26 D
2 -31 D
2 -70 D
2 -70 D
2 -38 D
2 -22 D
2 -12 D
2 15 D
2 68 D
2 116 D
2 117 D
2 71 D
2 1 D
2 -49 D
2 -67 D
2 -58 D
2 -30 D
2 -9 D
2 2 D
2 5 D
2 6 D
2 14 D
2 16 D
2 0 D
2 -29 D
2 -46 D
2 -34 D
2 -3 D
2 18 D
2 31 D
2 41 D
2 51 D
2 56 D
2 43 D
2 11 D
2 -29 D
2 -60 D
2 -76 D
2 -73 D
2 -50 D
2 -11 D
2 13 D
2 16 D
2 10 D
2 25 D
2 64 D
2 102 D
2 102 D
2 65 D
2 17 D
2 -5 D
2 -10 D
2 -26 D
2 -67 D
2 -105 D
2 -95 D
2 -35 D
2 31 D
2 41 D
2 -10 D
2 -74 D
2 -82 D
2 -25 D
2 50 D
2 81 D
2 49 D
2 -12 D
2 -50 D
2 -31 D
2 30 D
2 78 D
2 78 D
2 39 D
2 5 D
2 12 D
2 54 D
2 84 D
2 68 D
2 5 D
2 -53 D
2 -81 D
2 -64 D
2 -44 D
2 -45 D
2 -66 D
2 -86 D
2 -75 D
2 -39 D
2 -11 D
2 -2 D
2 -6 D
2 -7 D
2 0 D
2 25 D
2 58 D
2 76 D
2 62 D
2 30 D
2 11 D
2 15 D
2 18 D
2 7 D
2 -16 D
2 -41 D
2 -45 D
2 -23 D
2 9 D
2 29 D
2 21 D
2 -2 D
2 -20 D
2 -17 D
2 0 D
2 17 D
2 27 D
2 33 D
2 31 D
2 27 D
2 20 D
2 10 D
2 -6 D
2 -20 D
2 -18 D
2 -4 D
2 10 D
2 10 D
2 -2 D
2 -9 D
2 -6 D
2 -7 D
2 -18 D
2 -39 D
2 -46 D
2 -28 D
2 15 D
2 46 D
2 52 D
2 25 D
2 -11 D
2 -33 D
2 -38 D
2 -38 D
2 -36 D
2 -25 D
2 -16 D
2 -5 D
2 3 D
2 16 D
2 28 D
2 37 D
2 35 D
2 21 D
2 12 D
2 20 D
2 35 D
2 39 D
2 12 D
2 -24 D
2 -43 D
2 -38 D
2 -26 D
2 -16 D
2 -14 D
2 -12 D
2 -8 D
2 -9 D
2 -9 D
2 -10 D
2 -7 D
2 -6 D
2 3 D
2 19 D
2 35 D
2 39 D
2 30 D
2 19 D
2 10 D
2 8 D
2 2 D
2 -6 D
2 -11 D
2 -8 D
2 2 D
2 7 D
2 -1 D
2 -19 D
2 -39 D
2 -42 D
2 -31 D
2 -9 D
2 17 D
2 28 D
2 32 D
2 23 D
2 15 D
2 4 D
2 -6 D
2 -10 D
2 -9 D
2 -3 D
2 0 D
2 -1 D
2 -5 D
2 -7 D
2 1 D
2 18 D
2 28 D
2 22 D
2 0 D
2 -20 D
2 -26 D
2 -16 D
2 -3 D
2 2 D
2 -7 D
2 -23 D
2 -32 D
2 -27 D
2 -16 D
2 -6 D
2 -4 D
2 1 D
2 15 D
2 35 D
2 45 D
2 35 D
2 19 D
2 6 D
2 5 D
2 4 D
2 0 D
2 -8 D
2 -13 D
2 -15 D
2 -12 D
2 -4 D
2 4 D
2 11 D
2 6 D
2 -2 D
2 -14 D
2 -19 D
2 -14 D
2 -4 D
2 2 D
2 4 D
2 -1 D
2 -6 D
2 -11 D
2 -16 D
2 -10 D
2 3 D
2 17 D
2 27 D
2 24 D
2 17 D
2 6 D
2 4 D
2 9 D
2 11 D
2 8 D
2 0 D
2 -8 D
2 -5 D
2 5 D
2 12 D
2 10 D
2 -3 D
2 -19 D
2 -29 D
2 -30 D
2 -28 D
2 -19 D
2 -3 D
2 12 D
2 23 D
2 22 D
2 13 D
2 -1 D
2 -9 D
2 -6 D
2 3 D
2 12 D
2 13 D
2 1 D
2 -10 D
2 -12 D
2 -2 D
2 7 D
2 1 D
2 -13 D
2 -27 D
2 -22 D
2 -5 D
2 14 D
2 17 D
2 8 D
2 -3 D
2 0 D
2 17 D
2 33 D
2 39 D
2 24 D
2 5 D
2 -9 D
2 -7 D
2 -2 D
2 0 D
2 -7 D
2 -17 D
2 -21 D
2 -16 D
2 -10 D
2 -8 D
2 -11 D
2 -12 D
2 -4 D
2 10 D
2 16 D
2 12 D
2 8 D
2 4 D
2 2 D
2 0 D
2 -3 D
2 -10 D
2 -11 D
2 -11 D
2 -7 D
2 0 D
2 4 D
2 4 D
2 2 D
2 6 D
2 8 D
2 8 D
2 1 D
2 -6 D
2 -7 D
2 1 D
2 6 D
2 6 D
2 -3 D
2 -5 D
2 -1 D
2 5 D
2 6 D
2 1 D
2 -5 D
2 -6 D
2 -2 D
2 5 D
2 10 D
2 9 D
2 5 D
2 -1 D
2 -3 D
2 -4 D
2 -4 D
2 -4 D
2 -5 D
2 0 D
2 6 D
2 8 D
2 8 D
2 -1 D
2 -11 D
2 -17 D
2 -15 D
2 -10 D
2 -6 D
2 -2 D
2 -1 D
2 -1 D
2 -3 D
2 -3 D
2 0 D
2 5 D
2 7 D
2 3 D
2 1 D
2 -1 D
2 1 D
2 3 D
2 4 D
2 2 D
2 2 D
2 1 D
2 2 D
2 4 D
2 9 D
2 17 D
2 20 D
2 16 D
2 2 D
2 -10 D
2 -18 D
2 -12 D
2 2 D
2 13 D
2 10 D
2 2 D
2 -8 D
2 -9 D
2 -6 D
2 -2 D
2 -1 D
2 0 D
2 4 D
2 6 D
2 2 D
2 -5 D
2 -9 D
2 -11 D
2 -8 D
2 -2 D
2 -2 D
2 -5 D
2 -7 D
2 -4 D
2 5 D
2 10 D
2 9 D
2 4 D
2 -3 D
2 -3 D
2 -1 D
2 2 D
2 1 D
2 -4 D
2 -5 D
2 -6 D
2 -3 D
2 3 D
2 5 D
2 4 D
2 3 D
2 2 D
2 1 D
2 4 D
2 7 D
2 6 D
2 3 D
2 4 D
2 3 D
2 3 D
2 -3 D
2 -9 D
2 -10 D
2 -9 D
2 -4 D
2 -2 D
2 -3 D
2 -6 D
2 -1 D
2 3 D
2 6 D
2 5 D
2 2 D
2 -1 D
2 -1 D
2 -2 D
2 -2 D
2 -6 D
2 -11 D
2 -10 D
2 -9 D
2 -3 D
2 -2 D
2 -2 D
2 -5 D
2 -7 D
2 -5 D
2 0 D
2 3 D
2 4 D
2 5 D
2 6 D
2 8 D
2 12 D
2 14 D
2 10 D
2 7 D
2 0 D
2 -4 D
2 -4 D
2 1 D
2 7 D
2 9 D
2 6 D
2 4 D
2 0 D
2 2 D
2 4 D
2 2 D
2 -4 D
2 -9 D
2 -8 D
2 -5 D
2 -1 D
2 3 D
2 6 D
2 6 D
2 4 D
2 1 D
2 -1 D
2 -3 D
2 -3 D
2 -9 D
2 -14 D
2 -15 D
2 -11 D
2 1 D
2 10 D
2 15 D
2 14 D
2 10 D
2 6 D
2 1 D
2 -1 D
2 -2 D
2 -1 D
2 -2 D
2 -2 D
2 -5 D
2 -4 D
2 -1 D
2 4 D
2 8 D
2 10 D
2 8 D
2 0 D
2 -4 D
2 -6 D
2 -5 D
2 -3 D
2 -1 D
2 -2 D
2 -1 D
2 2 D
2 5 D
2 5 D
2 2 D
2 -5 D
2 -8 D
2 -9 D
2 -7 D
2 -3 D
2 0 D
2 1 D
2 0 D
2 -2 D
2 -3 D
2 -3 D
2 3 D
2 6 D
2 8 D
2 5 D
2 1 D
2 -2 D
2 -4 D
2 -4 D
2 -3 D
2 -3 D
2 -1 D
2 -2 D
2 -1 D
2 2 D
2 1 D
2 0 D
2 -3 D
2 -5 D
2 -4 D
2 -1 D
2 3 D
2 8 D
2 10 D
2 13 D
2 10 D
2 7 D
2 3 D
2 -1 D
2 -4 D
2 -5 D
2 -4 D
2 -4 D
2 0 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1830
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M2i) ($E) ($B) (-K) (-O) (-X2.6i)
(\>\>) ($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
-3120 3240 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X-2.6i -Y2.7i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1831
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 781 M
78 1 D
46 -3 D
16 1 D
4 -1 D
8 1 D
2 -1 D
6 1 D
14 -1 D
6 1 D
6 -1 D
14 1 D
4 -11 D
4 -77 D
2 -69 D
2 -16 D
6 412 D
2 27 D
6 -318 D
4 76 D
2 4 D
6 -38 D
4 -38 D
4 91 D
2 -19 D
4 -244 D
2 5 D
4 295 D
2 54 D
4 -112 D
2 -8 D
4 73 D
2 -1 D
6 -174 D
6 191 D
2 -24 D
4 -163 D
2 -19 D
4 59 D
4 14 D
6 75 D
6 -78 D
2 15 D
4 85 D
2 -15 D
4 -96 D
6 170 D
2 -21 D
4 -119 D
4 21 D
6 -158 D
6 187 D
8 -131 D
2 6 D
6 226 D
2 13 D
6 -195 D
6 144 D
2 14 D
6 -187 D
2 -13 D
8 284 D
2 -29 D
6 -392 D
2 26 D
6 287 D
6 -180 D
2 -14 D
6 104 D
2 -10 D
4 -49 D
4 134 D
4 206 D
2 -25 D
6 -377 D
2 -22 D
4 91 D
2 14 D
6 -84 D
2 3 D
8 184 D
8 120 D
2 -21 D
8 -284 D
6 -101 D
2 -10 D
4 81 D
10 338 D
2 29 D
8 -178 D
6 -96 D
4 -113 D
2 -15 D
10 348 D
6 113 D
2 -19 D
8 -508 D
2 30 D
6 314 D
2 40 D
2 -10 D
12 -277 D
4 -34 D
2 10 D
8 222 D
2 5 D
4 -37 D
10 304 D
2 -5 D
10 -406 D
6 -79 D
4 -99 D
2 -11 D
16 506 D
2 -14 D
6 -236 D
2 -19 D
4 48 D
2 -2 D
4 -70 D
2 -6 D
6 157 D
2 16 D
12 -126 D
2 -27 D
2 -8 D
4 16 D
4 7 D
8 122 D
6 -59 D
2 -4 D
4 18 D
2 1 D
2 -4 D
2 4 D
4 19 D
8 -115 D
6 50 D
6 -58 D
6 38 D
4 3 D
8 132 D
2 8 D
10 -161 D
2 -10 D
4 27 D
6 64 D
2 0 D
2 -5 D
2 -1 D
2 3 D
2 1 D
6 -38 D
2 0 D
4 16 D
8 -53 D
4 -8 D
2 3 D
8 94 D
2 0 D
8 -51 D
2 -3 D
6 4 D
4 7 D
2 0 D
6 -27 D
2 -1 D
6 23 D
6 37 D
2 3 D
6 -41 D
4 -31 D
2 -3 D
6 10 D
4 22 D
6 68 D
2 4 D
4 -4 D
4 -23 D
4 -50 D
2 -9 D
4 18 D
2 -3 D
4 -39 D
2 -6 D
6 45 D
2 -3 D
4 -20 D
4 27 D
4 29 D
2 1 D
2 3 D
6 52 D
2 1 D
14 -109 D
4 -29 D
2 -3 D
2 0 D
4 -4 D
2 0 D
6 40 D
4 23 D
8 13 D
4 -14 D
4 -17 D
2 2 D
4 13 D
2 -1 D
4 -9 D
2 0 D
12 38 D
2 3 D
6 -11 D
2 -1 D
4 5 D
8 -6 D
4 -14 D
4 -19 D
2 4 D
6 31 D
4 -11 D
8 -34 D
4 -6 D
2 1 D
10 34 D
4 8 D
4 19 D
2 3 D
8 -33 D
8 -13 D
6 -7 D
4 -3 D
2 1 D
10 36 D
6 5 D
6 -7 D
4 3 D
2 -1 D
4 -14 D
4 -19 D
2 -2 D
10 29 D
2 1 D
2 -1 D
4 -5 D
8 -2 D
2 -2 D
2 0 D
6 17 D
2 0 D
6 -15 D
4 -1 D
4 -7 D
6 -19 D
6 -2 D
6 23 D
4 14 D
6 4 D
2 0 D
8 -12 D
2 -1 D
2 1 D
2 3 D
4 1 D
6 -12 D
4 -1 D
4 1 D
4 -4 D
4 -7 D
2 1 D
8 21 D
6 5 D
4 5 D
2 0 D
4 -3 D
2 1 D
4 5 D
2 0 D
10 -32 D
2 -1 D
8 18 D
2 0 D
4 -4 D
2 1 D
4 6 D
2 0 D
4 -5 D
2 -1 D
2 2 D
2 0 D
6 -15 D
2 -2 D
6 10 D
4 -1 D
8 29 D
2 1 D
4 -4 D
4 0 D
4 -6 D
4 -10 D
8 -10 D
2 -1 D
8 12 D
6 1 D
4 -3 D
6 -8 D
10 4 D
4 5 D
2 0 D
4 -3 D
4 1 D
2 2 D
6 -2 D
6 3 D
6 -4 D
8 8 D
10 -4 D
2 -2 D
2 0 D
6 6 D
2 0 D
8 -14 D
6 -2 D
8 -2 D
6 4 D
8 1 D
12 4 D
8 15 D
2 1 D
6 -10 D
2 0 D
4 6 D
2 1 D
4 -5 D
6 -2 D
4 1 D
2 2 D
4 -1 D
6 -7 D
4 -1 D
6 -4 D
2 1 D
4 5 D
2 1 D
6 -2 D
4 1 D
8 -5 D
14 6 D
10 6 D
4 0 D
6 -7 D
10 -5 D
8 5 D
8 -2 D
8 -9 D
8 -3 D
4 -3 D
10 4 D
8 12 D
4 1 D
4 -2 D
4 2 D
2 3 D
12 4 D
10 -7 D
8 5 D
8 -1 D
8 -13 D
2 0 D
8 13 D
4 2 D
10 -2 D
4 -3 D
4 1 D
6 7 D
4 -1 D
6 -4 D
6 -1 D
8 4 D
8 -8 D
10 -1 D
6 -1 D
6 5 D
2 1 D
12 -5 D
12 0 D
4 -3 D
4 1 D
4 4 D
4 6 D
4 3 D
12 -5 D
S
292 1581 M
78 1 D
46 -3 D
16 1 D
4 -1 D
8 1 D
2 -1 D
6 1 D
14 -1 D
6 1 D
6 -1 D
14 1 D
4 -11 D
4 -77 D
2 -69 D
2 -16 D
6 412 D
2 27 D
6 -318 D
4 76 D
2 4 D
6 -38 D
4 -38 D
4 91 D
2 -19 D
4 -244 D
2 5 D
4 295 D
2 54 D
4 -112 D
2 -8 D
4 73 D
2 -1 D
6 -174 D
6 191 D
2 -24 D
4 -163 D
2 -19 D
4 59 D
4 14 D
6 75 D
6 -78 D
2 15 D
4 85 D
2 -15 D
4 -96 D
6 170 D
2 -21 D
4 -119 D
4 21 D
6 -158 D
6 187 D
8 -131 D
2 6 D
6 226 D
2 13 D
6 -195 D
6 144 D
2 14 D
6 -187 D
2 -13 D
8 284 D
2 -29 D
6 -392 D
2 26 D
6 287 D
6 -180 D
2 -14 D
6 104 D
2 -10 D
4 -49 D
4 134 D
4 206 D
2 -25 D
6 -377 D
2 -22 D
4 91 D
2 14 D
6 -84 D
2 3 D
8 184 D
8 120 D
2 -21 D
8 -284 D
6 -101 D
2 -10 D
4 81 D
10 338 D
2 29 D
8 -178 D
6 -96 D
4 -113 D
2 -15 D
10 348 D
6 113 D
2 -19 D
8 -508 D
2 30 D
6 314 D
2 40 D
2 -10 D
12 -277 D
4 -34 D
2 10 D
8 222 D
2 5 D
4 -37 D
10 304 D
2 -5 D
10 -406 D
6 -79 D
4 -99 D
2 -11 D
16 506 D
2 -14 D
6 -236 D
2 -19 D
4 48 D
2 -2 D
4 -70 D
2 -6 D
6 157 D
2 16 D
12 -126 D
2 -27 D
2 -8 D
4 16 D
4 7 D
8 122 D
6 -59 D
2 -4 D
4 18 D
2 1 D
2 -4 D
2 4 D
4 19 D
8 -115 D
6 50 D
6 -58 D
6 38 D
4 3 D
8 132 D
2 8 D
10 -161 D
2 -10 D
4 27 D
6 64 D
2 0 D
2 -5 D
2 -1 D
2 3 D
2 1 D
6 -38 D
2 0 D
4 16 D
8 -53 D
4 -8 D
2 3 D
8 94 D
2 0 D
8 -51 D
2 -3 D
6 4 D
4 7 D
2 0 D
6 -27 D
2 -1 D
6 23 D
6 37 D
2 3 D
6 -41 D
4 -31 D
2 -3 D
6 10 D
4 22 D
6 68 D
2 4 D
4 -4 D
4 -23 D
4 -50 D
2 -9 D
4 18 D
2 -3 D
4 -39 D
2 -6 D
6 45 D
2 -3 D
4 -20 D
4 27 D
4 29 D
2 1 D
2 3 D
6 52 D
2 1 D
14 -109 D
4 -29 D
2 -3 D
2 0 D
4 -4 D
2 0 D
6 40 D
4 23 D
8 13 D
4 -14 D
4 -17 D
2 2 D
4 13 D
2 -1 D
4 -9 D
2 0 D
12 38 D
2 3 D
6 -11 D
2 -1 D
4 5 D
8 -6 D
4 -14 D
4 -19 D
2 4 D
6 31 D
4 -11 D
8 -34 D
4 -6 D
2 1 D
10 34 D
4 8 D
4 19 D
2 3 D
8 -33 D
8 -13 D
6 -7 D
4 -3 D
2 1 D
10 36 D
6 5 D
6 -7 D
4 3 D
2 -1 D
4 -14 D
4 -19 D
2 -2 D
10 29 D
2 1 D
2 -1 D
4 -5 D
8 -2 D
2 -2 D
2 0 D
6 17 D
2 0 D
6 -15 D
4 -1 D
4 -7 D
6 -19 D
6 -2 D
6 23 D
4 14 D
6 4 D
2 0 D
8 -12 D
2 -1 D
2 1 D
2 3 D
4 1 D
6 -12 D
4 -1 D
4 1 D
4 -4 D
4 -7 D
2 1 D
8 21 D
6 5 D
4 5 D
2 0 D
4 -3 D
2 1 D
4 5 D
2 0 D
10 -32 D
2 -1 D
8 18 D
2 0 D
4 -4 D
2 1 D
4 6 D
2 0 D
4 -5 D
2 -1 D
2 2 D
2 0 D
6 -15 D
2 -2 D
6 10 D
4 -1 D
8 29 D
2 1 D
4 -4 D
4 0 D
4 -6 D
4 -10 D
8 -10 D
2 -1 D
8 12 D
6 1 D
4 -3 D
6 -8 D
10 4 D
4 5 D
2 0 D
4 -3 D
4 1 D
2 2 D
6 -2 D
6 3 D
6 -4 D
8 8 D
10 -4 D
2 -2 D
2 0 D
6 6 D
2 0 D
8 -14 D
6 -2 D
8 -2 D
6 4 D
8 1 D
12 4 D
8 15 D
2 1 D
6 -10 D
2 0 D
4 6 D
2 1 D
4 -5 D
6 -2 D
4 1 D
2 2 D
4 -1 D
6 -7 D
4 -1 D
6 -4 D
2 1 D
4 5 D
2 1 D
6 -2 D
4 1 D
8 -5 D
14 6 D
10 6 D
4 0 D
6 -7 D
10 -5 D
8 5 D
8 -2 D
8 -9 D
8 -3 D
4 -3 D
10 4 D
8 12 D
4 1 D
4 -2 D
4 2 D
2 3 D
12 4 D
10 -7 D
8 5 D
8 -1 D
8 -13 D
2 0 D
8 13 D
4 2 D
10 -2 D
4 -3 D
4 1 D
6 7 D
4 -1 D
6 -4 D
6 -1 D
8 4 D
8 -8 D
10 -1 D
6 -1 D
6 5 D
2 1 D
12 -5 D
12 0 D
4 -3 D
4 1 D
4 4 D
4 6 D
4 3 D
12 -5 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1831
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 13 def
/PSL_n1 12 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M0.5i) ($E) ($B) (-K) (-O) (-X-2.6i)
(-Y2.7i) (\>\>) ($\{PS\})
13 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167 167
13 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 1 0
13 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 13 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 13 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
3120 0 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X2.6i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1832
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 762 M
12 1 D
10 1 D
4 -1 D
16 2 D
10 -2 D
16 2 D
20 -3 D
30 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -7 D
4 -63 D
4 -245 D
2 -33 D
6 826 D
2 52 D
6 -635 D
4 151 D
2 10 D
6 -77 D
4 -77 D
4 183 D
2 -38 D
4 -488 D
2 11 D
4 589 D
2 107 D
4 -223 D
2 -17 D
4 146 D
2 -2 D
6 -348 D
6 383 D
2 -48 D
4 -326 D
2 -38 D
4 117 D
2 21 D
2 7 D
6 152 D
6 -158 D
2 31 D
4 169 D
2 -29 D
4 -191 D
6 338 D
2 -41 D
4 -238 D
4 43 D
6 -317 D
6 374 D
8 -261 D
2 10 D
6 453 D
2 25 D
6 -388 D
6 286 D
2 30 D
6 -376 D
2 -24 D
8 567 D
2 -58 D
6 -784 D
2 51 D
6 575 D
6 -359 D
2 -29 D
6 207 D
2 -19 D
4 -98 D
4 269 D
4 412 D
2 -51 D
6 -754 D
2 -45 D
4 184 D
2 27 D
6 -169 D
2 6 D
8 369 D
8 241 D
4 -170 D
6 -440 D
6 -203 D
2 -19 D
4 161 D
10 676 D
2 57 D
8 -355 D
6 -193 D
4 -225 D
2 -30 D
10 696 D
6 227 D
2 -40 D
8 -1016 D
2 61 D
6 628 D
2 81 D
2 -21 D
12 -553 D
4 -69 D
2 20 D
8 445 D
2 9 D
4 -73 D
10 608 D
2 -11 D
10 -812 D
6 -157 D
4 -198 D
2 -22 D
16 1012 D
2 -28 D
6 -473 D
2 -38 D
4 97 D
2 -5 D
4 -140 D
2 -12 D
6 313 D
2 32 D
12 -252 D
2 -53 D
2 -17 D
4 33 D
4 14 D
8 244 D
6 -118 D
2 -8 D
4 36 D
2 2 D
2 -8 D
2 8 D
4 39 D
6 -202 D
2 -28 D
6 99 D
6 -115 D
6 76 D
4 5 D
8 263 D
2 17 D
10 -323 D
2 -18 D
4 53 D
6 128 D
2 0 D
2 -9 D
2 -3 D
2 6 D
2 1 D
6 -74 D
2 -2 D
4 32 D
8 -105 D
4 -17 D
2 8 D
8 186 D
2 1 D
8 -103 D
2 -4 D
4 3 D
4 10 D
2 9 D
2 0 D
6 -55 D
2 -1 D
6 44 D
6 75 D
2 6 D
6 -83 D
4 -61 D
2 -5 D
6 19 D
4 44 D
6 135 D
2 8 D
4 -7 D
4 -47 D
4 -100 D
2 -17 D
4 36 D
2 -5 D
4 -78 D
2 -13 D
6 90 D
2 -6 D
4 -40 D
4 54 D
4 58 D
4 9 D
6 103 D
2 3 D
14 -220 D
4 -57 D
2 -6 D
2 -1 D
4 -6 D
2 0 D
4 42 D
6 84 D
6 22 D
2 3 D
4 -28 D
4 -35 D
4 19 D
2 11 D
2 -1 D
4 -19 D
2 0 D
12 78 D
2 5 D
2 -3 D
4 -19 D
2 -2 D
4 10 D
2 -1 D
6 -11 D
8 -66 D
4 31 D
4 39 D
4 -22 D
8 -69 D
2 -8 D
2 -2 D
2 1 D
10 69 D
4 16 D
4 36 D
2 6 D
8 -65 D
8 -25 D
10 -21 D
2 2 D
10 71 D
4 9 D
2 1 D
6 -12 D
2 1 D
2 3 D
2 0 D
8 -66 D
2 -5 D
10 58 D
2 2 D
8 -14 D
4 0 D
4 -6 D
2 0 D
6 34 D
2 0 D
6 -31 D
2 -1 D
2 1 D
2 -4 D
8 -49 D
4 -5 D
2 1 D
4 24 D
6 50 D
6 8 D
2 0 D
8 -24 D
2 -2 D
6 10 D
2 -1 D
6 -24 D
2 -2 D
4 3 D
2 0 D
8 -22 D
2 2 D
8 43 D
6 9 D
4 10 D
2 0 D
4 -7 D
6 14 D
2 -2 D
10 -63 D
2 -1 D
8 35 D
2 0 D
4 -8 D
2 2 D
4 12 D
2 1 D
4 -11 D
2 -1 D
2 3 D
2 1 D
6 -32 D
2 -2 D
6 19 D
4 -1 D
8 56 D
2 3 D
4 -8 D
4 -1 D
2 -3 D
8 -32 D
6 -16 D
2 -2 D
8 23 D
4 3 D
4 -1 D
8 -20 D
2 0 D
6 5 D
6 11 D
2 1 D
4 -7 D
2 1 D
4 6 D
6 -5 D
4 6 D
2 0 D
4 -5 D
2 -1 D
4 7 D
4 7 D
2 0 D
10 -10 D
2 0 D
6 11 D
2 -1 D
8 -27 D
2 -3 D
8 -3 D
2 -2 D
2 0 D
6 8 D
6 0 D
6 5 D
6 2 D
4 7 D
6 27 D
2 1 D
6 -20 D
2 1 D
4 11 D
2 1 D
6 -11 D
6 -2 D
4 5 D
2 1 D
4 -7 D
4 -9 D
4 -2 D
6 -9 D
8 15 D
6 -4 D
4 2 D
8 -10 D
6 7 D
8 5 D
8 10 D
4 3 D
6 -11 D
4 -7 D
4 -3 D
2 -3 D
4 1 D
4 6 D
4 1 D
6 -3 D
8 -18 D
8 -6 D
4 -6 D
4 1 D
8 12 D
8 22 D
2 0 D
4 -4 D
2 0 D
8 13 D
4 1 D
4 3 D
8 -13 D
4 1 D
6 8 D
2 1 D
6 -4 D
8 -25 D
2 1 D
8 25 D
2 3 D
6 -1 D
8 -5 D
4 -3 D
8 15 D
2 0 D
8 -9 D
6 -2 D
2 1 D
4 5 D
2 1 D
10 -16 D
6 1 D
6 -5 D
8 12 D
4 -1 D
8 -7 D
6 -2 D
6 2 D
6 -7 D
4 1 D
10 25 D
4 1 D
8 -9 D
2 0 D
S
292 1562 M
12 1 D
10 1 D
4 -1 D
16 2 D
10 -2 D
16 2 D
20 -3 D
30 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -7 D
4 -63 D
4 -245 D
2 -33 D
6 826 D
2 52 D
6 -635 D
4 151 D
2 10 D
6 -77 D
4 -77 D
4 183 D
2 -38 D
4 -488 D
2 11 D
4 589 D
2 107 D
4 -223 D
2 -17 D
4 146 D
2 -2 D
6 -348 D
6 383 D
2 -48 D
4 -326 D
2 -38 D
4 117 D
2 21 D
2 7 D
6 152 D
6 -158 D
2 31 D
4 169 D
2 -29 D
4 -191 D
6 338 D
2 -41 D
4 -238 D
4 43 D
6 -317 D
6 374 D
8 -261 D
2 10 D
6 453 D
2 25 D
6 -388 D
6 286 D
2 30 D
6 -376 D
2 -24 D
8 567 D
2 -58 D
6 -784 D
2 51 D
6 575 D
6 -359 D
2 -29 D
6 207 D
2 -19 D
4 -98 D
4 269 D
4 412 D
2 -51 D
6 -754 D
2 -45 D
4 184 D
2 27 D
6 -169 D
2 6 D
8 369 D
8 241 D
4 -170 D
6 -440 D
6 -203 D
2 -19 D
4 161 D
10 676 D
2 57 D
8 -355 D
6 -193 D
4 -225 D
2 -30 D
10 696 D
6 227 D
2 -40 D
8 -1016 D
2 61 D
6 628 D
2 81 D
2 -21 D
12 -553 D
4 -69 D
2 20 D
8 445 D
2 9 D
4 -73 D
10 608 D
2 -11 D
10 -812 D
6 -157 D
4 -198 D
2 -22 D
16 1012 D
2 -28 D
6 -473 D
2 -38 D
4 97 D
2 -5 D
4 -140 D
2 -12 D
6 313 D
2 32 D
12 -252 D
2 -53 D
2 -17 D
4 33 D
4 14 D
8 244 D
6 -118 D
2 -8 D
4 36 D
2 2 D
2 -8 D
2 8 D
4 39 D
6 -202 D
2 -28 D
6 99 D
6 -115 D
6 76 D
4 5 D
8 263 D
2 17 D
10 -323 D
2 -18 D
4 53 D
6 128 D
2 0 D
2 -9 D
2 -3 D
2 6 D
2 1 D
6 -74 D
2 -2 D
4 32 D
8 -105 D
4 -17 D
2 8 D
8 186 D
2 1 D
8 -103 D
2 -4 D
4 3 D
4 10 D
2 9 D
2 0 D
6 -55 D
2 -1 D
6 44 D
6 75 D
2 6 D
6 -83 D
4 -61 D
2 -5 D
6 19 D
4 44 D
6 135 D
2 8 D
4 -7 D
4 -47 D
4 -100 D
2 -17 D
4 36 D
2 -5 D
4 -78 D
2 -13 D
6 90 D
2 -6 D
4 -40 D
4 54 D
4 58 D
4 9 D
6 103 D
2 3 D
14 -220 D
4 -57 D
2 -6 D
2 -1 D
4 -6 D
2 0 D
4 42 D
6 84 D
6 22 D
2 3 D
4 -28 D
4 -35 D
4 19 D
2 11 D
2 -1 D
4 -19 D
2 0 D
12 78 D
2 5 D
2 -3 D
4 -19 D
2 -2 D
4 10 D
2 -1 D
6 -11 D
8 -66 D
4 31 D
4 39 D
4 -22 D
8 -69 D
2 -8 D
2 -2 D
2 1 D
10 69 D
4 16 D
4 36 D
2 6 D
8 -65 D
8 -25 D
10 -21 D
2 2 D
10 71 D
4 9 D
2 1 D
6 -12 D
2 1 D
2 3 D
2 0 D
8 -66 D
2 -5 D
10 58 D
2 2 D
8 -14 D
4 0 D
4 -6 D
2 0 D
6 34 D
2 0 D
6 -31 D
2 -1 D
2 1 D
2 -4 D
8 -49 D
4 -5 D
2 1 D
4 24 D
6 50 D
6 8 D
2 0 D
8 -24 D
2 -2 D
6 10 D
2 -1 D
6 -24 D
2 -2 D
4 3 D
2 0 D
8 -22 D
2 2 D
8 43 D
6 9 D
4 10 D
2 0 D
4 -7 D
6 14 D
2 -2 D
10 -63 D
2 -1 D
8 35 D
2 0 D
4 -8 D
2 2 D
4 12 D
2 1 D
4 -11 D
2 -1 D
2 3 D
2 1 D
6 -32 D
2 -2 D
6 19 D
4 -1 D
8 56 D
2 3 D
4 -8 D
4 -1 D
2 -3 D
8 -32 D
6 -16 D
2 -2 D
8 23 D
4 3 D
4 -1 D
8 -20 D
2 0 D
6 5 D
6 11 D
2 1 D
4 -7 D
2 1 D
4 6 D
6 -5 D
4 6 D
2 0 D
4 -5 D
2 -1 D
4 7 D
4 7 D
2 0 D
10 -10 D
2 0 D
6 11 D
2 -1 D
8 -27 D
2 -3 D
8 -3 D
2 -2 D
2 0 D
6 8 D
6 0 D
6 5 D
6 2 D
4 7 D
6 27 D
2 1 D
6 -20 D
2 1 D
4 11 D
2 1 D
6 -11 D
6 -2 D
4 5 D
2 1 D
4 -7 D
4 -9 D
4 -2 D
6 -9 D
8 15 D
6 -4 D
4 2 D
8 -10 D
6 7 D
8 5 D
8 10 D
4 3 D
6 -11 D
4 -7 D
4 -3 D
2 -3 D
4 1 D
4 6 D
4 1 D
6 -3 D
8 -18 D
8 -6 D
4 -6 D
4 1 D
8 12 D
8 22 D
2 0 D
4 -4 D
2 0 D
8 13 D
4 1 D
4 3 D
8 -13 D
4 1 D
6 8 D
2 1 D
6 -4 D
8 -25 D
2 1 D
8 25 D
2 3 D
6 -1 D
8 -5 D
4 -3 D
8 15 D
2 0 D
8 -9 D
6 -2 D
2 1 D
4 5 D
2 1 D
10 -16 D
6 1 D
6 -5 D
8 12 D
4 -1 D
8 -7 D
6 -2 D
6 2 D
6 -7 D
4 1 D
10 25 D
4 1 D
8 -9 D
2 0 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1832
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M2.54c) ($E) ($B) (-K) (-O) (-X2.6i)
(\>\>) ($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
-3120 3240 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X-2.6i -Y2.7i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1833
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 777 M
42 2 D
22 -1 D
4 1 D
22 -2 D
34 -2 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 2 D
2 -1 D
2 -3 D
2 -9 D
6 -178 D
2 -20 D
6 502 D
2 32 D
6 -386 D
4 92 D
2 5 D
6 -46 D
4 -47 D
4 111 D
2 -23 D
4 -297 D
2 7 D
4 358 D
2 65 D
4 -136 D
2 -10 D
4 89 D
2 -1 D
6 -212 D
6 233 D
2 -29 D
4 -198 D
2 -24 D
4 72 D
4 17 D
6 92 D
6 -96 D
2 19 D
4 103 D
2 -18 D
4 -116 D
6 206 D
2 -26 D
4 -144 D
4 26 D
6 -193 D
6 227 D
8 -158 D
2 6 D
6 275 D
2 16 D
6 -237 D
6 175 D
2 18 D
6 -229 D
2 -15 D
8 345 D
2 -35 D
6 -477 D
2 31 D
6 350 D
6 -219 D
2 -17 D
6 126 D
2 -12 D
4 -59 D
4 163 D
4 251 D
2 -31 D
6 -459 D
2 -27 D
4 112 D
2 16 D
6 -102 D
2 3 D
8 225 D
8 146 D
4 -103 D
6 -268 D
6 -123 D
2 -12 D
4 98 D
10 411 D
2 35 D
4 -103 D
4 -113 D
6 -117 D
4 -137 D
2 -19 D
10 424 D
6 138 D
2 -24 D
8 -618 D
2 37 D
6 381 D
2 50 D
2 -13 D
12 -337 D
4 -41 D
2 12 D
8 270 D
2 6 D
4 -45 D
10 370 D
2 -6 D
10 -494 D
6 -96 D
4 -120 D
2 -14 D
16 616 D
2 -17 D
6 -288 D
2 -23 D
4 59 D
2 -3 D
4 -85 D
2 -7 D
6 190 D
2 20 D
12 -154 D
2 -32 D
2 -10 D
4 20 D
4 8 D
8 149 D
6 -72 D
2 -5 D
4 22 D
2 1 D
2 -5 D
2 5 D
4 24 D
6 -123 D
2 -17 D
4 50 D
2 10 D
6 -70 D
6 46 D
4 4 D
6 118 D
2 42 D
2 10 D
10 -196 D
2 -12 D
4 33 D
6 78 D
2 0 D
2 -6 D
2 -1 D
2 3 D
2 1 D
6 -46 D
2 0 D
4 19 D
8 -64 D
4 -10 D
2 4 D
8 114 D
2 0 D
8 -62 D
2 -3 D
6 4 D
4 9 D
2 0 D
6 -33 D
2 -1 D
6 27 D
6 46 D
2 3 D
4 -27 D
6 -60 D
2 -3 D
6 11 D
4 27 D
6 82 D
2 5 D
2 -1 D
4 -11 D
6 -81 D
2 -11 D
4 22 D
2 -3 D
4 -48 D
2 -7 D
6 55 D
2 -4 D
4 -25 D
8 69 D
2 1 D
2 4 D
6 62 D
2 2 D
14 -133 D
4 -35 D
2 -3 D
6 -5 D
2 0 D
4 25 D
6 52 D
8 15 D
4 -17 D
4 -21 D
4 11 D
2 7 D
2 -1 D
4 -11 D
2 0 D
12 47 D
2 3 D
2 -2 D
4 -11 D
2 -1 D
4 6 D
2 -1 D
6 -7 D
4 -17 D
4 -23 D
4 19 D
4 23 D
2 -3 D
10 -52 D
4 -6 D
2 1 D
6 25 D
4 17 D
4 9 D
4 23 D
2 3 D
8 -39 D
6 -13 D
12 -15 D
2 1 D
10 43 D
4 6 D
2 0 D
6 -7 D
2 0 D
2 2 D
2 0 D
8 -40 D
2 -3 D
10 35 D
2 2 D
6 -8 D
6 -1 D
4 -4 D
2 1 D
6 20 D
2 0 D
6 -19 D
4 0 D
2 -2 D
8 -30 D
4 -3 D
2 0 D
6 29 D
4 17 D
6 4 D
2 0 D
8 -14 D
2 -1 D
2 1 D
4 5 D
2 -1 D
6 -14 D
4 -1 D
4 1 D
4 -5 D
4 -8 D
2 1 D
8 26 D
4 3 D
6 8 D
2 0 D
4 -3 D
2 1 D
4 7 D
2 -1 D
10 -38 D
2 -1 D
8 21 D
2 0 D
4 -5 D
2 1 D
4 8 D
2 0 D
4 -6 D
2 -1 D
2 2 D
2 0 D
6 -19 D
2 -1 D
6 12 D
4 -1 D
8 34 D
2 2 D
4 -5 D
4 -1 D
4 -7 D
6 -14 D
6 -10 D
2 -1 D
8 14 D
6 2 D
2 -1 D
8 -12 D
8 3 D
6 7 D
2 0 D
4 -4 D
6 4 D
6 -3 D
4 4 D
4 -1 D
4 -3 D
8 9 D
4 -1 D
8 -5 D
4 1 D
4 5 D
2 0 D
8 -16 D
4 -3 D
6 -1 D
4 -1 D
8 5 D
2 -1 D
4 1 D
2 2 D
10 3 D
8 19 D
2 1 D
6 -12 D
2 0 D
4 7 D
2 1 D
6 -7 D
6 -1 D
4 3 D
4 -1 D
6 -8 D
6 -4 D
4 -3 D
6 8 D
2 1 D
6 -2 D
4 1 D
8 -6 D
8 5 D
6 2 D
6 5 D
6 3 D
2 -1 D
6 -9 D
4 -1 D
6 -4 D
6 5 D
10 -1 D
8 -12 D
8 -3 D
4 -4 D
6 2 D
6 6 D
8 13 D
8 -2 D
6 7 D
10 3 D
4 -3 D
2 -3 D
4 -2 D
8 6 D
6 -1 D
4 -3 D
6 -13 D
2 0 D
8 16 D
4 2 D
14 -5 D
2 -1 D
2 1 D
6 8 D
4 -1 D
6 -4 D
8 -1 D
6 4 D
8 -9 D
4 -1 D
4 1 D
6 -3 D
8 7 D
16 -6 D
8 1 D
6 -4 D
4 1 D
10 14 D
4 1 D
8 -5 D
2 0 D
S
292 1577 M
42 2 D
22 -1 D
4 1 D
22 -2 D
34 -2 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 2 D
2 -1 D
2 -3 D
2 -9 D
6 -178 D
2 -20 D
6 502 D
2 32 D
6 -386 D
4 92 D
2 5 D
6 -46 D
4 -47 D
4 111 D
2 -23 D
4 -297 D
2 7 D
4 358 D
2 65 D
4 -136 D
2 -10 D
4 89 D
2 -1 D
6 -212 D
6 233 D
2 -29 D
4 -198 D
2 -24 D
4 72 D
4 17 D
6 92 D
6 -96 D
2 19 D
4 103 D
2 -18 D
4 -116 D
6 206 D
2 -26 D
4 -144 D
4 26 D
6 -193 D
6 227 D
8 -158 D
2 6 D
6 275 D
2 16 D
6 -237 D
6 175 D
2 18 D
6 -229 D
2 -15 D
8 345 D
2 -35 D
6 -477 D
2 31 D
6 350 D
6 -219 D
2 -17 D
6 126 D
2 -12 D
4 -59 D
4 163 D
4 251 D
2 -31 D
6 -459 D
2 -27 D
4 112 D
2 16 D
6 -102 D
2 3 D
8 225 D
8 146 D
4 -103 D
6 -268 D
6 -123 D
2 -12 D
4 98 D
10 411 D
2 35 D
4 -103 D
4 -113 D
6 -117 D
4 -137 D
2 -19 D
10 424 D
6 138 D
2 -24 D
8 -618 D
2 37 D
6 381 D
2 50 D
2 -13 D
12 -337 D
4 -41 D
2 12 D
8 270 D
2 6 D
4 -45 D
10 370 D
2 -6 D
10 -494 D
6 -96 D
4 -120 D
2 -14 D
16 616 D
2 -17 D
6 -288 D
2 -23 D
4 59 D
2 -3 D
4 -85 D
2 -7 D
6 190 D
2 20 D
12 -154 D
2 -32 D
2 -10 D
4 20 D
4 8 D
8 149 D
6 -72 D
2 -5 D
4 22 D
2 1 D
2 -5 D
2 5 D
4 24 D
6 -123 D
2 -17 D
4 50 D
2 10 D
6 -70 D
6 46 D
4 4 D
6 118 D
2 42 D
2 10 D
10 -196 D
2 -12 D
4 33 D
6 78 D
2 0 D
2 -6 D
2 -1 D
2 3 D
2 1 D
6 -46 D
2 0 D
4 19 D
8 -64 D
4 -10 D
2 4 D
8 114 D
2 0 D
8 -62 D
2 -3 D
6 4 D
4 9 D
2 0 D
6 -33 D
2 -1 D
6 27 D
6 46 D
2 3 D
4 -27 D
6 -60 D
2 -3 D
6 11 D
4 27 D
6 82 D
2 5 D
2 -1 D
4 -11 D
6 -81 D
2 -11 D
4 22 D
2 -3 D
4 -48 D
2 -7 D
6 55 D
2 -4 D
4 -25 D
8 69 D
2 1 D
2 4 D
6 62 D
2 2 D
14 -133 D
4 -35 D
2 -3 D
6 -5 D
2 0 D
4 25 D
6 52 D
8 15 D
4 -17 D
4 -21 D
4 11 D
2 7 D
2 -1 D
4 -11 D
2 0 D
12 47 D
2 3 D
2 -2 D
4 -11 D
2 -1 D
4 6 D
2 -1 D
6 -7 D
4 -17 D
4 -23 D
4 19 D
4 23 D
2 -3 D
10 -52 D
4 -6 D
2 1 D
6 25 D
4 17 D
4 9 D
4 23 D
2 3 D
8 -39 D
6 -13 D
12 -15 D
2 1 D
10 43 D
4 6 D
2 0 D
6 -7 D
2 0 D
2 2 D
2 0 D
8 -40 D
2 -3 D
10 35 D
2 2 D
6 -8 D
6 -1 D
4 -4 D
2 1 D
6 20 D
2 0 D
6 -19 D
4 0 D
2 -2 D
8 -30 D
4 -3 D
2 0 D
6 29 D
4 17 D
6 4 D
2 0 D
8 -14 D
2 -1 D
2 1 D
4 5 D
2 -1 D
6 -14 D
4 -1 D
4 1 D
4 -5 D
4 -8 D
2 1 D
8 26 D
4 3 D
6 8 D
2 0 D
4 -3 D
2 1 D
4 7 D
2 -1 D
10 -38 D
2 -1 D
8 21 D
2 0 D
4 -5 D
2 1 D
4 8 D
2 0 D
4 -6 D
2 -1 D
2 2 D
2 0 D
6 -19 D
2 -1 D
6 12 D
4 -1 D
8 34 D
2 2 D
4 -5 D
4 -1 D
4 -7 D
6 -14 D
6 -10 D
2 -1 D
8 14 D
6 2 D
2 -1 D
8 -12 D
8 3 D
6 7 D
2 0 D
4 -4 D
6 4 D
6 -3 D
4 4 D
4 -1 D
4 -3 D
8 9 D
4 -1 D
8 -5 D
4 1 D
4 5 D
2 0 D
8 -16 D
4 -3 D
6 -1 D
4 -1 D
8 5 D
2 -1 D
4 1 D
2 2 D
10 3 D
8 19 D
2 1 D
6 -12 D
2 0 D
4 7 D
2 1 D
6 -7 D
6 -1 D
4 3 D
4 -1 D
6 -8 D
6 -4 D
4 -3 D
6 8 D
2 1 D
6 -2 D
4 1 D
8 -6 D
8 5 D
6 2 D
6 5 D
6 3 D
2 -1 D
6 -9 D
4 -1 D
6 -4 D
6 5 D
10 -1 D
8 -12 D
8 -3 D
4 -4 D
6 2 D
6 6 D
8 13 D
8 -2 D
6 7 D
10 3 D
4 -3 D
2 -3 D
4 -2 D
8 6 D
6 -1 D
4 -3 D
6 -13 D
2 0 D
8 16 D
4 2 D
14 -5 D
2 -1 D
2 1 D
6 8 D
4 -1 D
6 -4 D
8 -1 D
6 4 D
8 -9 D
4 -1 D
4 1 D
6 -3 D
8 7 D
16 -6 D
8 1 D
6 -4 D
4 1 D
10 14 D
4 1 D
8 -5 D
2 0 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1833
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 13 def
/PSL_n1 12 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M0.5/0) ($E) ($B) (-K) (-O) (-X-2.6i)
(-Y2.7i) (\>\>) ($\{PS\})
13 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167 167
13 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 1 0
13 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 13 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 13 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
3120 0 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X2.6i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1834
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 783 M
22 1 D
4 -1 D
20 1 D
12 -1 D
18 1 D
34 -2 D
14 -1 D
16 1 D
4 -1 D
8 1 D
2 -1 D
6 1 D
14 -1 D
6 1 D
6 -1 D
14 1 D
4 -10 D
4 -70 D
2 -63 D
2 -15 D
6 375 D
2 24 D
6 -288 D
4 68 D
2 5 D
6 -35 D
4 -35 D
4 83 D
2 -17 D
4 -222 D
2 5 D
4 268 D
2 48 D
4 -101 D
2 -8 D
4 66 D
2 0 D
6 -158 D
6 173 D
2 -21 D
4 -148 D
2 -18 D
4 54 D
2 9 D
2 3 D
6 69 D
6 -72 D
4 58 D
2 33 D
2 -13 D
4 -87 D
6 154 D
2 -19 D
4 -108 D
4 19 D
6 -143 D
6 169 D
8 -118 D
2 5 D
6 205 D
2 12 D
6 -177 D
6 130 D
2 14 D
6 -171 D
2 -11 D
8 258 D
2 -27 D
6 -356 D
2 24 D
6 260 D
6 -162 D
2 -13 D
6 94 D
2 -9 D
4 -44 D
4 121 D
4 187 D
2 -23 D
6 -342 D
2 -20 D
4 83 D
2 13 D
6 -77 D
2 3 D
8 167 D
8 109 D
2 -19 D
8 -258 D
6 -92 D
2 -8 D
4 73 D
10 306 D
2 27 D
8 -162 D
6 -87 D
4 -102 D
2 -14 D
10 316 D
6 103 D
2 -18 D
8 -461 D
2 27 D
6 285 D
2 37 D
2 -9 D
12 -252 D
4 -31 D
2 9 D
8 202 D
2 4 D
4 -33 D
10 276 D
2 -5 D
10 -368 D
6 -72 D
4 -89 D
2 -11 D
16 460 D
2 -13 D
6 -214 D
2 -18 D
4 44 D
2 -2 D
4 -64 D
2 -5 D
6 142 D
2 15 D
12 -115 D
2 -24 D
2 -8 D
4 16 D
4 6 D
8 110 D
6 -53 D
2 -4 D
4 17 D
2 1 D
2 -4 D
2 4 D
4 17 D
6 -91 D
2 -13 D
6 45 D
6 -53 D
6 35 D
4 2 D
8 120 D
2 7 D
10 -146 D
2 -8 D
2 6 D
8 76 D
2 0 D
2 -4 D
2 -1 D
4 3 D
6 -34 D
2 -1 D
4 15 D
8 -48 D
4 -8 D
2 4 D
8 84 D
2 1 D
8 -47 D
2 -2 D
6 3 D
4 7 D
2 0 D
6 -25 D
2 0 D
6 20 D
6 34 D
2 2 D
4 -20 D
6 -45 D
2 -2 D
8 14 D
8 76 D
2 4 D
4 -4 D
4 -21 D
4 -45 D
2 -8 D
4 16 D
2 -2 D
4 -36 D
2 -5 D
6 41 D
2 -3 D
4 -18 D
2 6 D
6 45 D
4 3 D
6 47 D
2 1 D
14 -99 D
4 -26 D
2 -3 D
2 0 D
4 -3 D
2 0 D
4 19 D
6 38 D
6 10 D
2 1 D
2 -3 D
6 -25 D
2 2 D
4 12 D
2 -1 D
4 -8 D
2 0 D
6 17 D
6 18 D
2 2 D
2 -1 D
4 -9 D
2 -1 D
4 5 D
8 -6 D
8 -29 D
2 3 D
6 28 D
4 -10 D
8 -31 D
2 -4 D
2 -1 D
2 1 D
4 10 D
6 21 D
4 7 D
4 17 D
2 3 D
8 -30 D
8 -12 D
10 -9 D
2 1 D
10 32 D
6 5 D
6 -6 D
2 0 D
2 2 D
2 0 D
8 -30 D
2 -2 D
10 26 D
2 1 D
2 -1 D
4 -5 D
6 0 D
4 -3 D
2 0 D
6 15 D
2 0 D
6 -14 D
4 0 D
4 -7 D
6 -17 D
6 -2 D
10 34 D
4 3 D
6 -1 D
6 -9 D
2 -1 D
6 4 D
2 0 D
6 -11 D
2 -1 D
4 2 D
6 -4 D
4 -6 D
2 0 D
8 20 D
6 4 D
2 3 D
4 1 D
4 -3 D
6 7 D
2 -1 D
10 -29 D
2 0 D
2 2 D
6 14 D
2 0 D
4 -4 D
2 1 D
4 5 D
2 1 D
4 -5 D
2 -1 D
2 2 D
2 0 D
6 -14 D
2 -1 D
6 9 D
4 -1 D
8 26 D
2 1 D
4 -4 D
4 0 D
10 -16 D
6 -8 D
2 0 D
8 10 D
8 1 D
6 -8 D
4 -1 D
8 3 D
4 4 D
8 -2 D
6 2 D
4 -2 D
4 3 D
8 -3 D
2 1 D
4 5 D
2 1 D
14 -5 D
6 5 D
2 0 D
8 -12 D
2 -2 D
12 -2 D
4 3 D
4 1 D
2 -1 D
10 3 D
6 2 D
8 14 D
2 0 D
6 -9 D
2 1 D
4 5 D
4 -1 D
2 -3 D
8 -2 D
4 3 D
4 -1 D
8 -7 D
2 0 D
6 -4 D
2 1 D
4 5 D
2 1 D
6 -2 D
4 1 D
8 -5 D
26 11 D
2 0 D
6 -7 D
10 -3 D
2 0 D
4 3 D
10 -1 D
10 -9 D
6 -2 D
4 -3 D
10 4 D
8 11 D
4 1 D
4 -2 D
10 6 D
8 2 D
8 -6 D
12 5 D
6 -2 D
8 -11 D
2 0 D
10 13 D
14 -3 D
4 -1 D
4 2 D
4 5 D
4 -1 D
6 -4 D
10 1 D
4 2 D
8 -7 D
10 -1 D
6 -1 D
6 5 D
6 -1 D
10 -3 D
10 0 D
4 -3 D
4 1 D
10 11 D
2 1 D
12 -5 D
S
292 1583 M
22 1 D
4 -1 D
20 1 D
12 -1 D
18 1 D
34 -2 D
14 -1 D
16 1 D
4 -1 D
8 1 D
2 -1 D
6 1 D
14 -1 D
6 1 D
6 -1 D
14 1 D
4 -10 D
4 -70 D
2 -63 D
2 -15 D
6 375 D
2 24 D
6 -288 D
4 68 D
2 5 D
6 -35 D
4 -35 D
4 83 D
2 -17 D
4 -222 D
2 5 D
4 268 D
2 48 D
4 -101 D
2 -8 D
4 66 D
2 0 D
6 -158 D
6 173 D
2 -21 D
4 -148 D
2 -18 D
4 54 D
2 9 D
2 3 D
6 69 D
6 -72 D
4 58 D
2 33 D
2 -13 D
4 -87 D
6 154 D
2 -19 D
4 -108 D
4 19 D
6 -143 D
6 169 D
8 -118 D
2 5 D
6 205 D
2 12 D
6 -177 D
6 130 D
2 14 D
6 -171 D
2 -11 D
8 258 D
2 -27 D
6 -356 D
2 24 D
6 260 D
6 -162 D
2 -13 D
6 94 D
2 -9 D
4 -44 D
4 121 D
4 187 D
2 -23 D
6 -342 D
2 -20 D
4 83 D
2 13 D
6 -77 D
2 3 D
8 167 D
8 109 D
2 -19 D
8 -258 D
6 -92 D
2 -8 D
4 73 D
10 306 D
2 27 D
8 -162 D
6 -87 D
4 -102 D
2 -14 D
10 316 D
6 103 D
2 -18 D
8 -461 D
2 27 D
6 285 D
2 37 D
2 -9 D
12 -252 D
4 -31 D
2 9 D
8 202 D
2 4 D
4 -33 D
10 276 D
2 -5 D
10 -368 D
6 -72 D
4 -89 D
2 -11 D
16 460 D
2 -13 D
6 -214 D
2 -18 D
4 44 D
2 -2 D
4 -64 D
2 -5 D
6 142 D
2 15 D
12 -115 D
2 -24 D
2 -8 D
4 16 D
4 6 D
8 110 D
6 -53 D
2 -4 D
4 17 D
2 1 D
2 -4 D
2 4 D
4 17 D
6 -91 D
2 -13 D
6 45 D
6 -53 D
6 35 D
4 2 D
8 120 D
2 7 D
10 -146 D
2 -8 D
2 6 D
8 76 D
2 0 D
2 -4 D
2 -1 D
4 3 D
6 -34 D
2 -1 D
4 15 D
8 -48 D
4 -8 D
2 4 D
8 84 D
2 1 D
8 -47 D
2 -2 D
6 3 D
4 7 D
2 0 D
6 -25 D
2 0 D
6 20 D
6 34 D
2 2 D
4 -20 D
6 -45 D
2 -2 D
8 14 D
8 76 D
2 4 D
4 -4 D
4 -21 D
4 -45 D
2 -8 D
4 16 D
2 -2 D
4 -36 D
2 -5 D
6 41 D
2 -3 D
4 -18 D
2 6 D
6 45 D
4 3 D
6 47 D
2 1 D
14 -99 D
4 -26 D
2 -3 D
2 0 D
4 -3 D
2 0 D
4 19 D
6 38 D
6 10 D
2 1 D
2 -3 D
6 -25 D
2 2 D
4 12 D
2 -1 D
4 -8 D
2 0 D
6 17 D
6 18 D
2 2 D
2 -1 D
4 -9 D
2 -1 D
4 5 D
8 -6 D
8 -29 D
2 3 D
6 28 D
4 -10 D
8 -31 D
2 -4 D
2 -1 D
2 1 D
4 10 D
6 21 D
4 7 D
4 17 D
2 3 D
8 -30 D
8 -12 D
10 -9 D
2 1 D
10 32 D
6 5 D
6 -6 D
2 0 D
2 2 D
2 0 D
8 -30 D
2 -2 D
10 26 D
2 1 D
2 -1 D
4 -5 D
6 0 D
4 -3 D
2 0 D
6 15 D
2 0 D
6 -14 D
4 0 D
4 -7 D
6 -17 D
6 -2 D
10 34 D
4 3 D
6 -1 D
6 -9 D
2 -1 D
6 4 D
2 0 D
6 -11 D
2 -1 D
4 2 D
6 -4 D
4 -6 D
2 0 D
8 20 D
6 4 D
2 3 D
4 1 D
4 -3 D
6 7 D
2 -1 D
10 -29 D
2 0 D
2 2 D
6 14 D
2 0 D
4 -4 D
2 1 D
4 5 D
2 1 D
4 -5 D
2 -1 D
2 2 D
2 0 D
6 -14 D
2 -1 D
6 9 D
4 -1 D
8 26 D
2 1 D
4 -4 D
4 0 D
10 -16 D
6 -8 D
2 0 D
8 10 D
8 1 D
6 -8 D
4 -1 D
8 3 D
4 4 D
8 -2 D
6 2 D
4 -2 D
4 3 D
8 -3 D
2 1 D
4 5 D
2 1 D
14 -5 D
6 5 D
2 0 D
8 -12 D
2 -2 D
12 -2 D
4 3 D
4 1 D
2 -1 D
10 3 D
6 2 D
8 14 D
2 0 D
6 -9 D
2 1 D
4 5 D
4 -1 D
2 -3 D
8 -2 D
4 3 D
4 -1 D
8 -7 D
2 0 D
6 -4 D
2 1 D
4 5 D
2 1 D
6 -2 D
4 1 D
8 -5 D
26 11 D
2 0 D
6 -7 D
10 -3 D
2 0 D
4 3 D
10 -1 D
10 -9 D
6 -2 D
4 -3 D
10 4 D
8 11 D
4 1 D
4 -2 D
10 6 D
8 2 D
8 -6 D
12 5 D
6 -2 D
8 -11 D
2 0 D
10 13 D
14 -3 D
4 -1 D
4 2 D
4 5 D
4 -1 D
6 -4 D
10 1 D
4 2 D
8 -7 D
10 -1 D
6 -1 D
6 5 D
6 -1 D
10 -3 D
10 0 D
4 -3 D
4 1 D
10 11 D
2 1 D
12 -5 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1834
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M1e-3/1) ($E) ($B) (-K) (-O) (-X2.6i)
(\>\>) ($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
-3120 3240 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X-2.6i -Y2.7i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1835
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 767 M
6 -1 D
10 2 D
28 1 D
18 -1 D
12 1 D
10 -3 D
6 1 D
28 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -6 D
2 -14 D
4 -136 D
2 -120 D
2 -29 D
6 724 D
2 46 D
6 -557 D
4 133 D
2 8 D
6 -67 D
4 -68 D
4 161 D
2 -34 D
4 -428 D
2 10 D
4 516 D
2 94 D
4 -196 D
2 -14 D
4 128 D
2 -2 D
6 -305 D
6 335 D
2 -41 D
4 -286 D
2 -34 D
4 103 D
4 25 D
6 132 D
6 -138 D
2 28 D
4 148 D
2 -26 D
4 -168 D
6 297 D
2 -36 D
4 -208 D
4 37 D
6 -278 D
6 328 D
8 -229 D
2 9 D
6 397 D
2 22 D
6 -340 D
6 251 D
2 26 D
6 -330 D
2 -21 D
8 497 D
2 -50 D
6 -688 D
2 45 D
6 504 D
6 -315 D
2 -25 D
6 182 D
2 -17 D
4 -86 D
4 235 D
4 362 D
2 -45 D
6 -661 D
2 -39 D
4 161 D
2 24 D
6 -148 D
2 5 D
8 323 D
8 211 D
2 -37 D
8 -498 D
6 -177 D
2 -17 D
4 141 D
10 592 D
2 51 D
4 -149 D
4 -163 D
6 -168 D
4 -198 D
2 -26 D
10 610 D
6 199 D
2 -35 D
8 -891 D
2 54 D
6 550 D
2 71 D
2 -18 D
12 -485 D
4 -60 D
2 17 D
8 390 D
2 8 D
4 -64 D
10 533 D
2 -10 D
10 -711 D
6 -138 D
4 -174 D
2 -19 D
16 887 D
2 -24 D
6 -415 D
2 -33 D
4 85 D
2 -4 D
4 -124 D
2 -10 D
6 275 D
2 28 D
12 -221 D
4 -62 D
4 30 D
4 11 D
8 214 D
6 -103 D
2 -7 D
4 32 D
2 2 D
2 -8 D
6 41 D
6 -176 D
2 -25 D
6 87 D
6 -102 D
6 67 D
4 5 D
8 230 D
2 15 D
10 -283 D
2 -16 D
4 47 D
6 112 D
2 0 D
2 -8 D
2 -2 D
2 5 D
2 1 D
6 -65 D
2 -2 D
4 28 D
8 -92 D
4 -15 D
2 7 D
8 163 D
2 1 D
8 -90 D
2 -4 D
4 3 D
6 16 D
2 0 D
6 -48 D
2 -1 D
6 39 D
6 66 D
2 5 D
6 -72 D
4 -54 D
2 -5 D
6 17 D
4 39 D
6 118 D
2 7 D
4 -6 D
4 -41 D
4 -88 D
2 -15 D
4 31 D
2 -4 D
4 -68 D
2 -11 D
6 79 D
2 -6 D
4 -35 D
4 47 D
4 52 D
4 7 D
6 90 D
2 3 D
14 -193 D
4 -50 D
2 -5 D
4 -3 D
2 -3 D
2 0 D
4 36 D
6 74 D
8 22 D
4 -25 D
4 -30 D
2 4 D
4 23 D
2 -2 D
4 -16 D
2 0 D
12 68 D
2 4 D
2 -2 D
4 -17 D
2 -1 D
4 8 D
2 -1 D
6 -9 D
8 -58 D
4 27 D
4 34 D
4 -19 D
8 -60 D
4 -10 D
2 2 D
10 60 D
4 14 D
4 32 D
2 5 D
8 -57 D
8 -22 D
10 -18 D
2 1 D
10 63 D
4 8 D
2 0 D
6 -11 D
2 1 D
2 3 D
2 0 D
8 -58 D
2 -3 D
10 50 D
2 2 D
6 -11 D
6 -2 D
4 -5 D
2 0 D
6 30 D
2 0 D
6 -27 D
2 -1 D
2 1 D
4 -14 D
6 -33 D
4 -4 D
2 0 D
4 22 D
6 44 D
4 5 D
4 1 D
8 -21 D
2 -1 D
2 1 D
4 8 D
2 -1 D
6 -21 D
2 -2 D
4 3 D
2 0 D
8 -19 D
2 1 D
8 38 D
4 4 D
6 12 D
2 0 D
4 -6 D
6 12 D
2 -1 D
10 -55 D
2 -1 D
8 31 D
2 -1 D
4 -7 D
4 7 D
2 6 D
2 0 D
4 -9 D
2 -1 D
2 3 D
2 0 D
6 -27 D
2 -2 D
6 17 D
2 -2 D
2 0 D
8 50 D
2 2 D
4 -7 D
4 -1 D
4 -10 D
6 -21 D
8 -15 D
8 20 D
4 3 D
4 -1 D
8 -18 D
2 0 D
4 4 D
2 0 D
6 10 D
2 1 D
4 -6 D
4 3 D
2 3 D
2 -1 D
2 -3 D
2 0 D
4 5 D
2 0 D
4 -5 D
2 0 D
8 12 D
2 0 D
10 -9 D
2 0 D
6 10 D
2 -1 D
8 -23 D
2 -3 D
12 -4 D
4 5 D
4 2 D
2 -1 D
8 5 D
6 2 D
4 6 D
6 23 D
2 1 D
6 -18 D
2 1 D
4 10 D
2 1 D
6 -10 D
6 -1 D
6 5 D
8 -14 D
4 -2 D
4 -6 D
2 -1 D
8 12 D
6 -3 D
4 1 D
2 -1 D
4 -6 D
2 -1 D
2 1 D
4 5 D
6 2 D
6 8 D
8 6 D
10 -16 D
4 -2 D
2 -3 D
4 1 D
4 5 D
4 1 D
6 -3 D
8 -16 D
8 -5 D
4 -5 D
4 1 D
8 10 D
8 19 D
4 -1 D
2 -2 D
2 0 D
8 12 D
4 0 D
4 3 D
8 -11 D
2 -1 D
8 9 D
4 0 D
4 -3 D
8 -22 D
2 1 D
8 21 D
2 3 D
10 -2 D
6 -5 D
4 1 D
6 12 D
2 0 D
6 -7 D
8 -3 D
8 6 D
10 -14 D
6 1 D
6 -4 D
2 1 D
6 9 D
6 -2 D
6 -5 D
8 -1 D
4 1 D
2 -1 D
4 -5 D
4 1 D
10 21 D
2 2 D
4 -2 D
2 -3 D
4 -3 D
2 0 D
S
292 1567 M
6 -1 D
10 2 D
28 1 D
18 -1 D
12 1 D
10 -3 D
6 1 D
28 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -6 D
2 -14 D
4 -136 D
2 -120 D
2 -29 D
6 724 D
2 46 D
6 -557 D
4 133 D
2 8 D
6 -67 D
4 -68 D
4 161 D
2 -34 D
4 -428 D
2 10 D
4 516 D
2 94 D
4 -196 D
2 -14 D
4 128 D
2 -2 D
6 -305 D
6 335 D
2 -41 D
4 -286 D
2 -34 D
4 103 D
4 25 D
6 132 D
6 -138 D
2 28 D
4 148 D
2 -26 D
4 -168 D
6 297 D
2 -36 D
4 -208 D
4 37 D
6 -278 D
6 328 D
8 -229 D
2 9 D
6 397 D
2 22 D
6 -340 D
6 251 D
2 26 D
6 -330 D
2 -21 D
8 497 D
2 -50 D
6 -688 D
2 45 D
6 504 D
6 -315 D
2 -25 D
6 182 D
2 -17 D
4 -86 D
4 235 D
4 362 D
2 -45 D
6 -661 D
2 -39 D
4 161 D
2 24 D
6 -148 D
2 5 D
8 323 D
8 211 D
2 -37 D
8 -498 D
6 -177 D
2 -17 D
4 141 D
10 592 D
2 51 D
4 -149 D
4 -163 D
6 -168 D
4 -198 D
2 -26 D
10 610 D
6 199 D
2 -35 D
8 -891 D
2 54 D
6 550 D
2 71 D
2 -18 D
12 -485 D
4 -60 D
2 17 D
8 390 D
2 8 D
4 -64 D
10 533 D
2 -10 D
10 -711 D
6 -138 D
4 -174 D
2 -19 D
16 887 D
2 -24 D
6 -415 D
2 -33 D
4 85 D
2 -4 D
4 -124 D
2 -10 D
6 275 D
2 28 D
12 -221 D
4 -62 D
4 30 D
4 11 D
8 214 D
6 -103 D
2 -7 D
4 32 D
2 2 D
2 -8 D
6 41 D
6 -176 D
2 -25 D
6 87 D
6 -102 D
6 67 D
4 5 D
8 230 D
2 15 D
10 -283 D
2 -16 D
4 47 D
6 112 D
2 0 D
2 -8 D
2 -2 D
2 5 D
2 1 D
6 -65 D
2 -2 D
4 28 D
8 -92 D
4 -15 D
2 7 D
8 163 D
2 1 D
8 -90 D
2 -4 D
4 3 D
6 16 D
2 0 D
6 -48 D
2 -1 D
6 39 D
6 66 D
2 5 D
6 -72 D
4 -54 D
2 -5 D
6 17 D
4 39 D
6 118 D
2 7 D
4 -6 D
4 -41 D
4 -88 D
2 -15 D
4 31 D
2 -4 D
4 -68 D
2 -11 D
6 79 D
2 -6 D
4 -35 D
4 47 D
4 52 D
4 7 D
6 90 D
2 3 D
14 -193 D
4 -50 D
2 -5 D
4 -3 D
2 -3 D
2 0 D
4 36 D
6 74 D
8 22 D
4 -25 D
4 -30 D
2 4 D
4 23 D
2 -2 D
4 -16 D
2 0 D
12 68 D
2 4 D
2 -2 D
4 -17 D
2 -1 D
4 8 D
2 -1 D
6 -9 D
8 -58 D
4 27 D
4 34 D
4 -19 D
8 -60 D
4 -10 D
2 2 D
10 60 D
4 14 D
4 32 D
2 5 D
8 -57 D
8 -22 D
10 -18 D
2 1 D
10 63 D
4 8 D
2 0 D
6 -11 D
2 1 D
2 3 D
2 0 D
8 -58 D
2 -3 D
10 50 D
2 2 D
6 -11 D
6 -2 D
4 -5 D
2 0 D
6 30 D
2 0 D
6 -27 D
2 -1 D
2 1 D
4 -14 D
6 -33 D
4 -4 D
2 0 D
4 22 D
6 44 D
4 5 D
4 1 D
8 -21 D
2 -1 D
2 1 D
4 8 D
2 -1 D
6 -21 D
2 -2 D
4 3 D
2 0 D
8 -19 D
2 1 D
8 38 D
4 4 D
6 12 D
2 0 D
4 -6 D
6 12 D
2 -1 D
10 -55 D
2 -1 D
8 31 D
2 -1 D
4 -7 D
4 7 D
2 6 D
2 0 D
4 -9 D
2 -1 D
2 3 D
2 0 D
6 -27 D
2 -2 D
6 17 D
2 -2 D
2 0 D
8 50 D
2 2 D
4 -7 D
4 -1 D
4 -10 D
6 -21 D
8 -15 D
8 20 D
4 3 D
4 -1 D
8 -18 D
2 0 D
4 4 D
2 0 D
6 10 D
2 1 D
4 -6 D
4 3 D
2 3 D
2 -1 D
2 -3 D
2 0 D
4 5 D
2 0 D
4 -5 D
2 0 D
8 12 D
2 0 D
10 -9 D
2 0 D
6 10 D
2 -1 D
8 -23 D
2 -3 D
12 -4 D
4 5 D
4 2 D
2 -1 D
8 5 D
6 2 D
4 6 D
6 23 D
2 1 D
6 -18 D
2 1 D
4 10 D
2 1 D
6 -10 D
6 -1 D
6 5 D
8 -14 D
4 -2 D
4 -6 D
2 -1 D
8 12 D
6 -3 D
4 1 D
2 -1 D
4 -6 D
2 -1 D
2 1 D
4 5 D
6 2 D
6 8 D
8 6 D
10 -16 D
4 -2 D
2 -3 D
4 1 D
4 5 D
4 1 D
6 -3 D
8 -16 D
8 -5 D
4 -5 D
4 1 D
8 10 D
8 19 D
4 -1 D
2 -2 D
2 0 D
8 12 D
4 0 D
4 3 D
8 -11 D
2 -1 D
8 9 D
4 0 D
4 -3 D
8 -22 D
2 1 D
8 21 D
2 3 D
10 -2 D
6 -5 D
4 1 D
6 12 D
2 0 D
6 -7 D
8 -3 D
8 6 D
10 -14 D
6 1 D
6 -4 D
2 1 D
6 9 D
6 -2 D
6 -5 D
8 -1 D
4 1 D
2 -1 D
4 -5 D
4 1 D
10 21 D
2 2 D
4 -2 D
2 -3 D
4 -3 D
2 0 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1835
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 13 def
/PSL_n1 12 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M1e-4/1.5) ($E) ($B) (-K) (-O)
(-X-2.6i) (-Y2.7i) (\>\>) ($\{PS\})
13 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167 167
13 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 1 0
13 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 13 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 13 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
3120 0 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -P -B2/1WSne -K -O -X2.6i
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1836
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
292 768 M
44 2 D
18 -1 D
12 1 D
10 -2 D
34 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -6 D
2 -13 D
4 -131 D
2 -117 D
2 -27 D
6 699 D
2 44 D
6 -538 D
4 128 D
2 8 D
6 -64 D
4 -66 D
4 155 D
2 -32 D
4 -414 D
2 10 D
4 499 D
2 90 D
4 -189 D
2 -14 D
4 124 D
2 -2 D
6 -294 D
6 323 D
2 -40 D
4 -276 D
2 -32 D
4 99 D
2 18 D
2 6 D
6 128 D
6 -133 D
2 26 D
4 143 D
2 -25 D
4 -162 D
6 287 D
2 -35 D
4 -201 D
4 36 D
6 -269 D
6 317 D
8 -221 D
2 9 D
6 383 D
2 22 D
6 -329 D
6 242 D
2 25 D
6 -318 D
2 -21 D
8 481 D
2 -49 D
6 -664 D
2 43 D
6 487 D
6 -304 D
2 -25 D
6 176 D
2 -17 D
4 -82 D
4 227 D
4 349 D
2 -43 D
6 -639 D
2 -37 D
4 155 D
2 23 D
6 -143 D
2 5 D
8 312 D
8 204 D
4 -143 D
6 -373 D
6 -171 D
2 -17 D
4 136 D
10 572 D
2 49 D
8 -301 D
6 -163 D
4 -190 D
2 -26 D
10 589 D
6 192 D
2 -33 D
8 -860 D
2 52 D
6 531 D
2 68 D
2 -17 D
12 -469 D
4 -58 D
2 17 D
8 377 D
2 7 D
4 -62 D
10 515 D
2 -9 D
10 -687 D
6 -133 D
4 -168 D
2 -19 D
16 857 D
2 -24 D
6 -400 D
2 -32 D
4 82 D
2 -4 D
4 -119 D
2 -10 D
6 265 D
2 27 D
12 -213 D
2 -45 D
2 -14 D
4 28 D
4 11 D
8 207 D
6 -100 D
2 -7 D
4 31 D
2 2 D
2 -7 D
2 7 D
4 32 D
6 -170 D
2 -24 D
6 83 D
6 -97 D
6 64 D
4 5 D
8 222 D
2 15 D
10 -273 D
2 -16 D
4 45 D
6 108 D
2 1 D
2 -8 D
2 -2 D
2 5 D
2 0 D
6 -63 D
2 -1 D
4 27 D
8 -89 D
4 -14 D
2 6 D
8 158 D
2 0 D
8 -86 D
2 -4 D
6 5 D
4 13 D
2 0 D
6 -46 D
2 -1 D
6 38 D
6 63 D
2 5 D
6 -70 D
4 -52 D
2 -4 D
6 16 D
4 38 D
6 114 D
2 7 D
4 -7 D
4 -39 D
4 -85 D
2 -14 D
4 30 D
2 -4 D
4 -66 D
2 -11 D
6 76 D
2 -5 D
4 -34 D
4 46 D
4 49 D
4 7 D
6 87 D
2 3 D
14 -186 D
4 -48 D
2 -5 D
4 -3 D
2 -3 D
2 0 D
4 35 D
6 71 D
8 22 D
4 -24 D
4 -29 D
2 3 D
4 22 D
2 -1 D
4 -16 D
2 0 D
12 66 D
2 4 D
4 -11 D
2 -8 D
2 -1 D
4 8 D
2 -1 D
6 -9 D
8 -56 D
4 26 D
4 33 D
4 -19 D
8 -58 D
4 -9 D
2 2 D
6 34 D
4 24 D
4 13 D
4 31 D
2 5 D
8 -55 D
8 -21 D
8 -15 D
2 -2 D
2 1 D
10 60 D
4 8 D
2 0 D
6 -10 D
2 1 D
2 3 D
2 -1 D
8 -55 D
2 -4 D
10 49 D
2 1 D
6 -10 D
6 -2 D
4 -5 D
2 1 D
6 28 D
2 0 D
6 -26 D
2 -1 D
2 1 D
4 -13 D
6 -32 D
4 -4 D
2 0 D
10 63 D
6 7 D
2 0 D
8 -20 D
2 -2 D
6 9 D
2 -1 D
6 -20 D
2 -2 D
4 3 D
4 -3 D
6 -16 D
2 1 D
8 36 D
6 8 D
4 8 D
2 0 D
4 -5 D
6 11 D
2 -1 D
10 -53 D
2 -1 D
8 30 D
2 -1 D
4 -6 D
2 1 D
4 11 D
2 0 D
4 -9 D
2 -1 D
2 3 D
2 0 D
6 -26 D
2 -2 D
6 16 D
4 -1 D
8 48 D
2 2 D
4 -7 D
4 -1 D
2 -2 D
8 -27 D
6 -14 D
2 -2 D
8 20 D
4 3 D
2 0 D
10 -18 D
4 1 D
6 5 D
4 8 D
2 0 D
4 -6 D
4 3 D
2 3 D
6 -4 D
4 5 D
2 0 D
6 -5 D
8 12 D
2 0 D
10 -9 D
2 0 D
6 9 D
2 0 D
8 -23 D
6 -4 D
8 -2 D
4 5 D
10 2 D
6 4 D
4 1 D
4 6 D
6 22 D
2 1 D
6 -17 D
2 1 D
4 10 D
2 1 D
6 -10 D
6 -1 D
2 1 D
2 3 D
2 1 D
8 -14 D
6 -4 D
4 -5 D
6 11 D
2 1 D
6 -3 D
4 2 D
6 -7 D
2 -1 D
10 7 D
4 2 D
4 6 D
8 5 D
2 -1 D
8 -14 D
2 0 D
4 -5 D
4 1 D
4 5 D
4 1 D
6 -2 D
8 -16 D
8 -5 D
4 -5 D
4 1 D
8 10 D
8 18 D
4 -1 D
2 -2 D
2 0 D
6 10 D
6 2 D
4 3 D
8 -11 D
2 -1 D
6 7 D
4 2 D
6 -3 D
8 -21 D
2 0 D
8 21 D
2 3 D
10 -2 D
6 -5 D
4 1 D
6 11 D
4 -1 D
4 -5 D
8 -3 D
8 6 D
10 -14 D
6 1 D
6 -4 D
2 1 D
6 9 D
6 -2 D
6 -5 D
6 -1 D
6 1 D
2 -1 D
2 -3 D
4 -2 D
2 1 D
10 21 D
4 1 D
8 -7 D
2 0 D
S
292 1568 M
44 2 D
18 -1 D
12 1 D
10 -2 D
34 -2 D
6 -1 D
14 1 D
8 -1 D
4 1 D
22 -2 D
26 3 D
4 -6 D
2 -13 D
4 -131 D
2 -117 D
2 -27 D
6 699 D
2 44 D
6 -538 D
4 128 D
2 8 D
6 -64 D
4 -66 D
4 155 D
2 -32 D
4 -414 D
2 10 D
4 499 D
2 90 D
4 -189 D
2 -14 D
4 124 D
2 -2 D
6 -294 D
6 323 D
2 -40 D
4 -276 D
2 -32 D
4 99 D
2 18 D
2 6 D
6 128 D
6 -133 D
2 26 D
4 143 D
2 -25 D
4 -162 D
6 287 D
2 -35 D
4 -201 D
4 36 D
6 -269 D
6 317 D
8 -221 D
2 9 D
6 383 D
2 22 D
6 -329 D
6 242 D
2 25 D
6 -318 D
2 -21 D
8 481 D
2 -49 D
6 -664 D
2 43 D
6 487 D
6 -304 D
2 -25 D
6 176 D
2 -17 D
4 -82 D
4 227 D
4 349 D
2 -43 D
6 -639 D
2 -37 D
4 155 D
2 23 D
6 -143 D
2 5 D
8 312 D
8 204 D
4 -143 D
6 -373 D
6 -171 D
2 -17 D
4 136 D
10 572 D
2 49 D
8 -301 D
6 -163 D
4 -190 D
2 -26 D
10 589 D
6 192 D
2 -33 D
8 -860 D
2 52 D
6 531 D
2 68 D
2 -17 D
12 -469 D
4 -58 D
2 17 D
8 377 D
2 7 D
4 -62 D
10 515 D
2 -9 D
10 -687 D
6 -133 D
4 -168 D
2 -19 D
16 857 D
2 -24 D
6 -400 D
2 -32 D
4 82 D
2 -4 D
4 -119 D
2 -10 D
6 265 D
2 27 D
12 -213 D
2 -45 D
2 -14 D
4 28 D
4 11 D
8 207 D
6 -100 D
2 -7 D
4 31 D
2 2 D
2 -7 D
2 7 D
4 32 D
6 -170 D
2 -24 D
6 83 D
6 -97 D
6 64 D
4 5 D
8 222 D
2 15 D
10 -273 D
2 -16 D
4 45 D
6 108 D
2 1 D
2 -8 D
2 -2 D
2 5 D
2 0 D
6 -63 D
2 -1 D
4 27 D
8 -89 D
4 -14 D
2 6 D
8 158 D
2 0 D
8 -86 D
2 -4 D
6 5 D
4 13 D
2 0 D
6 -46 D
2 -1 D
6 38 D
6 63 D
2 5 D
6 -70 D
4 -52 D
2 -4 D
6 16 D
4 38 D
6 114 D
2 7 D
4 -7 D
4 -39 D
4 -85 D
2 -14 D
4 30 D
2 -4 D
4 -66 D
2 -11 D
6 76 D
2 -5 D
4 -34 D
4 46 D
4 49 D
4 7 D
6 87 D
2 3 D
14 -186 D
4 -48 D
2 -5 D
4 -3 D
2 -3 D
2 0 D
4 35 D
6 71 D
8 22 D
4 -24 D
4 -29 D
2 3 D
4 22 D
2 -1 D
4 -16 D
2 0 D
12 66 D
2 4 D
4 -11 D
2 -8 D
2 -1 D
4 8 D
2 -1 D
6 -9 D
8 -56 D
4 26 D
4 33 D
4 -19 D
8 -58 D
4 -9 D
2 2 D
6 34 D
4 24 D
4 13 D
4 31 D
2 5 D
8 -55 D
8 -21 D
8 -15 D
2 -2 D
2 1 D
10 60 D
4 8 D
2 0 D
6 -10 D
2 1 D
2 3 D
2 -1 D
8 -55 D
2 -4 D
10 49 D
2 1 D
6 -10 D
6 -2 D
4 -5 D
2 1 D
6 28 D
2 0 D
6 -26 D
2 -1 D
2 1 D
4 -13 D
6 -32 D
4 -4 D
2 0 D
10 63 D
6 7 D
2 0 D
8 -20 D
2 -2 D
6 9 D
2 -1 D
6 -20 D
2 -2 D
4 3 D
4 -3 D
6 -16 D
2 1 D
8 36 D
6 8 D
4 8 D
2 0 D
4 -5 D
6 11 D
2 -1 D
10 -53 D
2 -1 D
8 30 D
2 -1 D
4 -6 D
2 1 D
4 11 D
2 0 D
4 -9 D
2 -1 D
2 3 D
2 0 D
6 -26 D
2 -2 D
6 16 D
4 -1 D
8 48 D
2 2 D
4 -7 D
4 -1 D
2 -2 D
8 -27 D
6 -14 D
2 -2 D
8 20 D
4 3 D
2 0 D
10 -18 D
4 1 D
6 5 D
4 8 D
2 0 D
4 -6 D
4 3 D
2 3 D
6 -4 D
4 5 D
2 0 D
6 -5 D
8 12 D
2 0 D
10 -9 D
2 0 D
6 9 D
2 0 D
8 -23 D
6 -4 D
8 -2 D
4 5 D
10 2 D
6 4 D
4 1 D
4 6 D
6 22 D
2 1 D
6 -17 D
2 1 D
4 10 D
2 1 D
6 -10 D
6 -1 D
2 1 D
2 3 D
2 1 D
8 -14 D
6 -4 D
4 -5 D
6 11 D
2 1 D
6 -3 D
4 2 D
6 -7 D
2 -1 D
10 7 D
4 2 D
4 6 D
8 5 D
2 -1 D
8 -14 D
2 0 D
4 -5 D
4 1 D
4 5 D
4 1 D
6 -2 D
8 -16 D
8 -5 D
4 -5 D
4 1 D
8 10 D
8 18 D
4 -1 D
2 -2 D
2 0 D
6 10 D
6 2 D
4 3 D
8 -11 D
2 -1 D
6 7 D
4 2 D
6 -3 D
8 -21 D
2 0 D
8 21 D
2 3 D
10 -2 D
6 -5 D
4 1 D
6 11 D
4 -1 D
4 -5 D
8 -3 D
8 6 D
10 -14 D
6 1 D
6 -4 D
2 1 D
6 9 D
6 -2 D
6 -5 D
6 -1 D
6 1 D
2 -1 D
2 -3 D
4 -2 D
2 1 D
10 21 D
4 1 D
8 -7 D
2 0 D
S
2 setlinecap
/MM {neg exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M -83 0 D S
0 800 M -83 0 D S
0 1600 M -83 0 D S
0 2400 M -83 0 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(1) sw mx
(2) sw mx
(3) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
800 PSL_A0_y MM
(1) mr Z
1600 PSL_A0_y MM
(2) mr Z
2400 PSL_A0_y MM
(3) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
2400 0 T
/MM {exch M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 2400 M 0 -2400 D S
8 W
0 0 M 83 0 D S
0 800 M 83 0 D S
0 1600 M 83 0 D S
0 2400 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-2400 0 T
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 -83 D S
400 0 M 0 -83 D S
800 0 M 0 -83 D S
1200 0 M 0 -83 D S
1600 0 M 0 -83 D S
2000 0 M 0 -83 D S
2400 0 M 0 -83 D S
/PSL_AH0 0
(8) sh mx
(10) sh mx
(12) sh mx
(14) sh mx
(16) sh mx
(18) sh mx
(20) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(8) bc Z
400 PSL_A0_y MM
(10) bc Z
800 PSL_A0_y MM
(12) bc Z
1200 PSL_A0_y MM
(14) bc Z
1600 PSL_A0_y MM
(16) bc Z
2000 PSL_A0_y MM
(18) bc Z
2400 PSL_A0_y MM
(20) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 2400 T
/MM {M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 2400 0 D S
8 W
0 0 M 0 83 D S
400 0 M 0 83 D S
800 0 M 0 83 D S
1200 0 M 0 83 D S
1600 0 M 0 83 D S
2000 0 M 0 83 D S
2400 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -2400 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX2i/2i -R8/20/0/3 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1836
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 12 def
/PSL_n1 11 def
/PSL_y0 8 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) ($\{SACF\}) ($\{SACF\}) ($\{JRP\}) (-M5e-6/2) ($E) ($B) (-K) (-O) (-X2.6i)
(\>\>) ($\{PS\})
12 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167
12 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 0
12 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0
12 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 12 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 12 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 1200 8 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 1200 8 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psxy -JX2i/2i -R8/20/0/3 -O
%%PROJ: xy 8.00000000 20.00000000 0.00000000 3.00000000 8.000 20.000 0.000 3.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1837
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
%%EndObject
%%PageTrailer
U
showpage

%%Trailer

end
%%EOF
