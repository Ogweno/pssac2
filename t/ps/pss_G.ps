%!PS-Adobe-3.0
%%BoundingBox: 0 0 595 842
%%HiResBoundingBox: 0 0 595 842
%%Title: GMT v5.1.1 (r12968) [64-bit] Document from psxy
%%Creator: GMT5
%%For: savage13
%%DocumentNeededResources: font Helvetica
%%CreationDate: Thu Sep 25 13:58:05 2014
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%EndComments

%%BeginProlog
250 dict begin
/! {bind def} bind def
/# {load def}!
/A /setgray #
/B /setdash #
/C /setrgbcolor #
/D /rlineto #
/E {dup stringwidth pop}!
/F /fill #
/G /rmoveto #
/H /sethsbcolor #
/I /setpattern #
/K /setcmykcolor #
/L /lineto #
/M /moveto #
/N /newpath #
/P /closepath #
/R /rotate #
/S /stroke #
/T /translate #
/U /grestore #
/V /gsave #
/W /setlinewidth #
/Y {findfont exch scalefont setfont}!
/Z /show #
/FP {true charpath flattenpath}!
/MU {matrix setmatrix}!
/MS {/SMat matrix currentmatrix def}!
/MR {SMat setmatrix}!
/edef {exch def}!
/FS {/fc edef /fs {V fc F U} def}!
/FQ {/fs {} def}!
/O0 {/os {N} def}!
/O1 {/os {P S} def}!
/FO {fs os}!
/Sa {M MS dup 0 exch G 0.726542528 mul -72 R dup 0 D 4 {72 R dup 0 D -144 R dup 0 D} repeat pop MR FO}!
/Sb {M dup 0 D exch 0 exch D neg 0 D FO}!
/SB {MS T /BoxR edef /BoxW edef /BoxH edef BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Sc {N 3 -1 roll 0 360 arc FO}!
/Sd {M 4 {dup} repeat 0 G neg dup dup D exch D D FO}!
/Se {N MS T R scale 0 0 1 0 360 arc MR FO}!
/Sg {M MS 22.5 R dup 0 exch G -22.5 R 0.765366865 mul dup 0 D 6 {-45 R dup 0 D} repeat pop MR FO}!
/Sh {M MS dup 0 G -120 R dup 0 D 4 {-60 R dup 0 D} repeat pop MR FO}!
/Si {M MS dup neg 0 exch G 60 R 1.732050808 mul dup 0 D 120 R 0 D MR FO}!
/Sj {M MS R dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D MR FO}!
/Sn {M MS dup 0 exch G -36 R 1.175570505 mul dup 0 D 3 {-72 R dup 0 D} repeat pop MR FO}!
/Sp {N 3 -1 roll 0 360 arc fs N}!
/SP {M {D} repeat FO}!
/Sr {M dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D FO}!
/SR {MS T /BoxR edef /BoxW edef /BoxH edef BoxR BoxW -2 div BoxH -2 div T BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Ss {M 1.414213562 mul dup dup dup -2 div dup G 0 D 0 exch D neg 0 D FO}!
/St {M MS dup 0 exch G -60 R 1.732050808 mul dup 0 D -120 R 0 D MR FO}!
/SV {0 exch M 0 D D D D D 0 D FO}!
/Sv {0 0 M D D 0 D D D D D 0 D D FO}!
/Sw {2 copy M 5 2 roll arc FO}!
/Sx {M 1.414213562 mul 5 {dup} repeat -2 div dup G D neg 0 G neg D S}!
/Sy {M dup 0 exch G dup -2 mul dup 0 exch D S}!
/S+ {M dup 0 G dup -2 mul dup 0 D exch dup G 0 exch D S}!
/S- {M dup 0 G dup -2 mul dup 0 D S}!
/sw {stringwidth pop}!
/sh {V MU 0 0 M FP pathbbox N 4 1 roll pop pop pop U}!
/sd {V MU 0 0 M FP pathbbox N pop pop exch pop U}!
/sH {V MU 0 0 M FP pathbbox N exch pop exch sub exch pop U}!
/sb {E exch sh}!
/bl {}!
/bc {E -2 div 0 G}!
/br {E neg 0 G}!
/ml {dup 0 exch sh -2 div G}!
/mc {dup E -2 div exch sh -2 div G}!
/mr {dup E neg exch sh -2 div G}!
/tl {dup 0 exch sh neg G}!
/tc {dup E -2 div exch sh neg G}!
/tr {dup E neg exch sh neg G}!
/mx {2 copy lt {exch} if pop}!
/PSL_xorig 0 def /PSL_yorig 0 def
/TM {2 copy T PSL_yorig add /PSL_yorig edef PSL_xorig add /PSL_xorig edef}!
/PSL_reencode {findfont dup length dict begin
  {1 index /FID ne {def}{pop pop} ifelse} forall
  exch /Encoding edef currentdict end definefont pop
}!
/PSL_eps_begin {
  /PSL_eps_state save def
  /PSL_dict_count countdictstack def
  /PSL_op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth
  0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
}!
/PSL_eps_end {
  count PSL_op_count sub {pop} repeat
  countdictstack PSL_dict_count sub {end} repeat
  PSL_eps_state restore
}!
/PSL_transp {
  /.setopacityalpha where {pop .setblendmode .setopacityalpha}{
  /pdfmark where {pop [ /BM exch /CA exch dup /ca exch /SetTransparency pdfmark}
  {pop pop} ifelse} ifelse
}!
/ISOLatin1+_Encoding [
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/bullet		/ellipsis	/trademark	/emdash		/endash		/fi		/zcaron
/space		/exclam		/quotedbl	/numbersign	/dollar		/percent	/ampersand	/quoteright
/parenleft	/parenright	/asterisk	/plus		/comma		/minus		/period		/slash
/zero		/one		/two		/three		/four		/five		/six		/seven
/eight		/nine		/colon		/semicolon	/less		/equal		/greater	/question
/at		/A		/B		/C		/D		/E		/F		/G
/H		/I		/J		/K		/L		/M		/N		/O
/P		/Q		/R		/S		/T		/U		/V		/W
/X		/Y		/Z		/bracketleft	/backslash	/bracketright	/asciicircum	/underscore
/quoteleft	/a		/b		/c 		/d		/e		/f		/g
/h		/i		/j		/k		/l		/m		/n		/o
/p		/q		/r		/s		/t		/u		/v		/w
/x		/y		/z		/braceleft	/bar		/braceright	/asciitilde	/scaron
/OE		/dagger		/daggerdbl	/Lslash		/fraction	/guilsinglleft	/Scaron		/guilsinglright
/oe		/Ydieresis	/Zcaron		/lslash		/perthousand	/quotedblbase	/quotedblleft	/quotedblright
/dotlessi	/grave		/acute		/circumflex	/tilde		/macron		/breve		/dotaccent
/dieresis	/quotesinglbase	/ring		/cedilla	/quotesingle	/hungarumlaut	/ogonek		/caron
/space		/exclamdown	/cent		/sterling	/currency	/yen		/brokenbar	/section
/dieresis	/copyright	/ordfeminine	/guillemotleft	/logicalnot	/hyphen		/registered	/macron
/degree		/plusminus	/twosuperior	/threesuperior	/acute		/mu		/paragraph	/periodcentered
/cedilla	/onesuperior	/ordmasculine	/guillemotright	/onequarter	/onehalf	/threequarters	/questiondown
/Agrave		/Aacute		/Acircumflex	/Atilde		/Adieresis	/Aring		/AE		/Ccedilla
/Egrave		/Eacute		/Ecircumflex	/Edieresis	/Igrave		/Iacute		/Icircumflex	/Idieresis
/Eth		/Ntilde		/Ograve		/Oacute		/Ocircumflex	/Otilde		/Odieresis	/multiply
/Oslash		/Ugrave		/Uacute		/Ucircumflex	/Udieresis	/Yacute		/Thorn		/germandbls
/agrave		/aacute		/acircumflex	/atilde		/adieresis	/aring		/ae		/ccedilla
/egrave		/eacute		/ecircumflex	/edieresis	/igrave		/iacute		/icircumflex	/idieresis
/eth		/ntilde		/ograve		/oacute		/ocircumflex	/otilde		/odieresis	/divide
/oslash		/ugrave		/uacute		/ucircumflex	/udieresis	/yacute		/thorn		/ydieresis
] def
/PSL_font_encode 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 array astore def
/F0 {/Helvetica Y}!
/F1 {/Helvetica-Bold Y}!
/F2 {/Helvetica-Oblique Y}!
/F3 {/Helvetica-BoldOblique Y}!
/F4 {/Times-Roman Y}!
/F5 {/Times-Bold Y}!
/F6 {/Times-Italic Y}!
/F7 {/Times-BoldItalic Y}!
/F8 {/Courier Y}!
/F9 {/Courier-Bold Y}!
/F10 {/Courier-Oblique Y}!
/F11 {/Courier-BoldOblique Y}!
/F12 {/Symbol Y}!
/F13 {/AvantGarde-Book Y}!
/F14 {/AvantGarde-BookOblique Y}!
/F15 {/AvantGarde-Demi Y}!
/F16 {/AvantGarde-DemiOblique Y}!
/F17 {/Bookman-Demi Y}!
/F18 {/Bookman-DemiItalic Y}!
/F19 {/Bookman-Light Y}!
/F20 {/Bookman-LightItalic Y}!
/F21 {/Helvetica-Narrow Y}!
/F22 {/Helvetica-Narrow-Bold Y}!
/F23 {/Helvetica-Narrow-Oblique Y}!
/F24 {/Helvetica-Narrow-BoldOblique Y}!
/F25 {/NewCenturySchlbk-Roman Y}!
/F26 {/NewCenturySchlbk-Italic Y}!
/F27 {/NewCenturySchlbk-Bold Y}!
/F28 {/NewCenturySchlbk-BoldItalic Y}!
/F29 {/Palatino-Roman Y}!
/F30 {/Palatino-Italic Y}!
/F31 {/Palatino-Bold Y}!
/F32 {/Palatino-BoldItalic Y}!
/F33 {/ZapfChancery-MediumItalic Y}!
/F34 {/ZapfDingbats Y}!
/F35 {/Ryumin-Light-EUC-H Y}!
/F36 {/Ryumin-Light-EUC-V Y}!
/F37 {/GothicBBB-Medium-EUC-H Y}!
/F38 {/GothicBBB-Medium-EUC-V Y}!
/PSL_pathtextdict 26 dict def
/PSL_pathtext
  {PSL_pathtextdict begin
    /textheight exch def
    /just exch def
    /offset exch def
    /str exch def
    /pathdist 0 def
    /setdist offset def
    /charcount 0 def
    /justy just 4 idiv textheight mul 2 div neg def
    V flattenpath
	{movetoproc} {linetoproc}
	{curvetoproc} {closepathproc}
	pathforall
    U N
    end
  } def
PSL_pathtextdict begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
  } def
/linetoproc
  { /oldx newx def /oldy newy def
    /newy exch def /newx exch def
    /dx newx oldx sub def
    /dy newy oldy sub def
    /dist dx dup mul dy dup mul add sqrt def
    dist 0 ne
    { /dsx dx dist div ovr mul def
      /dsy dy dist div ovr mul def
      oldx dsx add oldy dsy add transform
      /cpy exch def /cpx exch def
      /pathdist pathdist dist add def
      {setdist pathdist le
	  {charcount str length lt
	      {setchar} {exit} ifelse}
	  { /ovr setdist pathdist sub def
	    exit}
	  ifelse
      } loop
    } if
  } def
/curvetoproc
  { (ERROR: No curveto's after flattenpath!)
    print
  } def
/closepathproc
  {firstx firsty linetoproc
    firstx firsty movetoproc
  } def
/setchar
  { /char str charcount 1 getinterval def
    /charcount charcount 1 add def
    /charwidth char stringwidth pop def
    V cpx cpy itransform T
      dy dx atan R
      0 justy M
      char show
      0 justy neg G
      currentpoint transform
      /cpy exch def /cpx exch def
    U /setdist setdist charwidth add def
  } def
end
/PSL_curved_text_labels
{ /bits exch def
  /PSL_clippath bits 1 and 1 eq def
  /PSL_placetext bits 2 and 0 eq def
  /PSL_strokeline bits 4 and 4 eq def
  /PSL_firstcall bits 32 and 32 eq def
  /PSL_lastcall bits 64 and 64 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_n1 PSL_n 1 sub def
  /PSL_m1 PSL_m 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_CT_calcstringwidth
  PSL_CT_calclinedist
  PSL_CT_addcutpoints
  PSL_clippath PSL_firstcall and
  {clipsave N clippath} if
  PSL_setlinepen
  /PSL_nn1 PSL_nn 1 sub def
  /n 0 def
  /k 0 def
  /j 0 def
  /PSL_seg 0 def
  /PSL_xp PSL_nn array def
  /PSL_yp PSL_nn array def
  PSL_xp 0 PSL_xx 0 get put
  PSL_yp 0 PSL_yy 0 get put
  1 1 PSL_nn1
  { /i exch def
    /node_type PSL_kind i get def
    /j j 1 add def
    PSL_xp j PSL_xx i get put
    PSL_yp j PSL_yy i get put
    node_type 1 eq
    {n 0 eq
      {PSL_CT_drawline}
      {	PSL_CT_reversepath
	PSL_CT_textline} ifelse
      /j 0 def
      PSL_xp j PSL_xx i get put
      PSL_yp j PSL_yy i get put
    } if
  } for
  n 0 eq {PSL_CT_drawline} if
  PSL_lastcall
  {PSL_clippath
    {PSL_clip} if N
  } if
} def
/PSL_CT_textline
{PSL_placetext
  {PSL_clippath
    {PSL_CT_clippath} {PSL_CT_placelabel} ifelse
  } if
  /n 0 def /k k 1 add def PSL_setlinepen
} def
/PSL_CT_calcstringwidth
{ /PSL_width PSL_m array def
  0 1 PSL_m1
  { /i exch def
    PSL_width i PSL_str i get stringwidth pop put
  } for
} def
/PSL_CT_calclinedist
{ /PSL_newx PSL_x 0 get def
  /PSL_newy PSL_y 0 get def
  /dist 0.0 def
  /PSL_dist PSL_n array def
  PSL_dist 0 0.0 put
  1 1 PSL_n1
  { /i exch def
    /PSL_oldx PSL_newx def
    /PSL_oldy PSL_newy def
    /PSL_newx PSL_x i get def
    /PSL_newy PSL_y i get def
    /dx PSL_newx PSL_oldx sub def
    /dy PSL_newy PSL_oldy sub def
    /dist dist dx dx mul dy dy mul add sqrt add def
    PSL_dist i dist put
  } for
} def
/PSL_CT_addcutpoints
{ /k 0 def
  /PSL_nc PSL_m 2 mul 1 add def
  /PSL_cuts PSL_nc array def
  /PSL_nc1 PSL_nc 1 sub def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node i get get def
    /halfwidth PSL_width i get 2 div PSL_gap_x add def
    PSL_cuts k dist halfwidth sub put
    /k k 1 add def
    PSL_cuts k dist halfwidth add put
    /k k 1 add def
  } for
  PSL_cuts k 100000.0 put
  /PSL_nn PSL_n PSL_m 2 mul add def
  /PSL_xx PSL_nn array def
  /PSL_yy PSL_nn array def
  /PSL_kind PSL_nn array def
  /j 0 def
  /k 0 def
  /dist 0.0 def
  0 1 PSL_n1
  { /i exch def
    /last_dist dist def
    /dist PSL_dist i get def
    k 1 PSL_nc1
    { /kk exch def
      /this_cut PSL_cuts kk get def
      dist this_cut gt
      { /ds dist last_dist sub def
	/f ds 0.0 eq {0.0} {dist this_cut sub ds div} ifelse def
	/i1 i 0 eq {0} {i 1 sub} ifelse def
	PSL_xx j PSL_x i get dup PSL_x i1 get sub f mul sub put
	PSL_yy j PSL_y i get dup PSL_y i1 get sub f mul sub put
	PSL_kind j 1 put
	/j j 1 add def
	/k k 1 add def
      } if
    } for
    dist PSL_cuts k get le
    {PSL_xx j PSL_x i get put PSL_yy j PSL_y i get put
      PSL_kind j 0 put
      /j j 1 add def
    } if
  } for
} def
/PSL_CT_reversepath
{PSL_xp j get PSL_xp 0 get lt
  {0 1 j 2 idiv
    { /left exch def
      /right j left sub def
      /tmp PSL_xp left get def
      PSL_xp left PSL_xp right get put
      PSL_xp right tmp put
      /tmp PSL_yp left get def
      PSL_yp left PSL_yp right get put
      PSL_yp right tmp put
    } for
  } if
} def
/PSL_CT_placelabel
{
  PSL_usebox
  {PSL_CT_clippath
    PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  } if
  PSL_settxtrgb PSL_CT_placeline PSL_str k get PSL_gap_x PSL_just PSL_height PSL_pathtext
} def
/PSL_CT_clippath
{
  /H PSL_height 2 div PSL_gap_y add def
  /xoff j 1 add array def
  /yoff j 1 add array def
  /angle 0 def
  0 1 j {
    /ii exch def
    /x PSL_xp ii get def
    /y PSL_yp ii get def
    ii 0 eq {
      /x1 PSL_xp 1 get def
      /y1 PSL_yp 1 get def
      /dx x1 x sub def
      /dy y1 y sub def
    }
    { /i1 ii 1 sub def
      /x1 PSL_xp i1 get def
      /y1 PSL_yp i1 get def
      /dx x x1 sub def
      /dy y y1 sub def
    } ifelse
    dx 0.0 ne dy 0.0 ne and
    { /angle dy dx atan 90 add def} if
    /sina angle sin def
    /cosa angle cos def
    xoff ii H cosa mul put
    yoff ii H sina mul put
  } for
  PSL_xp 0 get xoff 0 get add PSL_yp 0 get yoff 0 get add M
  1 1 j {
    /ii exch def
    PSL_xp ii get xoff ii get add PSL_yp ii get yoff ii get add L
  } for
  j -1 0 {
    /ii exch def
    PSL_xp ii get xoff ii get sub PSL_yp ii get yoff ii get sub L
  } for P
} def
/PSL_CT_drawline
{
  /str 20 string def
  PSL_strokeline
  {PSL_CT_placeline PSL_setlinepen S} if
  /PSL_seg PSL_seg 1 add def
  /n 1 def
} def
/PSL_CT_placeline
{PSL_xp 0 get PSL_yp 0 get M
  1 1 j { /ii exch def PSL_xp ii get PSL_yp ii get L} for
} def
/PSL_straight_text_labels
{
  /bits exch def
  /PSL_clippath bits 1 and 0 eq def
  /PSL_rounded bits 16 and 16 eq def
  /PSL_fillbox bits 128 and 128 eq def
  /PSL_drawbox bits 256 and 256 eq def
  /PSL_m1 PSL_m 1 sub def
  /PSL_justx PSL_just 4 mod 1 sub 2 div neg def
  /PSL_justy PSL_just 4 idiv PSL_height mul 2 div neg def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_clippath
  {PSL_ST_clippath}
  {PSL_usebox {PSL_ST_clippath} if
    PSL_ST_placelabel
  } ifelse
} def
/PSL_ST_placelabel
{PSL_settxtrgb
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    V PSL_txt_x k get PSL_txt_y k get T
    PSL_angle k get R
    /BoxW PSL_str k get stringwidth pop def
    BoxW PSL_justx mul PSL_justy M
    PSL_str k get show
    U
  } for
} def
/PSL_ST_clippath
{N
  PSL_usebox not {clipsave clippath} if
  PSL_rounded {PSL_ST_clippath_round} {PSL_ST_clippath_rect} ifelse
  PSL_usebox
  {PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {PSL_setboxpen S} if N
  }
  {PSL_clip
  } ifelse
  N
} def
/PSL_ST_clippath_rect
{
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /DelY BoxH BoxH 0 3 array astore def
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /MAT PSL_angle k get matrix R def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 0 BoxW PSL_justx mul add def
    /y0 0 PSL_justy add PSL_gap_y sub def
    /DelX 0 BoxW BoxW 3 array astore def
    x0 y0 MAT transform
    /dy exch def /dx exch def
    xp dx add yp dy add M
    0 1 2
    {
      /ii exch def
      x0 DelX ii get add y0 DelY ii get add MAT transform
      /dy exch def /dx exch def
      xp dx add yp dy add L
    } for P
  } for
} def
/PSL_ST_clippath_round
{
  /PSL_justy2 PSL_just 4 idiv 2 div neg def
  /BoxR PSL_gap_x PSL_gap_y lt {PSL_gap_x} {PSL_gap_y} ifelse def
  /BoxH PSL_height PSL_gap_y 2 mul add def
  /y0 PSL_height PSL_gap_y 2 mul add PSL_justy2 mul def
  0 1 PSL_m1
  { /k exch def
    /xp PSL_txt_x k get def
    /yp PSL_txt_y k get def
    /BoxW PSL_str k get stringwidth pop PSL_gap_x 2 mul add def
    /x0 BoxW PSL_justx mul def
    xp yp T PSL_angle k get R x0 y0 T
    BoxR 0 M
    BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct P
    x0 neg y0 neg T PSL_angle k get neg R xp neg yp neg T
  } for
} def
/PSL_nclip 0 def
/PSL_clip {clip /PSL_nclip PSL_nclip 1 add def} def
/PSL_eoclip {eoclip /PSL_nclip PSL_nclip 1 add def} def
/PSL_cliprestore {cliprestore /PSL_nclip PSL_nclip 1 sub def} def
%%EndProlog

%%BeginSetup
/PSLevel /languagelevel where {pop languagelevel} {1} ifelse def
PSLevel 1 gt { << /PageSize [595 842] /ImagingBBox null >> setpagedevice } if
%%EndSetup

%%Page: 1 1

%%BeginPageSetup
V 0.06 0.06 scale
%%EndPageSetup

/PSL_page_xsize 9917 def
/PSL_page_ysize 14033 def
0 A
FQ
O0
1200 1200 TM

% PostScript produced by:
%%GMT: psxy -JX3i/2i -R-1/12/0/2 -P -B2/1S -K
%%PROJ: xy -1.00000000 12.00000000 0.00000000 2.00000000 -1.000 12.000 0.000 2.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
277 1201 M
3 0 D
2 -1 D
3 0 D
3 1 D
3 1 D
3 1 D
2 1 D
3 0 D
3 0 D
3 0 D
2 0 D
3 -1 D
3 0 D
3 1 D
2 0 D
3 1 D
3 0 D
3 0 D
3 0 D
2 1 D
3 0 D
3 -1 D
3 -1 D
2 -1 D
3 0 D
3 0 D
3 0 D
2 0 D
3 0 D
3 1 D
3 0 D
3 1 D
2 1 D
3 0 D
3 -1 D
3 0 D
2 0 D
3 -1 D
3 -1 D
3 -1 D
2 -2 D
3 0 D
3 0 D
3 1 D
3 0 D
2 -1 D
3 -1 D
3 0 D
3 0 D
2 0 D
3 0 D
3 -1 D
3 0 D
2 0 D
3 0 D
3 -1 D
3 0 D
3 -1 D
2 1 D
3 -2 D
3 0 D
3 -1 D
2 2 D
3 0 D
3 1 D
3 -1 D
2 0 D
3 0 D
3 0 D
3 -1 D
3 -1 D
2 0 D
3 1 D
3 1 D
3 0 D
2 -1 D
3 -1 D
3 1 D
3 0 D
2 0 D
3 -1 D
3 -2 D
3 0 D
3 0 D
2 0 D
3 0 D
3 2 D
3 1 D
2 0 D
3 0 D
3 -1 D
3 0 D
2 0 D
3 2 D
3 0 D
3 0 D
3 0 D
2 1 D
3 1 D
3 -3 D
3 -10 D
2 -32 D
3 -95 D
3 -215 D
3 -274 D
2 -66 D
3 363 D
3 681 D
3 607 D
3 105 D
2 -458 D
3 -580 D
3 -232 D
3 131 D
2 171 D
3 19 D
3 -63 D
3 -41 D
2 -49 D
3 -102 D
3 -52 D
3 146 D
3 220 D
2 -77 D
3 -488 D
3 -488 D
3 22 D
2 560 D
3 619 D
3 214 D
3 -196 D
2 -251 D
3 -33 D
3 148 D
3 144 D
3 -4 D
2 -209 D
3 -313 D
3 -174 D
3 146 D
2 365 D
3 254 D
3 -95 D
3 -347 D
2 -305 D
3 -77 D
3 109 D
3 126 D
3 42 D
2 14 D
3 90 D
3 141 D
3 72 D
2 -63 D
3 -152 D
3 -100 D
3 62 D
2 192 D
3 146 D
3 -59 D
3 -226 D
3 -156 D
2 117 D
3 325 D
3 235 D
3 -82 D
2 -292 D
3 -184 D
3 40 D
3 45 D
2 -187 D
3 -318 D
3 -128 D
3 209 D
3 356 D
2 182 D
3 -96 D
3 -207 D
3 -150 D
2 -69 D
3 21 D
3 191 D
3 369 D
2 345 D
3 52 D
3 -274 D
3 -348 D
3 -156 D
2 100 D
3 247 D
3 226 D
3 59 D
2 -172 D
3 -319 D
3 -260 D
3 -49 D
2 183 D
3 331 D
3 375 D
3 245 D
3 -115 D
2 -536 D
3 -662 D
3 -371 D
3 103 D
2 443 D
3 480 D
3 226 D
3 -126 D
2 -326 D
3 -266 D
3 -58 D
3 125 D
3 183 D
2 107 D
3 -39 D
3 -126 D
3 -69 D
2 140 D
3 397 D
3 510 D
3 314 D
2 -101 D
3 -474 D
3 -604 D
3 -431 D
3 -89 D
2 170 D
3 197 D
3 55 D
3 -88 D
2 -143 D
3 -107 D
3 12 D
3 178 D
2 261 D
3 198 D
3 101 D
3 97 D
3 153 D
2 158 D
3 73 D
3 -85 D
3 -254 D
2 -350 D
3 -318 D
3 -213 D
3 -149 D
2 -138 D
3 -118 D
3 -39 D
3 90 D
3 233 D
2 313 D
3 300 D
3 252 D
3 248 D
2 238 D
3 115 D
3 -96 D
3 -244 D
2 -235 D
3 -136 D
3 -80 D
3 -115 D
3 -190 D
2 -239 D
3 -211 D
3 -61 D
3 175 D
2 372 D
3 402 D
3 286 D
3 157 D
2 130 D
3 181 D
3 143 D
3 -79 D
3 -412 D
2 -665 D
3 -641 D
3 -314 D
3 122 D
2 421 D
3 479 D
3 355 D
3 162 D
2 -41 D
3 -181 D
3 -228 D
3 -208 D
3 -179 D
2 -166 D
3 -145 D
3 -100 D
3 -38 D
2 40 D
3 139 D
3 249 D
3 295 D
2 207 D
3 18 D
3 -105 D
3 -41 D
3 147 D
2 297 D
3 331 D
3 278 D
2 105 D
1136 2400 M
2 -212 D
3 -411 D
3 -424 D
2 -331 D
3 -209 D
3 -108 D
3 -79 D
3 -128 D
2 -203 D
3 -193 D
3 -44 D
3 170 D
2 317 D
3 331 D
3 265 D
3 234 D
2 265 D
3 274 D
3 168 D
3 -56 D
3 -285 D
2 -379 D
3 -281 D
3 -76 D
3 87 D
2 106 D
3 -9 D
3 -135 D
3 -146 D
2 -23 D
3 156 D
3 257 D
3 213 D
3 64 D
2 -69 D
3 -109 D
3 -76 D
3 -49 D
2 -80 D
3 -121 D
3 -106 D
3 -34 D
2 30 D
3 36 D
3 9 D
3 18 D
3 87 D
2 161 D
3 165 D
3 75 D
3 -45 D
2 -108 D
3 -83 D
3 -16 D
3 35 D
2 38 D
3 4 D
3 -17 D
3 17 D
3 54 D
2 23 D
3 -79 D
3 -164 D
3 -160 D
2 -57 D
3 62 D
3 101 D
3 35 D
2 -70 D
3 -108 D
3 -52 D
3 34 D
3 74 D
2 44 D
3 4 D
3 7 D
3 66 D
2 142 D
3 179 D
3 139 D
3 33 D
2 -72 D
3 -139 D
3 -167 D
3 -157 D
3 -110 D
2 -37 D
3 29 D
3 78 D
3 103 D
2 99 D
3 53 D
3 1 D
3 -19 D
2 -5 D
3 12 D
3 2 D
3 -34 D
3 -64 D
2 -51 D
3 -3 D
3 38 D
3 26 D
2 -31 D
3 -71 D
3 -69 D
3 -39 D
2 -22 D
3 -12 D
3 15 D
3 69 D
3 115 D
2 117 D
3 72 D
3 1 D
3 -50 D
2 -66 D
3 -58 D
3 -31 D
3 -9 D
2 2 D
3 5 D
3 6 D
3 14 D
3 17 D
2 0 D
3 -30 D
3 -46 D
3 -33 D
2 -3 D
3 18 D
3 30 D
3 41 D
2 52 D
3 55 D
3 43 D
3 11 D
3 -29 D
2 -59 D
3 -77 D
3 -72 D
3 -50 D
2 -11 D
3 13 D
3 16 D
3 10 D
2 25 D
3 63 D
3 103 D
3 102 D
3 65 D
2 16 D
3 -4 D
3 -10 D
3 -26 D
2 -68 D
3 -104 D
3 -96 D
3 -34 D
2 30 D
3 41 D
3 -10 D
3 -73 D
3 -83 D
2 -25 D
3 51 D
3 80 D
3 49 D
2 -12 D
3 -49 D
3 -31 D
3 30 D
2 77 D
3 79 D
3 38 D
3 5 D
3 12 D
2 55 D
3 83 D
3 68 D
3 6 D
2 -54 D
3 -80 D
3 -65 D
3 -44 D
2 -44 D
3 -67 D
3 -85 D
3 -75 D
3 -40 D
2 -11 D
3 -2 D
3 -6 D
3 -7 D
2 0 D
3 25 D
3 59 D
3 75 D
2 62 D
3 31 D
3 11 D
3 15 D
3 18 D
2 7 D
3 -16 D
3 -41 D
3 -46 D
2 -23 D
3 9 D
3 29 D
3 22 D
2 -3 D
3 -20 D
3 -17 D
3 0 D
3 17 D
2 28 D
3 33 D
3 31 D
3 26 D
2 20 D
3 10 D
3 -6 D
3 -20 D
2 -17 D
3 -4 D
3 10 D
3 9 D
3 -2 D
2 -8 D
3 -6 D
3 -7 D
3 -18 D
2 -39 D
3 -47 D
3 -28 D
3 15 D
2 47 D
3 52 D
3 25 D
3 -11 D
3 -33 D
2 -39 D
3 -38 D
3 -36 D
3 -24 D
2 -16 D
3 -5 D
3 3 D
3 16 D
2 27 D
3 37 D
3 35 D
3 22 D
3 12 D
2 20 D
3 35 D
3 38 D
3 12 D
2 -24 D
3 -42 D
3 -38 D
3 -26 D
2 -17 D
3 -14 D
3 -12 D
3 -8 D
3 -9 D
2 -9 D
3 -10 D
3 -6 D
3 -6 D
2 3 D
3 18 D
3 35 D
3 40 D
2 30 D
3 19 D
3 10 D
3 8 D
3 2 D
2 -6 D
3 -11 D
3 -8 D
3 2 D
2 7 D
3 -1 D
3 -19 D
3 -39 D
2 -43 D
3 -31 D
3 -9 D
3 17 D
3 28 D
2 32 D
3 24 D
3 15 D
3 4 D
2 -6 D
3 -10 D
3 -9 D
3 -3 D
2 0 D
3 -1 D
3 -5 D
3 -7 D
3 1 D
2 18 D
3 28 D
3 22 D
3 0 D
2 -20 D
3 -26 D
3 -16 D
3 -3 D
2 2 D
3 -8 D
3 -23 D
3 -32 D
3 -26 D
2 -16 D
3 -6 D
3 -4 D
3 1 D
2 15 D
3 34 D
3 45 D
3 36 D
2 19 D
3 6 D
3 5 D
3 4 D
3 0 D
2 -8 D
3 -13 D
3 -15 D
3 -12 D
2 -4 D
3 4 D
3 11 D
3 6 D
2 -2 D
3 -14 D
3 -20 D
3 -14 D
3 -4 D
2 2 D
3 4 D
3 -1 D
3 -6 D
2 -11 D
3 -16 D
3 -10 D
3 3 D
2 17 D
3 27 D
3 25 D
3 17 D
3 6 D
2 4 D
3 9 D
3 11 D
3 8 D
2 0 D
3 -8 D
3 -5 D
3 5 D
2 12 D
3 10 D
3 -3 D
3 -19 D
3 -29 D
2 -31 D
3 -28 D
3 -19 D
3 -3 D
2 12 D
3 23 D
3 23 D
3 13 D
2 -1 D
3 -9 D
3 -7 D
3 4 D
3 12 D
2 13 D
3 1 D
3 -10 D
3 -12 D
2 -2 D
3 7 D
3 1 D
3 -14 D
2 -27 D
3 -22 D
3 -5 D
3 14 D
3 17 D
2 8 D
3 -3 D
3 0 D
3 17 D
2 34 D
3 39 D
3 24 D
3 4 D
2 -8 D
3 -7 D
3 -2 D
3 0 D
3 -7 D
2 -17 D
3 -21 D
3 -16 D
3 -10 D
2 -8 D
3 -12 D
3 -12 D
3 -4 D
2 10 D
3 16 D
3 13 D
3 8 D
3 4 D
2 2 D
3 0 D
3 -3 D
3 -10 D
2 -11 D
3 -12 D
3 -7 D
3 0 D
2 4 D
3 4 D
3 2 D
3 6 D
3 9 D
2 8 D
3 1 D
3 -6 D
3 -7 D
2 1 D
3 6 D
3 6 D
3 -3 D
2 -5 D
3 -1 D
3 5 D
3 6 D
3 1 D
2 -5 D
3 -6 D
3 -2 D
3 5 D
2 10 D
3 9 D
3 5 D
3 -1 D
2 -3 D
3 -4 D
3 -4 D
3 -4 D
3 -5 D
2 0 D
3 6 D
3 8 D
3 8 D
2 -1 D
3 -11 D
3 -17 D
3 -16 D
2 -10 D
3 -6 D
3 -2 D
3 -1 D
3 -1 D
2 -3 D
3 -3 D
3 0 D
3 5 D
2 7 D
3 3 D
3 1 D
3 -1 D
2 1 D
3 3 D
3 4 D
3 2 D
3 2 D
2 1 D
3 2 D
3 5 D
3 9 D
2 17 D
3 20 D
3 16 D
3 2 D
2 -10 D
3 -18 D
3 -12 D
3 2 D
3 13 D
2 10 D
3 2 D
3 -8 D
3 -9 D
2 -6 D
3 -2 D
3 -1 D
3 0 D
2 4 D
3 6 D
3 2 D
3 -5 D
3 -9 D
2 -11 D
3 -8 D
3 -2 D
3 -2 D
2 -6 D
3 -7 D
3 -4 D
3 5 D
2 11 D
3 9 D
3 4 D
3 -3 D
3 -3 D
2 -1 D
3 2 D
3 1 D
3 -4 D
2 -6 D
3 -6 D
3 -3 D
3 3 D
2 5 D
3 5 D
3 3 D
3 2 D
3 1 D
2 4 D
3 7 D
3 6 D
3 3 D
2 4 D
3 3 D
3 3 D
3 -3 D
2 -9 D
3 -10 D
3 -9 D
3 -4 D
3 -2 D
2 -4 D
3 -6 D
3 -1 D
3 3 D
2 7 D
3 5 D
3 2 D
3 -1 D
2 -1 D
3 -2 D
3 -2 D
3 -7 D
3 -11 D
2 -10 D
3 -9 D
3 -3 D
3 -2 D
2 -2 D
3 -5 D
3 -7 D
3 -5 D
2 0 D
3 3 D
3 4 D
3 5 D
3 6 D
2 8 D
3 12 D
3 14 D
3 11 D
2 7 D
3 0 D
3 -4 D
3 -4 D
2 1 D
3 7 D
3 9 D
3 6 D
3 4 D
2 0 D
3 2 D
3 4 D
3 2 D
2 -4 D
3 -9 D
3 -8 D
3 -5 D
2 -1 D
3 3 D
3 6 D
3 6 D
3 4 D
2 1 D
3 -1 D
3 -3 D
3 -3 D
2 -9 D
3 -14 D
3 -16 D
3 -11 D
2 1 D
3 10 D
3 16 D
3 14 D
3 10 D
2 6 D
3 1 D
3 -1 D
3 -2 D
2 -1 D
3 -2 D
3 -2 D
3 -5 D
2 -4 D
3 -1 D
3 4 D
3 8 D
3 10 D
2 8 D
3 0 D
3 -4 D
3 -6 D
2 -5 D
3 -3 D
3 -1 D
3 -2 D
2 -1 D
3 2 D
3 5 D
3 5 D
3 2 D
2 -5 D
3 -8 D
3 -9 D
3 -7 D
2 -3 D
3 0 D
3 1 D
3 0 D
2 -2 D
3 -4 D
3 -3 D
3 3 D
3 7 D
2 8 D
3 5 D
3 1 D
3 -2 D
2 -4 D
3 -4 D
3 -3 D
3 -3 D
2 -1 D
3 -2 D
3 -1 D
3 2 D
3 1 D
2 0 D
3 -3 D
3 -6 D
3 -4 D
2 -1 D
3 3 D
3 9 D
3 10 D
2 13 D
3 10 D
3 7 D
3 3 D
3 -1 D
2 -4 D
3 -5 D
3 -4 D
3 -4 D
2 0 D
S
{1 0.00392 0.00392 C} FS
/FO {P}!
2 -1 3 0 0 1 3 277 1200 SP
/FO {fs os}!
FO
/FO {P}!
285 1200 M
14 4 D
14 -1 D
14 2 D
8 1 D
11 -3 D
17 1 D
8 2 D
17 -4 D
2 -2 D
-105 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 -1 3 0 3 1 3 396 1200 SP
/FO {fs os}!
FO
/FO {P}!
0 -21 3 -580 2 -458 3 105 3 607 1 347 6 575 1200 SP
/FO {fs os}!
FO
/FO {P}!
0 -6 3 -41 3 -63 3 19 1 91 5 594 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 -92 2 -77 3 169 3 615 1200 SP
/FO {fs os}!
FO
/FO {P}!
633 1200 M
1 317 D
3 214 D
5 -447 D
3 -33 D
6 292 D
3 -4 D
3 -339 D
-24 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 -313 3 -95 3 254 1 154 4 666 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -115 2 -63 3 72 2 106 4 696 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 -204 3 -59 3 146 1 117 4 713 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -125 2 -292 3 -82 3 235 2 264 5 729 1200 SP
/FO {fs os}!
FO
/FO {P}!
0 -26 2 26 2 746 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 -44 3 -96 2 140 3 762 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 -322 3 -274 3 52 2 345 2 199 5 782 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 -278 2 -172 3 59 3 226 2 165 5 801 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 -133 2 -536 3 -115 3 245 3 375 1 164 6 824 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -226 3 -126 3 226 1 126 4 849 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 -543 3 -474 2 -101 3 314 3 510 2 294 6 884 1200 SP
/FO {fs os}!
FO
/FO {P}!
931 1200 M
2 152 D
9 351 D
2 158 D
3 73 D
3 -85 D
6 -649 D
-25 0 D
FO
/FO {fs os}!
FO
/FO {P}!
983 1200 M
8 744 D
3 115 D
3 -96 D
5 -479 D
8 -284 D
-27 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1029 1200 M
4 487 D
11 611 D
3 -79 D
5 -1019 D
-23 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 -76 3 -228 3 -181 2 -41 3 162 3 355 0 9 7 1066 1200 SP
/FO {fs os}!
FO
/FO {P}!
1108 1200 M
2 170 D
3 18 D
3 -105 D
3 -41 D
3 147 D
8 906 D
2 105 D
0 -1200 D
-24 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 -153 3 -424 3 -411 2 -212 0 1200 5 1136 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -162 2 -379 3 -285 3 -56 3 168 3 274 2 265 2 175 8 1178 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -72 3 -49 3 -76 3 -109 2 -69 3 64 3 213 1 98 8 1223 1200 SP
/FO {fs os}!
FO
/FO {P}!
1267 1200 M
4 237 D
3 75 D
3 -45 D
5 -191 D
3 -16 D
5 73 D
3 4 D
3 -17 D
3 17 D
5 77 D
3 -79 D
2 -135 D
-42 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 -66 3 -167 3 -139 2 -72 3 33 3 139 3 179 1 93 8 1350 1200 SP
/FO {fs os}!
FO
/FO {P}!
1385 1200 M
5 124 D
3 1 D
5 -24 D
3 12 D
3 2 D
6 -98 D
0 -17 D
-25 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 -27 3 26 0 1 3 1418 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 -56 2 -66 3 -50 3 1 3 72 2 99 6 1446 1200 SP
/FO {fs os}!
FO
/FO {P}!
0 -2 2 0 1 2 3 1481 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -52 2 -59 3 -29 3 11 3 43 3 55 1 31 7 1505 1200 SP
/FO {fs os}!
FO
/FO {P}!
1546 1200 M
8 239 D
2 16 D
3 -4 D
3 -10 D
3 -26 D
6 -215 D
-25 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1615 1200 M
2 67 D
3 38 D
3 5 D
3 12 D
8 206 D
3 6 D
8 -199 D
7 -135 D
-37 0 D
FO
/FO {fs os}!
FO
/FO {P}!
3 -41 3 -16 2 7 3 18 3 15 3 11 0 6 7 1689 1200 SP
/FO {fs os}!
FO
/FO {P}!
1737 1200 M
10 106 D
3 10 D
3 -6 D
5 -37 D
3 -4 D
6 19 D
3 -2 D
5 -14 D
3 -7 D
3 -18 D
3 -47 D
-47 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 -28 3 -33 3 -11 3 25 2 47 5 1795 1200 SP
/FO {fs os}!
FO
/FO {P}!
1838 1200 M
6 42 D
6 73 D
3 12 D
10 -127 D
-25 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1900 1200 M
2 32 D
6 29 D
3 8 D
3 2 D
8 -25 D
3 2 D
2 7 D
3 -1 D
3 -19 D
2 -35 D
-35 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1953 1200 M
5 29 D
3 4 D
8 -25 D
3 -3 D
5 -1 D
2 -4 D
-26 0 D
FO
/FO {fs os}!
FO
/FO {P}!
3 -15 3 -26 2 -20 3 0 3 22 3 28 1 11 7 1987 1200 SP
/FO {fs os}!
FO
/FO {P}!
2043 1200 M
3 33 D
9 15 D
3 0 D
11 -48 D
-26 0 D
FO
/FO {fs os}!
FO
/FO {P}!
0 -1 3 -14 2 -2 3 6 3 11 5 2074 1200 SP
/FO {fs os}!
FO
/FO {P}!
2124 1200 M
3 14 D
8 19 D
6 19 D
2 0 D
6 -13 D
3 5 D
5 22 D
3 -3 D
7 -63 D
-43 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 -4 2 -1 1 5 3 2187 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -8 3 -10 3 1 2 13 1 4 5 2201 1200 SP
/FO {fs os}!
FO
/FO {P}!
0 -2 3 1 0 1 3 2218 1200 SP
/FO {fs os}!
FO
/FO {P}!
2250 1200 M
4 60 D
3 24 D
3 4 D
5 -15 D
3 -2 D
3 0 D
3 -7 D
8 -54 D
3 -10 D
-35 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 -4 3 -10 3 -3 3 0 2 2 3 4 3 8 1 3 8 2303 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 -2 3 -6 3 1 2 7 4 2346 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 -5 3 -3 3 6 1 2 4 2361 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 -6 2 -5 3 1 3 6 2 4 5 2374 1200 SP
/FO {fs os}!
FO
/FO {P}!
2391 1200 M
2 3 D
5 19 D
3 5 D
3 -1 D
14 -20 D
2 0 D
9 22 D
2 -1 D
6 -27 D
-46 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2500 1200 M
9 54 D
3 2 D
8 -40 D
3 2 D
5 23 D
3 2 D
8 -23 D
6 -3 D
3 0 D
5 10 D
3 2 D
6 -14 D
4 -15 D
-66 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 -1 3 -3 3 4 3 2589 1200 SP
/FO {fs os}!
FO
/FO {P}!
2634 1200 M
8 17 D
11 13 D
3 -3 D
8 -27 D
-30 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 -2 3 0 0 2 3 2755 1200 SP
/FO {fs os}!
FO
/FO {P}!
2768 1200 M
7 17 D
3 4 D
5 2 D
3 4 D
3 2 D
11 -26 D
2 -1 D
3 3 D
9 16 D
2 1 D
3 -1 D
6 -6 D
4 -15 D
-61 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2846 1200 M
6 22 D
3 1 D
14 -8 D
5 -9 D
3 -1 D
3 4 D
8 26 D
3 0 D
8 -15 D
3 -3 D
8 -4 D
3 2 D
6 10 D
3 2 D
10 -27 D
-86 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 -1 3 -4 2 -4 3 -2 3 1 3 5 1 5 7 2959 1200 SP
/FO {fs os}!
FO
/FO {P}!
3015 1200 M
6 25 D
3 7 D
3 3 D
3 -1 D
11 -17 D
2 0 D
0 -17 D
-28 0 D
FO
/FO {fs os}!
FO
2 setlinecap
/MM {neg M} def
/PSL_A0_y 83 def
/PSL_A1_y 0 def
25 W
0 0 M 3600 0 D S
8 W
277 0 M 0 -83 D S
831 0 M 0 -83 D S
1385 0 M 0 -83 D S
1938 0 M 0 -83 D S
2492 0 M 0 -83 D S
3046 0 M 0 -83 D S
3600 0 M 0 -83 D S
/PSL_AH0 0
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sh mx
(2) sh mx
(4) sh mx
(6) sh mx
(8) sh mx
(10) sh mx
(12) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
277 PSL_A0_y MM
(0) bc Z
831 PSL_A0_y MM
(2) bc Z
1385 PSL_A0_y MM
(4) bc Z
1938 PSL_A0_y MM
(6) bc Z
2492 PSL_A0_y MM
(8) bc Z
3046 PSL_A0_y MM
(10) bc Z
3600 PSL_A0_y MM
(12) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX3i/2i -R-1/12/0/2 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy -1.00000000 12.00000000 0.00000000 2.00000000 -1.000 12.000 0.000 2.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1824
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 11 def
/PSL_n1 10 def
/PSL_y0 600 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entb) ($M) (-G255/1/1/0/0/10) (-r)
(-K) (\>) ($\{PS\})
11 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0
11 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167
11 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 0
11 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0
11 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0
11 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 11 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 11 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 3600 600 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 3600 600 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 2400 TM

% PostScript produced by:
%%GMT: psxy -JX3i/2i -R-1/12/0/2 -P -B2/1s -O -K -Y2i
%%PROJ: xy -1.00000000 12.00000000 0.00000000 2.00000000 -1.000 12.000 0.000 2.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1825
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
277 1201 M
3 0 D
2 -1 D
3 0 D
3 1 D
3 1 D
3 1 D
2 1 D
3 0 D
3 0 D
3 0 D
2 0 D
3 -1 D
3 0 D
3 1 D
2 0 D
3 1 D
3 0 D
3 0 D
3 0 D
2 1 D
3 0 D
3 -1 D
3 -1 D
2 -1 D
3 0 D
3 0 D
3 0 D
2 0 D
3 0 D
3 1 D
3 0 D
3 1 D
2 1 D
3 0 D
3 -1 D
3 0 D
2 0 D
3 -1 D
3 -1 D
3 -1 D
2 -2 D
3 0 D
3 0 D
3 1 D
3 0 D
2 -1 D
3 -1 D
3 0 D
3 0 D
2 0 D
3 0 D
3 -1 D
3 0 D
2 0 D
3 0 D
3 -1 D
3 0 D
3 -1 D
2 1 D
3 -2 D
3 0 D
3 -1 D
2 2 D
3 0 D
3 1 D
3 -1 D
2 0 D
3 0 D
3 0 D
3 -1 D
3 -1 D
2 0 D
3 1 D
3 1 D
3 0 D
2 -1 D
3 -1 D
3 1 D
3 0 D
2 0 D
3 -1 D
3 -2 D
3 0 D
3 0 D
2 0 D
3 0 D
3 2 D
3 1 D
2 0 D
3 0 D
3 -1 D
3 0 D
2 0 D
3 2 D
3 0 D
3 0 D
3 0 D
2 1 D
3 1 D
3 -3 D
3 -10 D
2 -32 D
3 -95 D
3 -215 D
3 -274 D
2 -66 D
3 363 D
3 681 D
3 607 D
3 105 D
2 -458 D
3 -580 D
3 -232 D
3 131 D
2 171 D
3 19 D
3 -63 D
3 -41 D
2 -49 D
3 -102 D
3 -52 D
3 146 D
3 220 D
2 -77 D
3 -488 D
3 -488 D
3 22 D
2 560 D
3 619 D
3 214 D
3 -196 D
2 -251 D
3 -33 D
3 148 D
3 144 D
3 -4 D
2 -209 D
3 -313 D
3 -174 D
3 146 D
2 365 D
3 254 D
3 -95 D
3 -347 D
2 -305 D
3 -77 D
3 109 D
3 126 D
3 42 D
2 14 D
3 90 D
3 141 D
3 72 D
2 -63 D
3 -152 D
3 -100 D
3 62 D
2 192 D
3 146 D
3 -59 D
3 -226 D
3 -156 D
2 117 D
3 325 D
3 235 D
3 -82 D
2 -292 D
3 -184 D
3 40 D
3 45 D
2 -187 D
3 -318 D
3 -128 D
3 209 D
3 356 D
2 182 D
3 -96 D
3 -207 D
3 -150 D
2 -69 D
3 21 D
3 191 D
3 369 D
2 345 D
3 52 D
3 -274 D
3 -348 D
3 -156 D
2 100 D
3 247 D
3 226 D
3 59 D
2 -172 D
3 -319 D
3 -260 D
3 -49 D
2 183 D
3 331 D
3 375 D
3 245 D
3 -115 D
2 -536 D
3 -662 D
3 -371 D
3 103 D
2 443 D
3 480 D
3 226 D
3 -126 D
2 -326 D
3 -266 D
3 -58 D
3 125 D
3 183 D
2 107 D
3 -39 D
3 -126 D
3 -69 D
2 140 D
3 397 D
3 510 D
3 314 D
2 -101 D
3 -474 D
3 -604 D
3 -431 D
3 -89 D
2 170 D
3 197 D
3 55 D
3 -88 D
2 -143 D
3 -107 D
3 12 D
3 178 D
2 261 D
3 198 D
3 101 D
3 97 D
3 153 D
2 158 D
3 73 D
3 -85 D
3 -254 D
2 -350 D
3 -318 D
3 -213 D
3 -149 D
2 -138 D
3 -118 D
3 -39 D
3 90 D
3 233 D
2 313 D
3 300 D
3 252 D
3 248 D
2 238 D
3 115 D
3 -96 D
3 -244 D
2 -235 D
3 -136 D
3 -80 D
3 -115 D
3 -190 D
2 -239 D
3 -211 D
3 -61 D
3 175 D
2 372 D
3 402 D
3 286 D
3 157 D
2 130 D
3 181 D
3 143 D
3 -79 D
3 -412 D
2 -665 D
3 -641 D
3 -314 D
3 122 D
2 421 D
3 479 D
3 355 D
3 162 D
2 -41 D
3 -181 D
3 -228 D
3 -208 D
3 -179 D
2 -166 D
3 -145 D
3 -100 D
3 -38 D
2 40 D
3 139 D
3 249 D
3 295 D
2 207 D
3 18 D
3 -105 D
3 -41 D
3 147 D
2 297 D
3 331 D
3 278 D
2 105 D
1136 2400 M
2 -212 D
3 -411 D
3 -424 D
2 -331 D
3 -209 D
3 -108 D
3 -79 D
3 -128 D
2 -203 D
3 -193 D
3 -44 D
3 170 D
2 317 D
3 331 D
3 265 D
3 234 D
2 265 D
3 274 D
3 168 D
3 -56 D
3 -285 D
2 -379 D
3 -281 D
3 -76 D
3 87 D
2 106 D
3 -9 D
3 -135 D
3 -146 D
2 -23 D
3 156 D
3 257 D
3 213 D
3 64 D
2 -69 D
3 -109 D
3 -76 D
3 -49 D
2 -80 D
3 -121 D
3 -106 D
3 -34 D
2 30 D
3 36 D
3 9 D
3 18 D
3 87 D
2 161 D
3 165 D
3 75 D
3 -45 D
2 -108 D
3 -83 D
3 -16 D
3 35 D
2 38 D
3 4 D
3 -17 D
3 17 D
3 54 D
2 23 D
3 -79 D
3 -164 D
3 -160 D
2 -57 D
3 62 D
3 101 D
3 35 D
2 -70 D
3 -108 D
3 -52 D
3 34 D
3 74 D
2 44 D
3 4 D
3 7 D
3 66 D
2 142 D
3 179 D
3 139 D
3 33 D
2 -72 D
3 -139 D
3 -167 D
3 -157 D
3 -110 D
2 -37 D
3 29 D
3 78 D
3 103 D
2 99 D
3 53 D
3 1 D
3 -19 D
2 -5 D
3 12 D
3 2 D
3 -34 D
3 -64 D
2 -51 D
3 -3 D
3 38 D
3 26 D
2 -31 D
3 -71 D
3 -69 D
3 -39 D
2 -22 D
3 -12 D
3 15 D
3 69 D
3 115 D
2 117 D
3 72 D
3 1 D
3 -50 D
2 -66 D
3 -58 D
3 -31 D
3 -9 D
2 2 D
3 5 D
3 6 D
3 14 D
3 17 D
2 0 D
3 -30 D
3 -46 D
3 -33 D
2 -3 D
3 18 D
3 30 D
3 41 D
2 52 D
3 55 D
3 43 D
3 11 D
3 -29 D
2 -59 D
3 -77 D
3 -72 D
3 -50 D
2 -11 D
3 13 D
3 16 D
3 10 D
2 25 D
3 63 D
3 103 D
3 102 D
3 65 D
2 16 D
3 -4 D
3 -10 D
3 -26 D
2 -68 D
3 -104 D
3 -96 D
3 -34 D
2 30 D
3 41 D
3 -10 D
3 -73 D
3 -83 D
2 -25 D
3 51 D
3 80 D
3 49 D
2 -12 D
3 -49 D
3 -31 D
3 30 D
2 77 D
3 79 D
3 38 D
3 5 D
3 12 D
2 55 D
3 83 D
3 68 D
3 6 D
2 -54 D
3 -80 D
3 -65 D
3 -44 D
2 -44 D
3 -67 D
3 -85 D
3 -75 D
3 -40 D
2 -11 D
3 -2 D
3 -6 D
3 -7 D
2 0 D
3 25 D
3 59 D
3 75 D
2 62 D
3 31 D
3 11 D
3 15 D
3 18 D
2 7 D
3 -16 D
3 -41 D
3 -46 D
2 -23 D
3 9 D
3 29 D
3 22 D
2 -3 D
3 -20 D
3 -17 D
3 0 D
3 17 D
2 28 D
3 33 D
3 31 D
3 26 D
2 20 D
3 10 D
3 -6 D
3 -20 D
2 -17 D
3 -4 D
3 10 D
3 9 D
3 -2 D
2 -8 D
3 -6 D
3 -7 D
3 -18 D
2 -39 D
3 -47 D
3 -28 D
3 15 D
2 47 D
3 52 D
3 25 D
3 -11 D
3 -33 D
2 -39 D
3 -38 D
3 -36 D
3 -24 D
2 -16 D
3 -5 D
3 3 D
3 16 D
2 27 D
3 37 D
3 35 D
3 22 D
3 12 D
2 20 D
3 35 D
3 38 D
3 12 D
2 -24 D
3 -42 D
3 -38 D
3 -26 D
2 -17 D
3 -14 D
3 -12 D
3 -8 D
3 -9 D
2 -9 D
3 -10 D
3 -6 D
3 -6 D
2 3 D
3 18 D
3 35 D
3 40 D
2 30 D
3 19 D
3 10 D
3 8 D
3 2 D
2 -6 D
3 -11 D
3 -8 D
3 2 D
2 7 D
3 -1 D
3 -19 D
3 -39 D
2 -43 D
3 -31 D
3 -9 D
3 17 D
3 28 D
2 32 D
3 24 D
3 15 D
3 4 D
2 -6 D
3 -10 D
3 -9 D
3 -3 D
2 0 D
3 -1 D
3 -5 D
3 -7 D
3 1 D
2 18 D
3 28 D
3 22 D
3 0 D
2 -20 D
3 -26 D
3 -16 D
3 -3 D
2 2 D
3 -8 D
3 -23 D
3 -32 D
3 -26 D
2 -16 D
3 -6 D
3 -4 D
3 1 D
2 15 D
3 34 D
3 45 D
3 36 D
2 19 D
3 6 D
3 5 D
3 4 D
3 0 D
2 -8 D
3 -13 D
3 -15 D
3 -12 D
2 -4 D
3 4 D
3 11 D
3 6 D
2 -2 D
3 -14 D
3 -20 D
3 -14 D
3 -4 D
2 2 D
3 4 D
3 -1 D
3 -6 D
2 -11 D
3 -16 D
3 -10 D
3 3 D
2 17 D
3 27 D
3 25 D
3 17 D
3 6 D
2 4 D
3 9 D
3 11 D
3 8 D
2 0 D
3 -8 D
3 -5 D
3 5 D
2 12 D
3 10 D
3 -3 D
3 -19 D
3 -29 D
2 -31 D
3 -28 D
3 -19 D
3 -3 D
2 12 D
3 23 D
3 23 D
3 13 D
2 -1 D
3 -9 D
3 -7 D
3 4 D
3 12 D
2 13 D
3 1 D
3 -10 D
3 -12 D
2 -2 D
3 7 D
3 1 D
3 -14 D
2 -27 D
3 -22 D
3 -5 D
3 14 D
3 17 D
2 8 D
3 -3 D
3 0 D
3 17 D
2 34 D
3 39 D
3 24 D
3 4 D
2 -8 D
3 -7 D
3 -2 D
3 0 D
3 -7 D
2 -17 D
3 -21 D
3 -16 D
3 -10 D
2 -8 D
3 -12 D
3 -12 D
3 -4 D
2 10 D
3 16 D
3 13 D
3 8 D
3 4 D
2 2 D
3 0 D
3 -3 D
3 -10 D
2 -11 D
3 -12 D
3 -7 D
3 0 D
2 4 D
3 4 D
3 2 D
3 6 D
3 9 D
2 8 D
3 1 D
3 -6 D
3 -7 D
2 1 D
3 6 D
3 6 D
3 -3 D
2 -5 D
3 -1 D
3 5 D
3 6 D
3 1 D
2 -5 D
3 -6 D
3 -2 D
3 5 D
2 10 D
3 9 D
3 5 D
3 -1 D
2 -3 D
3 -4 D
3 -4 D
3 -4 D
3 -5 D
2 0 D
3 6 D
3 8 D
3 8 D
2 -1 D
3 -11 D
3 -17 D
3 -16 D
2 -10 D
3 -6 D
3 -2 D
3 -1 D
3 -1 D
2 -3 D
3 -3 D
3 0 D
3 5 D
2 7 D
3 3 D
3 1 D
3 -1 D
2 1 D
3 3 D
3 4 D
3 2 D
3 2 D
2 1 D
3 2 D
3 5 D
3 9 D
2 17 D
3 20 D
3 16 D
3 2 D
2 -10 D
3 -18 D
3 -12 D
3 2 D
3 13 D
2 10 D
3 2 D
3 -8 D
3 -9 D
2 -6 D
3 -2 D
3 -1 D
3 0 D
2 4 D
3 6 D
3 2 D
3 -5 D
3 -9 D
2 -11 D
3 -8 D
3 -2 D
3 -2 D
2 -6 D
3 -7 D
3 -4 D
3 5 D
2 11 D
3 9 D
3 4 D
3 -3 D
3 -3 D
2 -1 D
3 2 D
3 1 D
3 -4 D
2 -6 D
3 -6 D
3 -3 D
3 3 D
2 5 D
3 5 D
3 3 D
3 2 D
3 1 D
2 4 D
3 7 D
3 6 D
3 3 D
2 4 D
3 3 D
3 3 D
3 -3 D
2 -9 D
3 -10 D
3 -9 D
3 -4 D
3 -2 D
2 -4 D
3 -6 D
3 -1 D
3 3 D
2 7 D
3 5 D
3 2 D
3 -1 D
2 -1 D
3 -2 D
3 -2 D
3 -7 D
3 -11 D
2 -10 D
3 -9 D
3 -3 D
3 -2 D
2 -2 D
3 -5 D
3 -7 D
3 -5 D
2 0 D
3 3 D
3 4 D
3 5 D
3 6 D
2 8 D
3 12 D
3 14 D
3 11 D
2 7 D
3 0 D
3 -4 D
3 -4 D
2 1 D
3 7 D
3 9 D
3 6 D
3 4 D
2 0 D
3 2 D
3 4 D
3 2 D
2 -4 D
3 -9 D
3 -8 D
3 -5 D
2 -1 D
3 3 D
3 6 D
3 6 D
3 4 D
2 1 D
3 -1 D
3 -3 D
3 -3 D
2 -9 D
3 -14 D
3 -16 D
3 -11 D
2 1 D
3 10 D
3 16 D
3 14 D
3 10 D
2 6 D
3 1 D
3 -1 D
3 -2 D
2 -1 D
3 -2 D
3 -2 D
3 -5 D
2 -4 D
3 -1 D
3 4 D
3 8 D
3 10 D
2 8 D
3 0 D
3 -4 D
3 -6 D
2 -5 D
3 -3 D
3 -1 D
3 -2 D
2 -1 D
3 2 D
3 5 D
3 5 D
3 2 D
2 -5 D
3 -8 D
3 -9 D
3 -7 D
2 -3 D
3 0 D
3 1 D
3 0 D
2 -2 D
3 -4 D
3 -3 D
3 3 D
3 7 D
2 8 D
3 5 D
3 1 D
3 -2 D
2 -4 D
3 -4 D
3 -3 D
3 -3 D
2 -1 D
3 -2 D
3 -1 D
3 2 D
3 1 D
2 0 D
3 -3 D
3 -6 D
3 -4 D
2 -1 D
3 3 D
3 9 D
3 10 D
2 13 D
3 10 D
3 7 D
3 3 D
3 -1 D
2 -4 D
3 -5 D
3 -4 D
3 -4 D
2 0 D
S
{0.00392 0.00392 1 C} FS
/FO {P}!
/FO {fs os}!
FO
/FO {P}!
3 0 1 282 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 0 3 0 2 390 1200 SP
/FO {fs os}!
FO
/FO {P}!
404 1200 M
34 -4 D
2 1 D
3 -2 D
6 -1 D
2 2 D
6 1 D
19 -3 D
9 2 D
5 -2 D
8 1 D
6 -3 D
11 0 D
8 3 D
11 -1 D
3 2 D
11 1 D
3 1 D
3 -3 D
3 -10 D
5 -127 D
6 -489 D
2 -66 D
5 697 D
-171 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 80 3 131 3 -211 3 587 1200 SP
/FO {fs os}!
FO
/FO {P}!
0 51 3 146 3 -52 3 -102 2 -43 5 604 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 302 2 560 3 22 3 -488 2 -396 5 621 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 211 3 146 3 -174 2 -183 4 657 1200 SP
/FO {fs os}!
FO
/FO {P}!
675 1200 M
3 -339 D
3 -77 D
6 235 D
5 56 D
4 125 D
-21 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 75 3 62 3 -100 1 -37 4 705 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 61 2 117 3 -156 0 -22 4 723 1200 SP
/FO {fs os}!
FO
/FO {P}!
741 1200 M
1 -59 D
4 59 D
2 0 D
5 -479 D
3 -128 D
6 607 D
-21 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 170 3 191 3 21 2 -69 3 -150 2 -163 6 768 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 82 2 100 3 -156 0 -26 4 795 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 167 2 183 3 -49 3 -260 0 -41 5 814 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 354 2 443 3 103 3 -371 2 -529 5 837 1200 SP
/FO {fs os}!
FO
/FO {P}!
858 1200 M
3 -366 D
3 -58 D
8 415 D
3 -39 D
6 -195 D
3 243 D
-26 0 D
FO
/FO {fs os}!
FO
/FO {P}!
900 1200 M
3 -492 D
3 -89 D
5 367 D
3 55 D
3 -88 D
5 -250 D
3 12 D
6 485 D
-31 0 D
FO
/FO {fs os}!
FO
/FO {P}!
956 1200 M
5 -486 D
8 -405 D
3 -39 D
3 90 D
8 840 D
-27 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 201 2 372 3 175 3 -61 3 -211 2 -239 3 -190 1 -47 8 1010 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 470 2 421 3 122 3 -314 3 -641 0 -58 6 1052 1200 SP
/FO {fs os}!
FO
/FO {P}!
1081 1200 M
10 -622 D
3 -100 D
3 -38 D
5 179 D
6 581 D
-27 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1145 1200 M
4 -387 D
9 -315 D
5 -396 D
3 -44 D
3 170 D
8 913 D
1 59 D
-33 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1198 1200 M
1 -119 D
3 -76 D
5 193 D
3 -9 D
6 -281 D
2 -23 D
5 315 D
-25 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1243 1200 M
6 -235 D
3 -34 D
5 66 D
3 9 D
3 18 D
3 87 D
1 89 D
-24 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1309 1200 M
6 -246 D
6 163 D
3 35 D
5 -178 D
3 -52 D
3 34 D
5 118 D
6 11 D
4 115 D
-41 0 D
FO
/FO {fs os}!
FO
/FO {P}!
0 28 3 103 3 78 3 29 2 -37 3 -110 2 -91 7 1369 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 37 3 -3 2 -34 3 1410 1200 SP
/FO {fs os}!
FO
/FO {P}!
1423 1200 M
6 -144 D
5 -61 D
3 -12 D
3 15 D
6 202 D
-23 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 15 3 14 3 6 3 5 2 2 3 -9 3 -31 0 -2 8 1462 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 21 3 41 3 30 3 18 2 -3 3 -33 3 -46 3 -28 8 1484 1200 SP
/FO {fs os}!
FO
/FO {P}!
1522 1200 M
7 -147 D
2 -11 D
9 39 D
6 119 D
-24 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1571 1200 M
2 -53 D
3 -34 D
5 71 D
3 -10 D
8 -181 D
9 180 D
2 -12 D
6 -80 D
3 30 D
3 89 D
-44 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1652 1200 M
7 -180 D
5 -51 D
3 -2 D
6 -13 D
2 0 D
3 25 D
8 196 D
3 25 D
-37 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1706 1200 M
5 -69 D
3 9 D
6 51 D
2 -3 D
6 -37 D
3 0 D
3 17 D
3 32 D
-31 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 5 2 47 3 15 3 -28 2 -39 5 1784 1200 SP
/FO {fs os}!
FO
/FO {P}!
1808 1200 M
6 -85 D
5 -40 D
3 -5 D
3 3 D
3 16 D
10 111 D
-30 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1863 1200 M
9 -46 D
11 -36 D
6 -12 D
2 3 D
6 53 D
3 38 D
-37 0 D
FO
/FO {fs os}!
FO
/FO {P}!
1 10 2 32 3 28 3 17 3 -9 3 -31 2 -43 1 -4 8 1935 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 7 3 1 3 -7 1 -1 4 1979 1200 SP
/FO {fs os}!
FO
/FO {P}!
2005 1200 M
3 -4 D
2 2 D
3 -8 D
11 -97 D
6 -10 D
3 1 D
10 116 D
-38 0 D
FO
/FO {fs os}!
FO
/FO {P}!
3 4 2 -4 2 2069 1200 SP
/FO {fs os}!
FO
/FO {P}!
2085 1200 M
6 -33 D
3 -4 D
5 6 D
3 -1 D
3 -6 D
8 -37 D
3 3 D
8 72 D
-39 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 8 3 23 3 23 2 12 3 -3 3 -19 3 -28 1 -16 8 2167 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 8 3 4 3 -7 1 -5 4 2192 1200 SP
/FO {fs os}!
FO
/FO {P}!
3 6 2 -2 1 -4 3 2212 1200 SP
/FO {fs os}!
FO
/FO {P}!
2221 1200 M
3 -12 D
5 -49 D
3 -5 D
8 39 D
3 -3 D
3 0 D
4 30 D
-29 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 10 3 16 2 10 3 -4 3 -12 3 -12 2 -8 7 2285 1200 SP
/FO {fs os}!
FO
/FO {P}!
2322 1200 M
4 -19 D
3 -7 D
3 0 D
5 8 D
3 2 D
6 16 D
-24 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 4 2 1 2 -5 3 2355 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 1 3 -1 2 2370 1200 SP
/FO {fs os}!
FO
/FO {P}!
1 2 3 -2 2 2387 1200 SP
/FO {fs os}!
FO
/FO {P}!
2437 1200 M
5 -27 D
3 -6 D
9 -4 D
5 -6 D
3 0 D
5 12 D
3 3 D
3 1 D
3 -1 D
5 4 D
3 4 D
11 7 D
3 5 D
2 8 D
-63 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2566 1200 M
1 -4 D
6 -4 D
5 -13 D
3 -4 D
3 5 D
5 20 D
-23 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2596 1200 M
4 -3 D
6 3 D
3 -4 D
5 -12 D
3 -3 D
3 3 D
5 10 D
6 5 D
3 1 D
-38 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2664 1200 M
3 -5 D
3 -2 D
5 -10 D
3 -1 D
3 3 D
5 12 D
3 2 D
11 -6 D
6 -18 D
5 -19 D
8 -7 D
9 -17 D
2 0 D
9 12 D
5 14 D
11 42 D
-91 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2 5 2 1 3 -4 1 -2 4 2760 1200 SP
/FO {fs os}!
FO
/FO {P}!
2 8 3 16 3 10 2 1 3 -11 3 -16 1 -8 7 2829 1200 SP
/FO {fs os}!
FO
/FO {P}!
2932 1200 M
3 -5 D
9 1 D
8 -9 D
3 3 D
4 10 D
-27 0 D
FO
/FO {fs os}!
FO
/FO {P}!
2975 1200 M
7 -6 D
6 -3 D
8 3 D
3 -3 D
6 -10 D
2 -1 D
3 3 D
5 17 D
-40 0 D
FO
/FO {fs os}!
FO
2 setlinecap
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: pstext -JX3i/2i -R-1/12/0/2 -P -K -O -N -M -F+f10p,Helvetica -Gwhite -W1,red
%%PROJ: xy -1.00000000 12.00000000 0.00000000 2.00000000 -1.000 12.000 0.000 2.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1825
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
/PSL_linespace 217 def
/PSL_parwidth 3600 def
/PSL_parjust 1 def
17 W
1 0 0 C
{1 A} FS
O1
PSL_font_encode 0 get 0 eq {ISOLatin1+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setfont {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
  /fc PSL_color k1 get def
  fc PSL_lastfc ne {
    /PSL_c fc 3 mul def
    0 1 2 {PSL_c add PSL_rgb exch get} for C
    /PSL_lastfc fc def
  } if
  f 32 and 32 eq {
    /PSL_UL fz 0.075 mul def
    fz 0.025 mul W
    /PSL_show {PSL_ushow} def
  }
  {
    /PSL_show {ashow} def
  } ifelse
}!
/PSL_setfont2 {
  /f exch def
  /k1 exch def
  /fz PSL_size k1 get def
  /fn PSL_fnt k1 get def
  fn PSL_lastfn eq fz PSL_lastfz eq and not {
    fz PSL_fontname fn get Y
    /PSL_lastfn fn def
    /PSL_lastfz fz def
  } if
}!
/PSL_wordheight {
  0 0 M false charpath flattenpath pathbbox /up exch def pop /down exch def pop newpath
  down PSL_ymin lt {/PSL_ymin down def} if
  up PSL_ymax gt {/PSL_ymax up def} if
}!
/PSL_ushow {
  currentpoint /y0 exch def /x0 exch def
  ashow
  currentpoint pop /x1 exch def
  x0 y0 PSL_UL sub M x1 y0 PSL_UL sub L S
  x1 y0 M
}!
/PSL_placeword {
  /k exch def
  /flag PSL_flag k get def
  k flag PSL_setfont
  /sshow {ashow} def
  PSL_col 0 eq {
    /PSL_t 0 def
    flag 4 and 4 eq {
      pr_char 0 (    ) ashow
    } if
  }
  {
    /f PSL_flag k 1 sub get def
    /PSL_t f 3 and def
    f 32 and 32 eq flag 32 and 32 eq and {/sshow {PSL_ushow} def} if
  } ifelse
  /thisword_bshift PSL_bshift k get def
  thisword_bshift 0.0 ne {0 thisword_bshift G} if
  flag 8 and 8 eq {
    pr_char 0 PSL_spaces PSL_t get sshow
    k PSL_composite
  } if
  flag 24 and 0 eq {
    pr_char 0 PSL_spaces PSL_t get sshow pr_char 0 PSL_word k get PSL_show
    PSL_width k get 0 gt {/PSL_col PSL_col 1 add def} if
  } if
  thisword_bshift 0.0 ne {0 thisword_bshift neg G} if
}!
/PSL_composite {
  /k1 exch def
  /k2 k1 1 add def
  /char1 PSL_word k1 get def
  /char2 PSL_word k2 get def
  /w1 char1 stringwidth pop def
  /w2 char2 stringwidth pop def
  /delta w1 w2 sub 2 div PSL_scale mul def
  delta 0.0 gt {
    /dx1 0 def
    /dx2 delta def
  }
  { /dx1 delta neg def
    /dx2 0 def
  } ifelse
  dx1 0 G currentpoint
  pr_char 0 char1 PSL_show M
  delta 0 G
  pr_char 0 char2 ashow
  dx2 0 G
}!
/PSL_expand {
  /k1 exch def
  /extra PSL_parwidth previous_linewidth sub comp_width add def
  PSL_CRLF k1 PSL_n1 eq or {/spread 0 def} {/spread extra def} ifelse
  /PSL_scale previous_linewidth 0.0 gt {PSL_parwidth previous_linewidth div} {1.0} ifelse def
  /ndiv lsum ncomp sub def
  ndiv 0 eq {/ndiv 1 def} if
  PSL_parjust 4 eq {/pr_char spread ndiv div def} {/pr_char 0 def} ifelse
  PSL_parjust 2 eq {extra 2 div 0 G} if
  PSL_parjust 3 eq {extra 0 G} if
  /PSL_col 0 def
}!
/PSL_textjustifier {
  /PSL_mode exch def
  /PSL_col 0 def
  /PSL_ybase 0 def
  /PSL_parheight 0 def
  /PSL_ymin 0 def
  /PSL_ymax 0 def
  /PSL_top 0 def
  /PSL_bottom 0 def
  /last_font PSL_fnt 0 get def
  /last_size PSL_size 0 get def
  /last_color PSL_color 0 get def
  /previous_linewidth 0 def
  /stop 0 def
  /start 0 def
  /lsum 0 def
  /line 0 def
  /ncomp 0 def
  /comp_width 0 def
  0 1 PSL_n1 {
    /i exch def
    /thisflag PSL_flag i get def
    i 0 eq {
      /PSL_t 0 def
      /lastflag 0 def
    }
    { /lastflag PSL_flag i 1 sub get def
      /PSL_t lastflag 3 and def
    } ifelse
    i thisflag PSL_setfont2
    /thisword_width PSL_width i get def
    /comp_add 0 def
    /compw_add 0 def
    /PSL_tabwidth (    ) stringwidth pop def
    /PSL_spacewidths PSL_spaces {stringwidth pop} forall 3 array astore def
    /ccount PSL_count i get def
    thisflag 4 and 4 eq {
      /thisword_width thisword_width PSL_tabwidth add def
      /ccount ccount 4 add def
    } if
    lastflag 8 and 8 eq {/PSL_t 0 def /comp_add 1 def /compw_add thisword_width def} if
    /new_linewidth previous_linewidth thisword_width add PSL_spacewidths PSL_t get add def
    /PSL_CRLF thisword_width 0.0 eq thisflag 16 and 0 eq and def
    /special thisflag 16 and 16 eq {true} {thisword_width 0.0 gt} ifelse def
    new_linewidth PSL_parwidth le special and
    {
      PSL_col 0 eq {
        /PSL_ymin 0 def
        /PSL_ymax 0 def
      } if
      /stop stop 1 add def
      /PSL_col PSL_col 1 add def
      /previous_linewidth new_linewidth def
      /lsum lsum ccount add PSL_t add def
      /ncomp ncomp comp_add add def
      /comp_width comp_width compw_add add def
    }
    {
      1 PSL_mode eq {
        start PSL_expand
	start PSL_placeword
      }
      {PSL_word start get PSL_wordheight
      } ifelse
      /last stop 1 sub def
      /start start 1 add def
      1 PSL_mode eq {
        start 1 last {PSL_placeword} for
      }
      {start 1 last {PSL_word exch get PSL_wordheight} for
        line 0 eq { /PSL_top PSL_ymax def} if
      } ifelse
      /start stop def
      /PSL_ybase PSL_ybase PSL_linespace sub def
      1 PSL_mode eq {0 PSL_ybase M} if
      /stop stop 1 add def
      /previous_linewidth thisword_width def
      /lsum ccount def
      /ncomp comp_add def
      /comp_width compw_add def
      /PSL_col 0 def
      /line line 1 add def
    } ifelse
  } for
  /last stop 1 sub def
  last PSL_n lt {
    /PSL_CRLF true def
    1 PSL_mode eq {
      start PSL_expand
      start PSL_placeword
      /start start 1 add def
      start 1 last {PSL_placeword} for
    }
    { /PSL_ymin 0 def
      PSL_word start get PSL_wordheight
      /start start 1 add def
      start 1 last {PSL_word exch get PSL_wordheight} for
      line 0 eq {
        /PSL_top PSL_ymax def
      } if
    } ifelse
  } if
  /PSL_bottom PSL_ymin def
  /PSL_parheight PSL_ybase neg PSL_top add PSL_bottom sub def
} def
/PSL_fontname
/Helvetica
1 array astore def
/PSL_n 13 def
/PSL_n1 12 def
/PSL_y0 600 def
/PSL_spaces [() ( ) (  ) ] def
/PSL_lastfn -1 def
/PSL_lastfz -1 def
/PSL_lastfc -1 def
/PSL_UL 0 def
/PSL_show {ashow} def
/PSL_word
($\{PSS\}) (sample.sac) ($\{JRP\}) ($B) (-Entb) ($M) (-g1/1/255/0/0/10) (-r)
(-O) (-K) (-Y2i) (\>\>) ($\{PS\})
13 array astore def
/PSL_fnt
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_size
167 167 167 167 167 167 167 167 167 167 167 167 167
13 array astore def
/PSL_flag
1 1 1 1 1 1 1 1 1 1 1 1 0
13 array astore def
/PSL_bshift
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_color
0 0 0 0 0 0 0 0 0 0 0 0 0
13 array astore def
/PSL_rgb
1 0 0
3 array astore def
/PSL_width 13 array def
/PSL_max_word_width 0 def
0 1 PSL_n1 {
  /i edef
  PSL_size i get PSL_fontname PSL_fnt i get get Y
  PSL_width i PSL_word i get stringwidth pop put
  PSL_width i get PSL_max_word_width gt { /PSL_max_word_width PSL_width i get def} if
} for
PSL_max_word_width PSL_parwidth gt { /PSL_parwidth PSL_max_word_width def } if
/PSL_count 13 array def
0 1 PSL_n1 {PSL_count exch dup PSL_word exch get length put} for
1 1 PSL_n1 {
  /k edef
  PSL_flag k get 16 and 16 eq {
    /k1 k 1 sub def
    /w1 PSL_width k1 get def
    /w2 PSL_width k get def
    PSL_width k1 w1 w2 gt {w1} {w2} ifelse put
    PSL_width k 0 put
    PSL_count k 0 put
  } if
} for
V 3600 600 T
/PSL_xgap 25 def
/PSL_ygap 25 def
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
/XL PSL_xgap neg def
/XR PSL_parwidth PSL_xgap add def
/YT PSL_ygap def
/YB PSL_parheight PSL_ygap add neg def
XL YT M XL YB L XR YB L XR YT L
FO U
0 A
V 3600 600 T
0 0 M
0 PSL_textjustifier
/PSL_justify 6 def
/PSL_x0 PSL_parwidth PSL_justify 1 sub 4 mod 0.5 mul neg mul def
/PSL_y0 PSL_parheight 2 div def
/PSL_txt_y0 PSL_top neg def
PSL_x0 PSL_y0 T
0 PSL_txt_y0 T
0 0 M
1 PSL_textjustifier U
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psxy -JX3i/2i -R-1/12/0/2 -O
%%PROJ: xy -1.00000000 12.00000000 0.00000000 2.00000000 -1.000 12.000 0.000 2.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1826
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
4 W
%%EndObject
%%PageTrailer
U
showpage

%%Trailer

end
%%EOF
